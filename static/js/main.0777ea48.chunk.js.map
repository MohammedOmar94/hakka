{"version":3,"sources":["containers/Portal/Portal.module.scss","components/Questions/Result/Result.module.scss","components/UI/NavBar/NavBar.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/UI/SideDrawer/SideDrawer.module.scss","components/UI/Button/Button.module.scss","components/UI/Section/Section.module.scss","containers/Quiz/Quiz.module.scss","components/UI/SideDrawer/Item/Item.module.scss","components/Layout/Layout.module.scss","components/UI/NavLinks/NavLinks.module.scss","components/UI/NavLinks/NavLink/NavLink.module.scss","containers/Topics/Topics.module.scss","components/Questions/Questions.module.scss","components/UI/Backdrop/Backdrop.js","components/UI/SideDrawer/Item/Item.js","components/UI/SideDrawer/SideDrawer.js","components/UI/NavLinks/NavLink/NavLink.js","components/UI/NavLinks/NavLinks.js","components/UI/NavBar/NavBar.js","components/Layout/Layout.js","containers/Portal/Portal.js","containers/Topics/Topics.js","components/Questions/Result/Result.js","components/Questions/Questions.js","components/UI/Button/Button.js","components/UI/Section/Section.js","japanese/months.js","japanese/days.js","containers/Quiz/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Portal","Slider","Slide","SlideCaption","ImageCaption","KirbySlide","WiggleSlide","MiyamotoApproveSlide","MiyamotoRejectSlide","Answers","CorrectAnswer","WrongAnswer","Answer","NavBar","Hiragana","Hamburger","Backdrop","Hidden","SideDrawer","DrawerOpen","Button","ActiveBtn","Section","SectionHeader","Quiz","Preferences","Item","Layout","NavLinks","NavLink","Topics","TopicList","Topic","TopicChoices","HideTopics","TopicChoice","ChevronDown","RotateChevron","Questions","Question","QuestionNumber","AnswerField","EmptyAnswer","NextBtn","AnswerHistory","backdrop","props","backdropClass","show","classes","react_default","a","createElement","className","onClick","clicked","item","icon","label","react_router_dom","to","pathname","href","sideDrawer","drawerOpenClass","concat","navLink","navLinks","openDrawer","withRouter","location","react","UI_NavBar_NavBar","drawerClickHandler","children","lib_default","Object","assign","infinite","speed","autoplay","autoplaySpeed","Component","state","topics","topic","param","choices","name","topicClickeHandler","index","topicChoices","document","querySelector","classList","toggle","_this2","this","map","topicObj","topicId","choice","key","search","id","result","answerWasCorrect","usersAnswer","correctAnswer","wanakana","require","questions","inputEl","useRef","inputMode","setTimeout","current","bind","IMEMode","question","questionIndex","length","endOfQuiz","onSubmit","event","next","answer","text","emptyAnswer","ref","type","autoFocus","autoComplete","placeholder","value","answerHistory","Result","toHiragana","button","selected","section","months","month","translations","days","day","score","sectionName","shuffle","array","i","j","Math","floor","random","_ref","handleNext","_this","target","answerField","toRomaji","toConsumableArray","console","log","push","setState","prevState","preventDefault","setInputMode","setUpDateQuiz","jpMonths","jpDays","dates","dayEng","monthEng","dayJp","monthJp","queryString","parse","history","App","sideDrawerOpen","drawerToggleClickHandler","backdropClickHandler","react_router","path","exact","component","Boolean","window","hostname","match","app","basename","process","src_App","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0777ea48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Portal\":\"Portal_Portal__12e22\",\"Slider\":\"Portal_Slider__3c_hP\",\"Slide\":\"Portal_Slide__DDgBl\",\"SlideCaption\":\"Portal_SlideCaption__1niW-\",\"ImageCaption\":\"Portal_ImageCaption__QyJlB\",\"KirbySlide\":\"Portal_KirbySlide__1ZUNI\",\"WiggleSlide\":\"Portal_WiggleSlide__p42MY\",\"MiyamotoApproveSlide\":\"Portal_MiyamotoApproveSlide__24Lef\",\"MiyamotoRejectSlide\":\"Portal_MiyamotoRejectSlide__3utjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Answers\":\"Result_Answers__1I48m\",\"CorrectAnswer\":\"Result_CorrectAnswer__RoC7K\",\"WrongAnswer\":\"Result_WrongAnswer__2rlzT\",\"Answer\":\"Result_Answer__1_i-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__1nlbe\",\"Hiragana\":\"NavBar_Hiragana__BN2nx\",\"Hamburger\":\"NavBar_Hamburger__1qvqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1p2af\",\"Hidden\":\"Backdrop_Hidden__375I_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__31_nM\",\"DrawerOpen\":\"SideDrawer_DrawerOpen__2kFFb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1q8mH\",\"ActiveBtn\":\"Button_ActiveBtn__OB75O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__7AyTM\",\"SectionHeader\":\"Section_SectionHeader__spjuW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__1ECBO\",\"Preferences\":\"Quiz_Preferences__3YPid\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Item_Item__1eUVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__7kSfi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinks\":\"NavLinks_NavLinks__1ZV24\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLink\":\"NavLink_NavLink__13kiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Topics\":\"Topics_Topics__tS7mK\",\"TopicList\":\"Topics_TopicList__1bNEk\",\"Topic\":\"Topics_Topic__3F-f8\",\"TopicChoices\":\"Topics_TopicChoices__4DH4a\",\"HideTopics\":\"Topics_HideTopics__1TIph\",\"TopicChoice\":\"Topics_TopicChoice__2IevC\",\"ChevronDown\":\"Topics_ChevronDown__tJ5zp\",\"RotateChevron\":\"Topics_RotateChevron__2Y4ZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Questions\":\"Questions_Questions__2eqNU\",\"Question\":\"Questions_Question__3KKfj\",\"QuestionNumber\":\"Questions_QuestionNumber__36Tho\",\"AnswerField\":\"Questions_AnswerField__3TrNV\",\"EmptyAnswer\":\"Questions_EmptyAnswer__3AvGR\",\"NextBtn\":\"Questions_NextBtn__34mrB\",\"AnswerHistory\":\"Questions_AnswerHistory__NT6V4\"};","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.scss';\r\n\r\nconst backdrop = (props) => {\r\n  const backdropClass = props.show ? classes.Backdrop : classes.Hidden;\r\n  return <div className={backdropClass} onClick={props.clicked}/>\r\n}\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport classes from './Item.module.scss';\r\n\r\nconst item = (props) => {\r\n  let icon;\r\n  switch (props.label) {\r\n    case \"Partner Up\":\r\n      icon = <i className=\"fas fa-user-friends\"></i>;\r\n      break;\r\n    case \"Games\":\r\n      icon = <i className=\"fas fa-gamepad\"></i>;\r\n      break;\r\n    case \"Quizzes\":\r\n      icon = <i className=\"fas fa-pencil-alt\" />;\r\n      break;\r\n    case \"Profile\":\r\n      icon = <i className=\"fas fa-user-circle\"></i>\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <Link to={{pathname: props.href}} className={classes.Item}>\r\n      { icon }\r\n      <p>{props.label}</p>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default item;","import React from 'react';\r\n\r\nimport classes from './SideDrawer.module.scss';\r\nimport Item from './Item/Item';\r\n\r\nconst sideDrawer = (props) => {\r\n  let drawerOpenClass = props.show ? classes.DrawerOpen : null;\r\n  return (\r\n    <nav className={`${classes.SideDrawer} ${drawerOpenClass}`}>\r\n      <ul>\r\n        <li onClick={props.clicked}>\r\n          <Item label='Partner Up' />\r\n        </li>\r\n        <li onClick={props.clicked}>\r\n          <Item label=\"Games\" />\r\n        </li>\r\n        <li onClick={props.clicked}>\r\n          <Item href='/topics' label=\"Quizzes\" />\r\n        </li>\r\n        <li onClick={props.clicked}>\r\n         <Item label='Profile' />\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default sideDrawer;","import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nimport classes from \"./NavLink.module.scss\";\r\n\r\nconst navLink = props => {\r\n  let icon;\r\n  switch (props.label) {\r\n    case \"Partner Up\":\r\n      icon = <i className=\"fas fa-user-friends\"></i>;\r\n      break;\r\n    case \"Games\":\r\n      icon = <i className=\"fas fa-gamepad\"></i>;\r\n      break;\r\n    case \"Quizzes\":\r\n      icon = <i className=\"fas fa-pencil-alt\" />;\r\n      break;\r\n    case \"Profile\":\r\n      icon = <i className=\"fas fa-user-circle\"></i>\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <Link to={{pathname: props.href}} className={classes.NavLink}>\r\n      { icon }\r\n      <p>{props.label}</p>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default navLink;\r\n","import React from 'react';\r\n\r\nimport classes from './NavLinks.module.scss';\r\nimport NavLink from './NavLink/NavLink';\r\n\r\nconst navLinks = (props) => (\r\n  <div className={classes.NavLinks}>\r\n    <NavLink label='Partner Up' />\r\n    <NavLink label='Games' />\r\n    <NavLink href='/topics' label='Quizzes' />\r\n    <NavLink label='Profile' />\r\n  </div>\r\n);\r\n\r\nexport default navLinks;","import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport classes from \"./NavBar.module.scss\";\r\n\r\nconst NavBar = props => (\r\n  <header className={classes.NavBar}>\r\n    <button className={classes.Hamburger} onClick={props.openDrawer}>\r\n      <i className=\"fas fa-bars\"></i>\r\n    </button>\r\n    <Link to={{pathname: '/'}} >\r\n      <h1>\r\n        <p className={classes.Hiragana}>しつもん</p>\r\n        shitsumon\r\n      </h1>\r\n    </Link>\r\n  </header>\r\n);\r\n\r\nexport default NavBar;\r\n","import React, { Fragment } from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport classes from \"./Layout.module.scss\";\r\nimport NavLinks from \"../UI/NavLinks/NavLinks\";\r\nimport NavBar from \"../UI/NavBar/NavBar\";\r\n\r\nconst layout = props => {\r\n  let navLinks = null;\r\n  if (props.location.pathname !== '/quiz') {\r\n    navLinks = <NavLinks />;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <NavBar openDrawer={props.drawerClickHandler} />\r\n      <main className={classes.Layout}>{props.children}</main>\r\n      <footer>\r\n        { navLinks }\r\n      </footer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(layout);\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport classes from './Portal.module.scss';\r\nimport Slider from \"react-slick\";\r\n\r\n\r\nclass Portal extends Component {\r\n  render() {\r\n    const settings = {\r\n      // arrows: false,\r\n      // lazyLoad: true,\r\n      // fade: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      // swipe: false,\r\n      autoplay: true,\r\n      autoplaySpeed: 4000,\r\n    };\r\n    return (\r\n      <Fragment>\r\n        <Slider {...settings} className={classes.Slider}>\r\n          <Fragment>\r\n            <div className={classes.Slide}>\r\n              <p className={classes.SlideCaption}>So this is currently a placeholder.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.MiyamotoApproveSlide}`}>\r\n              <p className={classes.ImageCaption}>The idea of this site is to auto-generate Japanese questions with the words you currently know</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={classes.Slide}>\r\n              <p className={classes.SlideCaption}>or based on general things like dates, times etc.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.MiyamotoRejectSlide}`}>\r\n              <p className={classes.ImageCaption}>...but we're still faaaaaar away from that.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.KirbySlide}`} >\r\n              <p className={classes.ImageCaption}>I know, we've betrayed you and Kirby.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={classes.Slide}>\r\n            <p className={classes.SlideCaption}>But don't worry</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.WiggleSlide}`}>\r\n              <p className={classes.ImageCaption}>It will be worth the wait</p>\r\n            </div>\r\n          </Fragment>\r\n        </Slider>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portal;","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport classes from \"./Topics.module.scss\";\r\n\r\nclass Topics extends Component {\r\n  state = {\r\n    topics: [\r\n      {\r\n        topic: \"Dates 年月日\",\r\n        icon: \"fas fa-calendar-alt\",\r\n        param: \"dates\",\r\n        choices: [\r\n          { name: \"Dates\", param: \"dates\" },\r\n          { name: \"Months\", param: \"months\" },\r\n          { name: \"Days of the month\", param: \"days_of_the_month\" }\r\n        ]\r\n      },\r\n      { topic: \"Times 時間\", icon: \"fas fa-clock\", param: 'times', choices: [] },\r\n      { topic: \"Numbers 番号\", icon: \"fas fa-calculator\", param: 'numbers', choices: [] }\r\n    ]\r\n  };\r\n\r\n  topicClickeHandler = index => {\r\n    const topicChoices = document.querySelector(`#topic-choices-${index}`).classList;\r\n    const chevronClassList = document.querySelector(`#chevron-${index}`).classList;\r\n    chevronClassList.toggle(classes.RotateChevron);\r\n    topicChoices.toggle(classes.HideTopics);\r\n  };\r\n\r\n  render() {\r\n    const topics = this.state.topics.map((topicObj, index) => {\r\n      const topicId = `topic-${index}`;\r\n      const topicChoices = topicObj.choices.map(choice => (\r\n        <Link\r\n          key={choice.param}\r\n          className={`${classes.TopicChoice} disable-select`}\r\n          to={{ pathname: `quiz`, search: `?topic=${choice.param}` }}>{choice.name}</Link>\r\n      ));\r\n      return (\r\n        <Fragment key={topicId}>\r\n          <li id={topicId} className={classes.Topic} onClick={() => this.topicClickeHandler(index)}>\r\n            <p>\r\n              <i className={topicObj.icon} />{topicObj.topic}\r\n            </p>\r\n            <i id={`chevron-${index}`} className={`${classes.ChevronDown} fas fa-chevron-down`}/>\r\n          </li>\r\n          <div id={`topic-choices-${index}`} className={`${classes.HideTopics} ${classes.TopicChoices}`}>\r\n            {topicChoices}\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    });\r\n    return (\r\n      <div className={classes.Topics}>\r\n        <ul className={classes.TopicList}>{topics}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Topics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './Result.module.scss';\r\n\r\nconst result = (props) => {\r\n  const answerGiven = () => {\r\n    if (props.answerWasCorrect) {\r\n      return (\r\n        <span className={classes.CorrectAnswer}>\r\n          {props.usersAnswer}\r\n          <i className={`fas fa-check-circle ${classes.CorrectAnswer}`}></i>\r\n        </span>\r\n      );\r\n    }\r\n    return (\r\n      <span className={classes.WrongAnswer}>\r\n        {props.usersAnswer}\r\n        <i className={`fas fa-times-circle ${classes.WrongAnswer}`}></i>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const correctAnswer = () => {\r\n    if (!props.answerWasCorrect) {\r\n      return <p className={classes.CorrectAnswer}>The correct answer was {props.correctAnswer}</p>\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={props.className}>\r\n      <p className={classes.Answers}>You wrote {answerGiven()}</p>\r\n      {correctAnswer()}\r\n    </section>\r\n  );\r\n}\r\n\r\nresult.propTypes = {\r\n  className: PropTypes.string,\r\n  answerWasCorrect: PropTypes.bool.isRequired,\r\n  usersAnswer: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default result;","import React, { Fragment, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Questions.module.scss\";\r\nimport Result from  './Result/Result';\r\n\r\nconst wanakana = require('wanakana');\r\n\r\nconst questions = props => {\r\n  let inputEl = useRef(null);\r\n  if (props.inputMode !== 'Default') {\r\n    // Cheeky workaround for wanakana so the binding always works.\r\n    setTimeout(() => {\r\n      if (inputEl.current) {\r\n        wanakana.bind(inputEl.current, { IMEMode: props.inputMode });\r\n      }\r\n    }, 200);\r\n    }\r\n\r\n  const question = props.questions[props.questionIndex];\r\n\r\n  const submitHandler = (event) => props.next(event, question.id, question.answer);\r\n\r\n  if (props.questions.length && !props.endOfQuiz) {\r\n    return (\r\n      <form className={classes.Questions} onSubmit={submitHandler}>\r\n        <h4 className={classes.QuestionNumber}>Question {props.questionIndex + 1} of {props.questions.length}</h4>\r\n        <section key={question.id} className={classes.Question}>\r\n          <p>{question.text}</p>\r\n          <input\r\n            key={props.inputMode}\r\n            className={props.emptyAnswer ? classes.EmptyAnswer : classes.AnswerField}\r\n            ref={inputEl}\r\n            type=\"text\"\r\n            name=\"answerField\"\r\n            autoFocus\r\n            autoComplete=\"off\"\r\n            placeholder=\"Type the Japanese word here\"\r\n            value={props.usersAnswer}\r\n          />\r\n          <input className={classes.NextBtn} type=\"submit\" value=\"Next\"/>\r\n        </section>\r\n      </form>\r\n    );\r\n  } else if (props.endOfQuiz){\r\n    return (\r\n      <div className={classes.Questions}>\r\n      { props.answerHistory.map((question, index) => (\r\n        <Fragment key={'answer-' + (index + 1)} >\r\n          <h4 className={classes.QuestionNumber}>Question {index + 1} - {question.text}</h4>\r\n          <Result className={classes.AnswerHistory}\r\n            answerWasCorrect={question.answerWasCorrect}\r\n            correctAnswer={wanakana.toHiragana(question.correctAnswer)}\r\n            usersAnswer={question.usersAnswer}\r\n          />\r\n        </Fragment>\r\n      ))}\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nquestions.propTypes = {\r\n  questions: PropTypes.array.isRequired,\r\n  questionIndex: PropTypes.number.isRequired,\r\n  emptyAnswer: PropTypes.bool.isRequired,\r\n  inputMode: PropTypes.string.isRequired,\r\n  endOfQuiz: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default questions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './Button.module.scss';\r\n\r\nconst button = props => (\r\n  <button className={props.selected ? classes.ActiveBtn : classes.Button } onClick={props.onClick}>{props.children}</button>\r\n)\r\n\r\nbutton.propTypes = {\r\n  selected: PropTypes.bool\r\n}\r\n\r\nexport default button;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from \"./Section.module.scss\";\r\n\r\nconst section = props => (\r\n  <section className={`${classes.Section} ${props.className}`}>\r\n    <h2 className={classes.SectionHeader}>{props.name}</h2>\r\n    {props.children}\r\n  </section>\r\n);\r\n\r\nsection.propTypes = {\r\n  className: PropTypes.string,\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default section;\r\n","const months = [\r\n  { month: \"January\", translations: [ \"ichigatsu\" ]},\r\n  { month: \"Feburary\", translations: [ \"nigatsu\" ]},\r\n  { month: \"March\", translations: [ \"sangatsu\" ]},\r\n  { month: \"April\", translations: [ \"shigatsu\" ]},\r\n  { month: \"May\", translations: [ \"gogatsu\" ]},\r\n  { month: \"June\", translations: [ \"rokugatsu\" ]},\r\n  { month: \"July\", translations: [ \"shichigatsu\"  ]},\r\n  { month: \"August\", translations: [ \"hachigatsu\" ]},\r\n  { month: \"September\", translations: [ \"kugatsu\" ]},\r\n  { month: \"October\", translations: [ \"juugatsu\" ]},\r\n  { month: \"November\", translations: [ \"juuichigatsu\" ]},\r\n  { month: \"December\", translations: [ \"juunigatsu\" ]}\r\n];\r\n\r\nexport default months;","const days = [\r\n  { day: \"1st\", translations: [\"tsuitachi\"] },\r\n  { day: \"2nd\", translations: [\"futsuka\"] },\r\n  { day: \"3rd\", translations: [\"mikka\"] },\r\n  { day: \"4th\", translations: [\"yokka\"] },\r\n  { day: \"5th\", translations: [\"itsuka\"] },\r\n  { day: \"6th\", translations: [\"muika\"] },\r\n  { day: \"7th\", translations: [\"nanoka\"] },\r\n  { day: \"8th\", translations: [\"youka\"] },\r\n  { day: \"9th\", translations: [\"kokonoka\"] },\r\n  { day: \"10th\", translations: [\"touka\"] },\r\n  { day: \"11th\", translations: [\"juuichinichi\"] },\r\n  { day: \"12th\", translations: [\"juuninichi\"] },\r\n  { day: \"13th\", translations: [\"juusannichi\"] },\r\n  { day: \"14th\", translations: [\"juuyokka\"] },\r\n  { day: \"15th\", translations: [\"juugonichi\"] },\r\n  { day: \"16th\", translations: [\"juurokunichi\"] },\r\n  { day: \"17th\", translations: [\"juushichinichi\"] },\r\n  { day: \"18th\", translations: [\"juuhachinichi\"] },\r\n  { day: \"19th\", translations: [\"juukyuunichi\", \"juukunichi\"] },\r\n  { day: \"20th\", translations: [\"hatsuka\"] },\r\n  { day: \"21st\", translations: [\"nijuuichinichi\"] },\r\n  { day: \"22nd\", translations: [\"nijuuninichi\"] },\r\n  { day: \"23rd\", translations: [\"nijuusannichi\"] },\r\n  { day: \"24th\", translations: [\"nijuuyokka\"] },\r\n  { day: \"25th\", translations: [\"nijuugonichi\"] },\r\n  { day: \"26th\", translations: [\"nijuurokunichi\"] },\r\n  { day: \"27th\", translations: [\"nijuushichinichi\"] },\r\n  { day: \"28th\", translations: [\"nijuuhachinichi\"] },\r\n  { day: \"29th\", translations: [\"nijuukyuunichi\", \"nijuukunichi\"] },\r\n  { day: \"30th\", translations: [\"sanjuunichi\"] },\r\n  { day: \"31st\", translations: [\"sanjuuichinichi\"] }\r\n];\r\n\r\nexport default days;\r\n","import React, { Component } from \"react\";\r\nimport queryString from 'query-string';\r\n\r\nimport Questions from \"../../components/Questions/Questions\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Section from \"../../components/UI/Section/Section\";\r\nimport classes from \"./Quiz.module.scss\";\r\nimport jpMonths from  '../../japanese/months.js';\r\nimport jpDays from  '../../japanese/days.js';\r\n\r\nconst wanakana = require('wanakana');\r\n\r\n\r\nclass Quiz extends Component {\r\n  state = {\r\n    score: 0,\r\n    questionIndex: 0,\r\n    emptyAnswer: false,\r\n    inputMode: 'toHiragana',\r\n    questions: [],\r\n    answerHistory: [],\r\n    endOfQuiz: false,\r\n    sectionName: '',\r\n  };\r\n\r\n  shuffle = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  handleNext = (event) => {\r\n    const question = this.state.questions[this.state.questionIndex];\r\n\r\n    const usersAnswer = event.target.answerField.value;\r\n    const answerWasCorrect = wanakana.toRomaji(usersAnswer) === wanakana.toRomaji(question.answer);\r\n    const answerHistory = [...this.state.answerHistory];\r\n\r\n    console.log(usersAnswer, wanakana.toHiragana(question.answer));\r\n    let score = this.state.score;\r\n    if (answerWasCorrect) {\r\n      score = score + 1;\r\n    }\r\n    answerHistory.push({ text: question.text, usersAnswer, correctAnswer: question.answer, answerWasCorrect })\r\n    if (this.state.questionIndex + 1 === this.state.questions.length) {\r\n      this.setState({endOfQuiz: true, answerHistory, sectionName: 'Results'});\r\n    } else if (usersAnswer) {\r\n      this.setState(prevState => {\r\n        return {\r\n          questionIndex: prevState.questionIndex + 1,\r\n          score,\r\n          answerHistory,\r\n          emptyAnswer: false\r\n         }\r\n      });\r\n    } else {\r\n      this.setState({emptyAnswer: true});\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  setInputMode = (inputMode) => {\r\n    this.setState({inputMode});\r\n  }\r\n\r\n  setUpDateQuiz = () => {\r\n    // Randomise days and months\r\n    const months = this.shuffle([...jpMonths]);\r\n    const days = this.shuffle([...jpDays]);\r\n    // Reduce the days array to 12, which is the number of questions we will ask.\r\n    days.length = 12;\r\n    let dates = [];\r\n    for (let i = 0; i < months.length; i++) {\r\n      const dayEng = days[i].day;\r\n      const monthEng = months[i].month;\r\n      // The days/months may have different variations, for now will only include the first variation.\r\n      const dayJp = days[i].translations[0];\r\n      const monthJp = months[i].translations[0];\r\n      dates[i] = { id: i + 1, text: `${dayEng} ${monthEng}`, answer: `${monthJp}${dayJp}` };\r\n    }\r\n    this.setState({ questions: dates, sectionName: 'Dates 年月日' });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const search = this.props.location.search;\r\n    const queryParams = queryString.parse(search);\r\n    if (!queryParams.topic) {\r\n      this.props.history.push('/');\r\n    }\r\n    this.setUpDateQuiz();\r\n  }\r\n\r\n  render() {\r\n    let inputMode = null;\r\n    if (!this.state.endOfQuiz) {\r\n      inputMode = (\r\n        <div className={classes.Preferences}>\r\n          <p>Input mode</p>\r\n          <Button selected={this.state.inputMode === 'toHiragana'} onClick={() => this.setInputMode('toHiragana')}>Hiragana</Button>\r\n          <Button selected={this.state.inputMode === 'toKatakana'} onClick={() => this.setInputMode('toKatakana')}>Katakana</Button>\r\n          <Button selected={this.state.inputMode === 'Default'} onClick={() => this.setInputMode('Default')}>Romaji</Button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Section name={this.state.sectionName} className={classes.Quiz}>\r\n        <Questions\r\n          questions={this.state.questions}\r\n          questionIndex={this.state.questionIndex}\r\n          inputMode={this.state.inputMode}\r\n          next={(event) => this.handleNext(event) }\r\n          answerHistory={this.state.answerHistory}\r\n          emptyAnswer={this.state.emptyAnswer}\r\n          endOfQuiz={this.state.endOfQuiz} />\r\n          { inputMode }\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import React, { Component } from 'react';\n\nimport Backdrop from './components/UI/Backdrop/Backdrop';\nimport SideDrawer from './components/UI/SideDrawer/SideDrawer';\nimport Layout from './components/Layout/Layout';\nimport Portal from './containers/Portal/Portal';\nimport Topics from './containers/Topics/Topics';\nimport Quiz from './containers/Quiz/Quiz';\nimport { Route } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    sideDrawerOpen: false\n  };\n\n  drawerToggleClickHandler = () => {\n    const sideDrawerOpen = !this.state.sideDrawerOpen;\n    this.setState({sideDrawerOpen});\n  }\n\n  backdropClickHandler = () => {\n    this.setState({ sideDrawerOpen: false })\n  }\n\n  render() {\n    return (\n      <Layout drawerClickHandler={this.drawerToggleClickHandler}>\n        <SideDrawer show={this.state.sideDrawerOpen} clicked={this.drawerToggleClickHandler}/>\n        <Backdrop show={this.state.sideDrawerOpen}  clicked={this.backdropClickHandler} />\n        <Route path=\"/\" exact component={Portal} />\n        <Route path=\"/topics\" exact component={Topics} />\n        <Route path=\"/quiz\" exact component={Quiz} />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst app = (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}