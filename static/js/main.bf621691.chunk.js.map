{"version":3,"sources":["containers/Portal/Portal.module.scss","components/UI/NavBar/NavBar.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/UI/SideDrawer/SideDrawer.module.scss","components/UI/Button/Button.module.scss","components/UI/Section/Section.module.scss","containers/MyQuizzes/MyQuizzes.module.scss","components/UI/SideDrawer/Item/Item.module.scss","components/Layout/Layout.module.scss","components/UI/NavLinks/NavLinks.module.scss","components/UI/NavLinks/NavLink/NavLink.module.scss","components/Questions/Questions.module.scss","components/UI/Backdrop/Backdrop.js","components/UI/SideDrawer/Item/Item.js","components/UI/SideDrawer/SideDrawer.js","components/UI/NavLinks/NavLink/NavLink.js","components/UI/NavLinks/NavLinks.js","components/UI/NavBar/NavBar.js","components/Layout/Layout.js","containers/Portal/Portal.js","components/Questions/Result/Result.js","components/Questions/Questions.js","components/UI/Button/Button.js","components/UI/Section/Section.js","japanese/months.js","japanese/days.js","containers/MyQuizzes/MyQuizzes.js","App.js","serviceWorker.js","index.js","components/Questions/Result/Result.module.scss"],"names":["module","exports","Portal","Slider","Slide","SlideCaption","ImageCaption","KirbySlide","WiggleSlide","MiyamotoApproveSlide","MiyamotoRejectSlide","NavBar","Hiragana","Hamburger","Backdrop","Hidden","SideDrawer","DrawerOpen","Button","ActiveBtn","Section","SectionHeader","Quiz","Preferences","Item","Layout","NavLinks","NavLink","Questions","Question","QuestionNumber","AnswerField","EmptyAnswer","NextBtn","AnswerHistory","backdrop","props","backdropClass","show","classes","react_default","a","createElement","className","onClick","clicked","item","icon","label","react_router_dom","to","pathname","href","sideDrawer","drawerOpenClass","concat","navLink","navLinks","openDrawer","layout","react","UI_NavBar_NavBar","drawerClickHandler","children","lib_default","Object","assign","arrows","infinite","speed","autoplay","autoplaySpeed","Component","result","Answers","answerWasCorrect","CorrectAnswer","usersAnswer","WrongAnswer","correctAnswer","wanakana","require","questions","inputEl","useRef","inputMode","setTimeout","current","bind","IMEMode","question","questionIndex","length","endOfQuiz","onSubmit","event","next","id","answer","key","text","emptyAnswer","ref","type","name","autoFocus","autoComplete","placeholder","value","answerHistory","map","index","Result","button","selected","section","months","month","translations","days","day","MyQuizzes","state","score","sectionName","shuffle","array","i","j","Math","floor","random","_ref","handleNext","_this","target","answerField","toRomaji","toConsumableArray","console","log","toHiragana","push","setState","prevState","preventDefault","setInputMode","setUpDateQuiz","jpMonths","jpDays","dates","dayEng","monthEng","dayJp","monthJp","this","_this2","App","sideDrawerOpen","drawerToggleClickHandler","backdropClickHandler","react_router","path","exact","component","Boolean","window","location","hostname","match","app","basename","process","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Answer"],"mappings":"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","file":"static/js/main.bf621691.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Portal\":\"Portal_Portal__12e22\",\"Slider\":\"Portal_Slider__3c_hP\",\"Slide\":\"Portal_Slide__DDgBl\",\"SlideCaption\":\"Portal_SlideCaption__1niW-\",\"ImageCaption\":\"Portal_ImageCaption__QyJlB\",\"KirbySlide\":\"Portal_KirbySlide__1ZUNI\",\"WiggleSlide\":\"Portal_WiggleSlide__p42MY\",\"MiyamotoApproveSlide\":\"Portal_MiyamotoApproveSlide__24Lef\",\"MiyamotoRejectSlide\":\"Portal_MiyamotoRejectSlide__3utjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__1nlbe\",\"Hiragana\":\"NavBar_Hiragana__BN2nx\",\"Hamburger\":\"NavBar_Hamburger__1qvqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1p2af\",\"Hidden\":\"Backdrop_Hidden__375I_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__31_nM\",\"DrawerOpen\":\"SideDrawer_DrawerOpen__2kFFb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1q8mH\",\"ActiveBtn\":\"Button_ActiveBtn__OB75O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__7AyTM\",\"SectionHeader\":\"Section_SectionHeader__spjuW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"MyQuizzes_Quiz__7Wpo5\",\"Preferences\":\"MyQuizzes_Preferences__3h-12\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Item_Item__1eUVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__7kSfi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinks\":\"NavLinks_NavLinks__1ZV24\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLink\":\"NavLink_NavLink__13kiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Questions\":\"Questions_Questions__2eqNU\",\"Question\":\"Questions_Question__3KKfj\",\"QuestionNumber\":\"Questions_QuestionNumber__36Tho\",\"AnswerField\":\"Questions_AnswerField__3TrNV\",\"EmptyAnswer\":\"Questions_EmptyAnswer__3AvGR\",\"NextBtn\":\"Questions_NextBtn__34mrB\",\"AnswerHistory\":\"Questions_AnswerHistory__NT6V4\"};","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.scss';\r\n\r\nconst backdrop = (props) => {\r\n  const backdropClass = props.show ? classes.Backdrop : classes.Hidden;\r\n  return <div className={backdropClass} onClick={props.clicked}/>\r\n}\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport classes from './Item.module.scss';\r\n\r\nconst item = (props) => {\r\n  let icon;\r\n  switch (props.label) {\r\n    case \"Partner Up\":\r\n      icon = <i className=\"fas fa-user-friends\"></i>;\r\n      break;\r\n    case \"Games\":\r\n      icon = <i className=\"fas fa-gamepad\"></i>;\r\n      break;\r\n    case \"My Quizzes\":\r\n      icon = <i className=\"fas fa-pencil-alt\" />;\r\n      break;\r\n    case \"Profile\":\r\n      icon = <i className=\"fas fa-user-circle\"></i>\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <Link to={{pathname: props.href}} className={classes.Item}>\r\n      { icon }\r\n      <p>{props.label}</p>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default item;","import React from 'react';\r\n\r\nimport classes from './SideDrawer.module.scss';\r\nimport Item from './Item/Item';\r\n\r\nconst sideDrawer = (props) => {\r\n  let drawerOpenClass = props.show ? classes.DrawerOpen : null;\r\n  return (\r\n    <nav className={`${classes.SideDrawer} ${drawerOpenClass}`}>\r\n      <ul>\r\n        <li onClick={props.clicked}>\r\n          <Item label='Partner Up' />\r\n        </li>\r\n        <li onClick={props.clicked}>\r\n          <Item label=\"Games\" />\r\n        </li>\r\n        <li onClick={props.clicked}>\r\n          <Item href='/my-tests' label=\"My Quizzes\" />\r\n        </li>\r\n        <li onClick={props.clicked}>\r\n         <Item label='Profile' />\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default sideDrawer;","import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nimport classes from \"./NavLink.module.scss\";\r\n\r\nconst navLink = props => {\r\n  let icon;\r\n  switch (props.label) {\r\n    case \"Partner Up\":\r\n      icon = <i className=\"fas fa-user-friends\"></i>;\r\n      break;\r\n    case \"Games\":\r\n      icon = <i className=\"fas fa-gamepad\"></i>;\r\n      break;\r\n    case \"My Quizzes\":\r\n      icon = <i className=\"fas fa-pencil-alt\" />;\r\n      break;\r\n    case \"Profile\":\r\n      icon = <i className=\"fas fa-user-circle\"></i>\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <Link to={{pathname: props.href}} className={classes.NavLink}>\r\n      { icon }\r\n      <p>{props.label}</p>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default navLink;\r\n","import React from 'react';\r\n\r\nimport classes from './NavLinks.module.scss';\r\nimport NavLink from './NavLink/NavLink';\r\n\r\nconst navLinks = (props) => (\r\n  <div className={classes.NavLinks}>\r\n    <NavLink label='Partner Up' />\r\n    <NavLink label='Games' />\r\n    <NavLink href='/my-tests' label='My Quizzes' />\r\n    <NavLink label='Profile' />\r\n  </div>\r\n);\r\n\r\nexport default navLinks;","import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport classes from \"./NavBar.module.scss\";\r\n\r\nconst NavBar = props => (\r\n  <header className={classes.NavBar}>\r\n    <button className={classes.Hamburger} onClick={props.openDrawer}>\r\n      <i className=\"fas fa-bars\"></i>\r\n    </button>\r\n    <Link to={{pathname: '/'}} >\r\n      <h1>\r\n        <p className={classes.Hiragana}>しつもん</p>\r\n        shitsumon\r\n      </h1>\r\n    </Link>\r\n  </header>\r\n);\r\n\r\nexport default NavBar;\r\n","import React, { Fragment } from \"react\";\r\nimport classes from \"./Layout.module.scss\";\r\n\r\nimport NavLinks from \"../UI/NavLinks/NavLinks\";\r\nimport NavBar from \"../UI/NavBar/NavBar\";\r\n\r\nconst layout = props => {\r\n  return (\r\n    <Fragment>\r\n      <NavBar openDrawer={props.drawerClickHandler} />\r\n      <main className={classes.Layout}>{props.children}</main>\r\n      <footer>\r\n        <NavLinks />\r\n      </footer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default layout;\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport classes from './Portal.module.scss';\r\nimport Slider from \"react-slick\";\r\n\r\n\r\nclass Portal extends Component {\r\n  render() {\r\n    const settings = {\r\n      arrows: false,\r\n      // lazyLoad: true,\r\n      // fade: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      // swipe: false,\r\n      autoplay: true,\r\n      autoplaySpeed: 4000,\r\n    };\r\n    return (\r\n      <Fragment>\r\n        <Slider {...settings} className={classes.Slider}>\r\n          <Fragment>\r\n            <div className={classes.Slide}>\r\n              <p className={classes.SlideCaption}>So this is currently a placeholder.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.MiyamotoApproveSlide}`}>\r\n              <p className={classes.ImageCaption}>The idea of this site is to auto-generate Japanese questions with the words you currently know</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={classes.Slide}>\r\n              <p className={classes.SlideCaption}>or based on general things like dates, times etc.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.MiyamotoRejectSlide}`}>\r\n              <p className={classes.ImageCaption}>...but we're still faaaaaar away from that.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.KirbySlide}`} >\r\n              <p className={classes.ImageCaption}>I know, we've betrayed you and Kirby.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={classes.Slide}>\r\n            <p className={classes.SlideCaption}>But don't worry</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.WiggleSlide}`}>\r\n              <p className={classes.ImageCaption}>It will be worth the wait</p>\r\n            </div>\r\n          </Fragment>\r\n        </Slider>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './Result.module.scss';\r\n\r\nconst result = (props) => {\r\n  const answerGiven = () => {\r\n    if (props.answerWasCorrect) {\r\n      return (\r\n        <span className={classes.CorrectAnswer}>\r\n          {props.usersAnswer}\r\n          <i className={`fas fa-check-circle ${classes.CorrectAnswer}`}></i>\r\n        </span>\r\n      );\r\n    }\r\n    return (\r\n      <span className={classes.WrongAnswer}>\r\n        {props.usersAnswer}\r\n        <i className={`fas fa-times-circle ${classes.WrongAnswer}`}></i>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const correctAnswer = () => {\r\n    if (!props.answerWasCorrect) {\r\n      return <p className={classes.CorrectAnswer}>The correct answer was {props.correctAnswer}</p>\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={props.className}>\r\n      <p className={classes.Answers}>You wrote {answerGiven()}</p>\r\n      {correctAnswer()}\r\n    </section>\r\n  );\r\n}\r\n\r\nresult.propTypes = {\r\n  className: PropTypes.string,\r\n  answerWasCorrect: PropTypes.bool.isRequired,\r\n  usersAnswer: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default result;","import React, { Fragment, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Questions.module.scss\";\r\nimport Result from  './Result/Result';\r\n\r\nconst wanakana = require('wanakana');\r\n\r\nconst questions = props => {\r\n  let inputEl = useRef(null);\r\n  if (props.inputMode !== 'Default') {\r\n    // Cheeky workaround for wanakana so the binding always works.\r\n    setTimeout(() => {\r\n      if (inputEl.current) {\r\n        wanakana.bind(inputEl.current, { IMEMode: props.inputMode });\r\n      }\r\n    }, 200);\r\n    }\r\n\r\n  const question = props.questions[props.questionIndex];\r\n\r\n  const submitHandler = (event) => props.next(event, question.id, question.answer);\r\n\r\n  if (props.questions.length && !props.endOfQuiz) {\r\n    return (\r\n      <form className={classes.Questions} onSubmit={submitHandler}>\r\n        <h4 className={classes.QuestionNumber}>Question {props.questionIndex + 1} of {props.questions.length}</h4>\r\n        <section key={question.id} className={classes.Question}>\r\n          <p>{question.text}</p>\r\n          <input\r\n            key={props.inputMode}\r\n            className={props.emptyAnswer ? classes.EmptyAnswer : classes.AnswerField}\r\n            ref={inputEl}\r\n            type=\"text\"\r\n            name=\"answerField\"\r\n            autoFocus\r\n            autoComplete=\"off\"\r\n            placeholder=\"Type the Japanese word here\"\r\n            value={props.usersAnswer}\r\n          />\r\n          <input className={classes.NextBtn} type=\"submit\" value=\"Next\"/>\r\n        </section>\r\n      </form>\r\n    );\r\n  } else if (props.endOfQuiz){\r\n    return (\r\n      <div className={classes.Questions}>\r\n      { props.answerHistory.map((question, index) => (\r\n        <Fragment key={'answer-' + (index + 1)} >\r\n          <h4 className={classes.QuestionNumber}>Question {index + 1} - {question.text}</h4>\r\n          <Result className={classes.AnswerHistory}\r\n            answerWasCorrect={question.answerWasCorrect}\r\n            correctAnswer={question.correctAnswer}\r\n            usersAnswer={question.usersAnswer}\r\n          />\r\n        </Fragment>\r\n      ))}\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nquestions.propTypes = {\r\n  questions: PropTypes.array.isRequired,\r\n  questionIndex: PropTypes.number.isRequired,\r\n  emptyAnswer: PropTypes.bool.isRequired,\r\n  inputMode: PropTypes.string.isRequired,\r\n  endOfQuiz: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default questions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './Button.module.scss';\r\n\r\nconst button = props => (\r\n  <button className={props.selected ? classes.ActiveBtn : classes.Button } onClick={props.onClick}>{props.children}</button>\r\n)\r\n\r\nbutton.propTypes = {\r\n  selected: PropTypes.bool\r\n}\r\n\r\nexport default button;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from \"./Section.module.scss\";\r\n\r\nconst section = props => (\r\n  <section className={`${classes.Section} ${props.className}`}>\r\n    <h2 className={classes.SectionHeader}>{props.name}</h2>\r\n    {props.children}\r\n  </section>\r\n);\r\n\r\nsection.propTypes = {\r\n  className: PropTypes.string,\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default section;\r\n","const months = [\r\n  { month: \"January\", translations: [ \"ichigatsu\" ]},\r\n  { month: \"Feburary\", translations: [ \"nigatsu\" ]},\r\n  { month: \"March\", translations: [ \"sangatsu\" ]},\r\n  { month: \"April\", translations: [ \"shigatsu\" ]},\r\n  { month: \"May\", translations: [ \"gogatsu\" ]},\r\n  { month: \"June\", translations: [ \"rokugatsu\" ]},\r\n  { month: \"July\", translations: [ \"shichigatsu\"  ]},\r\n  { month: \"August\", translations: [ \"hachigatsu\" ]},\r\n  { month: \"September\", translations: [ \"kugatsu\" ]},\r\n  { month: \"October\", translations: [ \"juugatsu\" ]},\r\n  { month: \"November\", translations: [ \"juuichigatsu\" ]},\r\n  { month: \"December\", translations: [ \"juunigatsu\" ]}\r\n];\r\n\r\nexport default months;","const days = [\r\n  { day: \"1st\", translations: [\"tsuitachi\"] },\r\n  { day: \"2nd\", translations: [\"futsuka\"] },\r\n  { day: \"3rd\", translations: [\"mikka\"] },\r\n  { day: \"4th\", translations: [\"yokka\"] },\r\n  { day: \"5th\", translations: [\"itsuka\"] },\r\n  { day: \"6th\", translations: [\"muika\"] },\r\n  { day: \"7th\", translations: [\"nanoka\"] },\r\n  { day: \"8th\", translations: [\"youka\"] },\r\n  { day: \"9th\", translations: [\"kokonoka\"] },\r\n  { day: \"10th\", translations: [\"touka\"] },\r\n  { day: \"11th\", translations: [\"juuichinichi\"] },\r\n  { day: \"12th\", translations: [\"juuninichi\"] },\r\n  { day: \"13th\", translations: [\"juusannichi\"] },\r\n  { day: \"14th\", translations: [\"juuyokka\"] },\r\n  { day: \"15th\", translations: [\"juugonichi\"] },\r\n  { day: \"16th\", translations: [\"juurokunichi\"] },\r\n  { day: \"17th\", translations: [\"juushichinichi\"] },\r\n  { day: \"18th\", translations: [\"juuhachinichi\"] },\r\n  { day: \"19th\", translations: [\"juukyuunichi\", \"juukunichi\"] },\r\n  { day: \"20th\", translations: [\"hatsuka\"] },\r\n  { day: \"21st\", translations: [\"nijuuichinichi\"] },\r\n  { day: \"22nd\", translations: [\"nijuuninichi\"] },\r\n  { day: \"23rd\", translations: [\"nijuusannichi\"] },\r\n  { day: \"24th\", translations: [\"nijuuyokka\"] },\r\n  { day: \"25th\", translations: [\"nijuugonichi\"] },\r\n  { day: \"26th\", translations: [\"nijuurokunichi\"] },\r\n  { day: \"27th\", translations: [\"nijuushichinichi\"] },\r\n  { day: \"28th\", translations: [\"nijuuhachinichi\"] },\r\n  { day: \"29th\", translations: [\"nijuukyuunichi\", \"nijuukunichi\"] },\r\n  { day: \"30th\", translations: [\"sanjuunichi\"] },\r\n  { day: \"31st\", translations: [\"sanjuuichinichi\"] }\r\n];\r\n\r\nexport default days;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Questions from \"../../components/Questions/Questions\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Section from \"../../components/UI/Section/Section\";\r\nimport classes from \"./MyQuizzes.module.scss\";\r\nimport jpMonths from  '../../japanese/months.js';\r\nimport jpDays from  '../../japanese/days.js';\r\n\r\nconst wanakana = require('wanakana');\r\n\r\n\r\nclass MyQuizzes extends Component {\r\n  state = {\r\n    score: 0,\r\n    questionIndex: 0,\r\n    emptyAnswer: false,\r\n    inputMode: 'toHiragana',\r\n    questions: [],\r\n    answerHistory: [],\r\n    endOfQuiz: false,\r\n    sectionName: '',\r\n  };\r\n\r\n  shuffle = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  handleNext = (event) => {\r\n    const question = this.state.questions[this.state.questionIndex];\r\n\r\n    const usersAnswer = event.target.answerField.value;\r\n    const answerWasCorrect = wanakana.toRomaji(usersAnswer) === wanakana.toRomaji(question.answer);\r\n    const answerHistory = [...this.state.answerHistory];\r\n\r\n    console.log(usersAnswer, wanakana.toHiragana(question.answer));\r\n    let score = this.state.score;\r\n    if (answerWasCorrect) {\r\n      score = score + 1;\r\n    }\r\n    answerHistory.push({ text: question.text, usersAnswer, correctAnswer: question.answer, answerWasCorrect })\r\n    if (this.state.questionIndex + 1 === this.state.questions.length) {\r\n      this.setState({endOfQuiz: true, answerHistory, sectionName: 'Results'});\r\n    } else if (usersAnswer) {\r\n      this.setState(prevState => {\r\n        return {\r\n          questionIndex: prevState.questionIndex + 1,\r\n          score,\r\n          answerHistory,\r\n          emptyAnswer: false\r\n         }\r\n      });\r\n    } else {\r\n      this.setState({emptyAnswer: true});\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  setInputMode = (inputMode) => {\r\n    this.setState({inputMode});\r\n  }\r\n\r\n  setUpDateQuiz = () => {\r\n    // Randomise days and months\r\n    const months = this.shuffle([...jpMonths]);\r\n    const days = this.shuffle([...jpDays]);\r\n    // Reduce the days array to 12, which is the number of questions we will ask.\r\n    days.length = 12;\r\n    let dates = [];\r\n    for (let i = 0; i < months.length; i++) {\r\n      const dayEng = days[i].day;\r\n      const monthEng = months[i].month;\r\n      // The days/months may have different variations, for now will only include the first variation.\r\n      const dayJp = days[i].translations[0];\r\n      const monthJp = months[i].translations[0];\r\n      dates[i] = { id: i + 1, text: `${dayEng} ${monthEng}`, answer: `${monthJp}${dayJp}` };\r\n    }\r\n    this.setState({ questions: dates, sectionName: 'Dates 年月日' });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setUpDateQuiz();\r\n  }\r\n\r\n  render() {\r\n    let inputMode = null;\r\n    if (!this.state.endOfQuiz) {\r\n      inputMode = (\r\n        <div className={classes.Preferences}>\r\n          <p>Input mode</p>\r\n          <Button selected={this.state.inputMode === 'toHiragana'} onClick={() => this.setInputMode('toHiragana')}>Hiragana</Button>\r\n          <Button selected={this.state.inputMode === 'toKatakana'} onClick={() => this.setInputMode('toKatakana')}>Katakana</Button>\r\n          <Button selected={this.state.inputMode === 'Default'} onClick={() => this.setInputMode('Default')}>Romaji</Button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Section name={this.state.sectionName} className={classes.Quiz}>\r\n        <Questions\r\n          questions={this.state.questions}\r\n          questionIndex={this.state.questionIndex}\r\n          inputMode={this.state.inputMode}\r\n          next={(event) => this.handleNext(event) }\r\n          answerHistory={this.state.answerHistory}\r\n          emptyAnswer={this.state.emptyAnswer}\r\n          endOfQuiz={this.state.endOfQuiz} />\r\n          { inputMode }\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyQuizzes;\r\n","import React, { Component } from 'react';\n\nimport Backdrop from './components/UI/Backdrop/Backdrop';\nimport SideDrawer from './components/UI/SideDrawer/SideDrawer';\nimport Layout from './components/Layout/Layout';\nimport Portal from './containers/Portal/Portal';\nimport MyQuizzes from './containers/MyQuizzes/MyQuizzes';\nimport { Route } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    sideDrawerOpen: false\n  };\n\n  drawerToggleClickHandler = () => {\n    const sideDrawerOpen = !this.state.sideDrawerOpen;\n    this.setState({sideDrawerOpen});\n  }\n\n  backdropClickHandler = () => {\n    this.setState({ sideDrawerOpen: false })\n  }\n\n  render() {\n    return (\n      <Layout drawerClickHandler={this.drawerToggleClickHandler}>\n        <SideDrawer show={this.state.sideDrawerOpen} clicked={this.drawerToggleClickHandler}/>\n        <Backdrop show={this.state.sideDrawerOpen}  clicked={this.backdropClickHandler} />\n        <Route path=\"/\" exact component={Portal} />\n        <Route path=\"/my-tests/\" exact component={MyQuizzes} />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst app = (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Answers\":\"Result_Answers__1I48m\",\"CorrectAnswer\":\"Result_CorrectAnswer__RoC7K\",\"WrongAnswer\":\"Result_WrongAnswer__2rlzT\",\"Answer\":\"Result_Answer__1_i-g\"};"],"sourceRoot":""}