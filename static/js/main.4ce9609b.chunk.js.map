{"version":3,"sources":["components/UI/Backdrop/Backdrop.js","components/UI/IconWithText/index.js","components/UI/Icons/Info/index.js","components/UI/ConnectionStatus/index.js","utils/connectionStatus.js","components/UI/Logo/index.js","components/UI/Header/Header.js","components/Layout/Layout.js","containers/SideDrawer/actions.js","components/UI/SideDrawer/Item/Item.js","components/UI/Icons/Flags/Somalia/index.js","components/UI/Icons/Flags/Japan/index.js","components/UI/LanguageSelector/index.js","components/UI/SideDrawer/SideDrawer.js","containers/SideDrawer/index.js","containers/Portal/Portal.js","containers/Quiz/actions.js","components/UI/Button/Button.js","components/Questions/Result/Result.js","components/Questions/Results/index.js","components/Questions/Japanese/JapaneseQuestion.js","components/UI/Section/Section.js","components/UI/Spinner/index.js","components/Quiz/Japanese/japaneseQuiz.js","components/Questions/Somali/SomaliQuestion.js","components/Quiz/Somali/somaliQuiz.js","components/Quiz/index.js","containers/Quiz/index.js","containers/Topics/actions.js","components/UI/QuizOptions/index.js","components/Topics/TopicSelect/index.js","components/UI/Icons/Pencil/index.js","components/Topics/index.js","containers/Topics/index.js","App.js","containers/Topics/reducer.js","reducers/index.js","containers/Quiz/reducer.js","containers/SideDrawer/reducer.js","serviceWorker.js","index.js","components/Questions/Result/Result.module.scss","containers/Portal/Portal.module.scss","components/UI/SideDrawer/SideDrawer.module.scss","components/UI/Section/Section.module.scss","components/Layout/Layout.module.scss","components/UI/SideDrawer/Item/Item.module.scss"],"names":["backdrop","_ref","children","color","onClick","hide","backdropClasses","classnames","concat","backdrop--hidden","react_default","a","createElement","className","defaultProps","IconWithText","Icon","icon","iconClassName","iconSize","componentClasses","iconClasses","Info","ConnectionStatus","_useState","useState","_useState2","Object","slicedToArray","isConnected","setConnectionStatus","_useState3","_useState4","setErrorsStatus","handleConnection","url","navigator","onLine","fetch","method","mode","then","respsone","ok","type","catch","error","console","warn","online","window","addEventListener","Fragment","UI_IconWithText","Logo","header","onBurgerClick","react_router_dom","to","pathname","UI_Logo","UI_ConnectionStatus","layout","props","document","react","Header","drawerClickHandler","classes","Layout","CHANGED_LANGUAGE","item","label","href","Item","SomaliaFlag","xmlns","xmlnsXlink","viewBox","fill","width","height","transform","id","points","xlinkHref","JapanFlag","cx","cy","r","LanguageSelector","onChange","sideDrawer","languageStudied","history","topicsPathname","drawerOpenClass","show","DrawerOpen","SideDrawer","clicked","UI_LanguageSelector","newLanguage","push","enhance","compose","withRouter","connect","state","ownProps","languageSelectorReducer","objectSpread","dispatch","language","Portal","lib_default","assign","infinite","speed","autoplay","autoplaySpeed","Slider","Slide","SlideCaption","MiyamotoApproveSlide","ImageCaption","MiyamotoRejectSlide","KirbySlide","WiggleSlide","Component","SET_CURRENT_QUIZ","UPDATE_ANSWER_HISTORY","button","rounded","selected","theme","defaultBtnClasses","button--active","button--rounded","button--lightTheme","button--darkTheme","backBtnClasses","rouned","result","scrollTo","questionNumber","QuestionText","questionText","Answers","answerWasCorrect","CorrectAnswer","usersAnswer","WrongAnswer","correctAnswer","Results","answerHistory","questionIndex","setQuestionIndex","showQuestion","setQuestionVisibility","selectedQuestion","Button","Result","toHiragana","question_text","map","question","index","key","results__result--correct","results__result--wrong","onQuestionClick","JapaneseQuestion","isFieldEmpty","inputMode","endOfQuiz","onSubmit","questionCount","inputValue","updateInputValue","event","react_wanakana_dist_default","name","autoFocus","autoComplete","placeholder","target","value","Questions_Results","section","Section","SectionHeader","Spinner","hasData","Backdrop","react_spinners_kit_lib","loading","size","wanakana","require","JapaneseQuiz","score","hideInputMode","location","questions","onQuizDownload","onUsersAnswer","sectionName","showCorrectPopup","setCorrectPopupVisibility","showWrongPopup","setWrongPopupVisibility","_useState5","_useState6","answerEmpty","setAnswerEmpty","_useState7","_useState8","shuffledQuestions","setShuffledQuestions","search","quizParams","queryString","parse","topic","quiz","quizId","useEffect","axios","post","response","quizData","data","log","_shuffle","resetUI","correctPopupClass","--show","wrongPopupClass","length","undefined","UI_Spinner","Japanese_JapaneseQuestion","preventDefault","answerField","toLowerCase","toRomaji","answer","usersCurrentAnswers","toConsumableArray","waitingForNextQuestion","animationDuration","text","tquestion_textext","setTimeout","handleNext","SomaliQuestion","onChoiceClick","selectedChoices","subjectPronoun","subject_pronoun","word","inflections","conjugationKey","conjugation_key","wordWithoutLastChar","slice","baseWordChoices","wordInfections","join","handleChoiceClick","selectedChoice","includes","indexOf","usersChoices","splice","verbForm","PAST_TENSE","PAST_PROGRESSIVE","PRESENT_TENSE","PRESENT_PROGRESSIVE","FIRST_PERSON","SECOND_PERSON","THIRD_PERSON_MALE","THIRD_PERSON_FEMALE","FIRST_PERSON_PLURAL","SECOND_PERSON_PLURAL","THIRD_PERSON_PLURAL","hasSelectedAnOption","AnswerChoices","choices","_ref2","choice","SomaliQuiz","updateSelectedChoices","Somali_SomaliQuestion","answers","Quiz","japaneseQuiz","somaliQuiz","quizReducer","questionData","UPDATE_TOPICS","QuizOptions","showQuizLength","topicSelect","changeQuizLength","title","quizzes","isTopicVisible","setTopicVisibility","quizLength","setQuizLength","arrowIconClasses","topic__chevron--rotate","arrowIconRightClasses","AnimateHeight_default","duration","UI_QuizOptions","quizLengthParam","urlParam","param","Pencil","Topics","onUpdateTopics","_ref$topics","topics","get","TopicSelect","topicsReducer","App","isDrawerVisible","onDrawerToggle","_this","setState","onBackdropClick","this","containers_SideDrawer","react_router","path","exact","component","initialState","reducers","combineReducers","arguments","action","actions","defineProperty","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","store","applyMiddleware","save","createStore","createStoreWithMiddleware","load","__REDUX_DEVTOOLS_EXTENSION__","app","es","basename","process","src_App","ReactDOM","render","getElementById","URL","origin","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker","module","exports","Answer"],"mappings":"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","file":"static/js/main.4ce9609b.chunk.js","sourcesContent":["import'./styles.scss';\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nbackdrop.propTypes = {\r\n  children: PropTypes.node,\r\n  color: PropTypes.string,\r\n  hide: PropTypes.bool,\r\n  onClick: PropTypes.func\r\n}\r\n\r\nbackdrop.defaultProps = {\r\n  hide: true\r\n}\r\n\r\nfunction backdrop({ children, color, onClick, hide }) {\r\n  const backdropClasses = classnames(\r\n    'backdrop',\r\n    `backdrop--${color}`,\r\n    { 'backdrop--hidden': hide }\r\n  )\r\n\r\n  return (\r\n    <div className={backdropClasses} onClick={onClick}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default backdrop;","import \"./styles.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nIconWithText.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.node,\r\n  iconClassName: PropTypes.string,\r\n  iconSize: PropTypes.oneOf([\"medium\", \"big\"])\r\n};\r\n\r\nIconWithText.defaultProps = {\r\n  iconSize: \"medium\"\r\n};\r\n\r\nfunction IconWithText({\r\n  className,\r\n  children,\r\n  icon: Icon,\r\n  iconClassName,\r\n  iconSize\r\n}) {\r\n  const componentClasses = classnames(\"iconWithText\", className);\r\n  const iconClasses = classnames(\r\n    \"iconWithText__icon\",\r\n    `iconWithText__icon--${iconSize}`,\r\n    iconClassName,\r\n    iconSize\r\n  );\r\n\r\n  return (\r\n    <span className={componentClasses}>\r\n      <Icon className={iconClasses} />\r\n      {children}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default IconWithText;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nInfo.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nfunction Info({ className }) {\r\n  const componentClasses = classnames(\"fas fa-info-circle\", className);\r\n\r\n  return <i className={componentClasses} />;\r\n}\r\n\r\nexport default Info;\r\n","import \"./styles.scss\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport { isReachable, getServerUrl } from \"../../../utils/connectionStatus\";\r\n\r\nimport IconWithText from \"../IconWithText\";\r\nimport Info from \"../Icons/Info\";\r\n\r\nfunction ConnectionStatus() {\r\n  const [isConnected, setConnectionStatus] = useState(true);\r\n  const [hasErrorsConnecting, setErrorsStatus] = useState(false);\r\n\r\n  const hasNoConnectivity = isConnected && hasErrorsConnecting;\r\n\r\n  const handleConnection = () => {\r\n    if (navigator.onLine) {\r\n      isReachable(getServerUrl()).then(online => {\r\n        if (online) {\r\n          // handle online status\r\n          setConnectionStatus(true);\r\n        } else {\r\n          setErrorsStatus(false);\r\n        }\r\n      });\r\n    } else {\r\n      // handle offline status\r\n      setConnectionStatus(false);\r\n    }\r\n  };\r\n\r\n  // Test this by running the code snippet below and then\r\n  // use the \"Offline\" checkbox in DevTools Network panel\r\n\r\n  window.addEventListener(\"online\", handleConnection);\r\n  window.addEventListener(\"offline\", handleConnection);\r\n\r\n  return (\r\n    <>\r\n      {!isConnected && (\r\n        <IconWithText\r\n          className=\"connectionStatus__no-internet-container\"\r\n          icon={Info}\r\n          iconSize=\"big\"\r\n        >\r\n          Offline\r\n        </IconWithText>\r\n      )}\r\n      {/* {hasNoConnectivity && (\r\n        <IconWithText\r\n          className=\"connectionStatus__no-internet-container\"\r\n          icon={Info}\r\n          iconSize=\"big\"\r\n        >\r\n          Issues with Internet\r\n        </IconWithText>\r\n      )} */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConnectionStatus;\r\n","export function isReachable(url) {\r\n  /**\r\n   * Note: fetch() still \"succeeds\" for 404s on subdirectories,\r\n   * which is ok when only testing for domain reachability.\r\n   *\r\n   * Example:\r\n   *   https://google.com/noexist does not throw\r\n   *   https://noexist.com/noexist does throw\r\n   */\r\n  return fetch(url, { method: 'HEAD', mode: 'no-cors' })\r\n    .then((respsone) => {\r\n      return respsone && (respsone.ok || respsone.type === 'opaque');\r\n    })\r\n    .catch((error) => {\r\n      console.warn('[conn test failure]:', error);\r\n    });\r\n}\r\n\r\nexport function getServerUrl() {\r\n  return \"https://kakarot.mohammedomar94.now.sh\";\r\n}","import './styles.scss'\r\n\r\nimport React from 'react'\r\n\r\nconst Logo = () => (\r\n  <h1 className='logo'>\r\n    <p className='logo__kana-text' >ランダム化</p>\r\n      randomiser\r\n  </h1>\r\n)\r\n\r\nexport default Logo;","import \"./styles.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport ConnectionStatus from \"../ConnectionStatus\";\r\nimport Logo from \"../Logo\";\r\n\r\nheader.propTypes = {\r\n  onBurgerClick: PropTypes.func\r\n};\r\n\r\nfunction header({ onBurgerClick }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__navigation\">\r\n        <button className=\"header__hamburger-icon\" onClick={onBurgerClick}>\r\n          <i className=\"fas fa-bars\"></i>\r\n        </button>\r\n        <Link to={{ pathname: \"/\" }}>\r\n          <Logo />\r\n        </Link>\r\n      </div>\r\n      <ConnectionStatus />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default header;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport classes from \"./Layout.module.scss\";\r\nimport Header from \"../UI/Header/Header\";\r\n\r\nconst layout = props => {\r\n  document.createElement('main');\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header onBurgerClick={props.drawerClickHandler} />\r\n      <main className={classes.Layout}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default layout;\r\n","export const CHANGED_LANGUAGE = \"CHANGED_LANGUAGE\";\r\n\r\nexport function onLanguageChange(language) {\r\n  return { type: CHANGED_LANGUAGE, language: language }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport classes from './Item.module.scss';\r\n\r\nconst item = (props) => {\r\n  let icon;\r\n  switch (props.label) {\r\n    case \"Partner Up\":\r\n      icon = <i className=\"fas fa-user-friends\"></i>;\r\n      break;\r\n    case \"Games\":\r\n      icon = <i className=\"fas fa-gamepad\"></i>;\r\n      break;\r\n    case \"Quizzes\":\r\n      icon = <i className=\"fas fa-pencil-alt\" />;\r\n      break;\r\n    case \"Profile\":\r\n      icon = <i className=\"fas fa-user-circle\"></i>\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <Link to={{pathname: props.href}} className={classes.Item}>\r\n      { icon }\r\n      <p>{props.label}</p>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default item;","import React from \"react\";\r\n\r\nexport default function SomaliaFlag({ className, onClick }) {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      onClick={onClick}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      viewBox=\"0 0 81 54\"\r\n    >\r\n      <rect fill=\"#4189DD\" width=\"81\" height=\"54\"/>\r\n      <g transform=\"translate(40.5 27) scale(13)\">\r\n      <g id=\"t\">\r\n      <polygon id=\"w\" fill=\"#FFF\" points=\"0,0 0,1 .5,1\" transform=\"translate(0 -1) rotate(18)\"/>\r\n      <use xlinkHref=\"#w\" transform=\"scale(-1 1)\"/>\r\n      </g>\r\n      <use xlinkHref=\"#t\" transform=\"rotate(72)\"/>\r\n      <use xlinkHref=\"#t\" transform=\"rotate(-72)\"/>\r\n      <use xlinkHref=\"#t\" transform=\"rotate(144)\"/>\r\n      <use xlinkHref=\"#t\" transform=\"rotate(-144)\"/>\r\n      </g>\r\n    </svg>\r\n  )\r\n}","import React from \"react\";\r\n\r\nexport default function JapanFlag({ className, onClick }) {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      onClick={onClick}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 900 600\">\r\n      <rect fill=\"#fff\" height=\"600\" width=\"900\"/>\r\n      <circle fill=\"#bc002d\" cx=\"450\" cy=\"300\" r=\"180\"/>\r\n    </svg>\r\n  )\r\n}","import \"./styles.scss\";\r\n\r\nimport React from \"react\";\r\n\r\nimport SomaliIcon from \"../Icons/Flags/Somalia\"\r\nimport JapanIcon from \"../Icons/Flags/Japan\"\r\n\r\nfunction LanguageSelector({ onChange }) {\r\n  return (\r\n    <div className=\"languageSelector\">\r\n      <div className=\"languageSelector__header-container\">\r\n        <p className=\"languageSelector__header\">Select a language</p>\r\n      </div>\r\n      <div className=\"languageSelector__icons\">\r\n        <SomaliIcon className=\"languageSelector__icon\" onClick={() => onChange(\"somali\")}/>\r\n        <JapanIcon className=\"languageSelector__icon\" onClick={() => onChange(\"japanese\")} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LanguageSelector;\r\n","import React from 'react';\r\n\r\nimport classes from './SideDrawer.module.scss';\r\nimport Item from './Item/Item';\r\nimport LanguageSelector from \"../LanguageSelector\"\r\n\r\nconst sideDrawer = (props) => {\r\n  const { languageStudied, history, onChange } = props\r\n  let topicsPathname = `/${languageStudied}/topics`\r\n\r\n  const handleChange = (newLanguage) => {\r\n    topicsPathname = `/${newLanguage}/topics`\r\n    onChange(newLanguage);\r\n    history.push(topicsPathname)\r\n    props.clicked()\r\n  }\r\n\r\n  let drawerOpenClass = props.show ? classes.DrawerOpen : null;\r\n  return (\r\n    <nav className={`${classes.SideDrawer} ${drawerOpenClass}`}>\r\n      <ul>\r\n        <li onClick={props.clicked}>\r\n          <Item label='Partner Up' />\r\n        </li>\r\n        <li onClick={props.clicked}>\r\n          <Item label=\"Games\" />\r\n        </li>\r\n        <li onClick={props.clicked}>\r\n          <Item href={topicsPathname} label=\"Quizzes\" />\r\n        </li>\r\n        <li onClick={props.clicked}>\r\n         <Item label='Profile' />\r\n        </li>\r\n      </ul>\r\n      <LanguageSelector onChange={handleChange} />\r\n    </nav>\r\n  )\r\n}\r\nexport default sideDrawer;","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\"\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { onLanguageChange } from \"./actions\";\r\n\r\nimport SideDrawer from \"../../components/UI/SideDrawer/SideDrawer\"\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { languageSelectorReducer } = state;\r\n\r\n  return {\r\n    ...languageSelectorReducer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onChange: newLanguage => dispatch(onLanguageChange(newLanguage))\r\n  };\r\n};\r\n\r\n\r\nconst enhance = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)\r\n\r\nexport default enhance(SideDrawer);\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport classes from './Portal.module.scss';\r\nimport Slider from \"react-slick\";\r\n\r\n\r\nclass Portal extends Component {\r\n  render() {\r\n    const settings = {\r\n      // arrows: false,\r\n      // lazyLoad: true,\r\n      // fade: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      // swipe: false,\r\n      autoplay: true,\r\n      autoplaySpeed: 4000,\r\n    };\r\n    return (\r\n      <Fragment>\r\n        <Slider {...settings} className={classes.Slider}>\r\n          <Fragment>\r\n            <div className={classes.Slide}>\r\n              <p className={classes.SlideCaption}>So this is currently a placeholder.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.MiyamotoApproveSlide}`}>\r\n              <p className={classes.ImageCaption}>The idea of this site is to auto-generate Japanese questions with the words you currently know</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={classes.Slide}>\r\n              <p className={classes.SlideCaption}>or based on general things like dates, times etc.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.MiyamotoRejectSlide}`}>\r\n              <p className={classes.ImageCaption}>...but we're still faaaaaar away from that.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.KirbySlide}`} >\r\n              <p className={classes.ImageCaption}>I know, we've betrayed you and Kirby.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={classes.Slide}>\r\n            <p className={classes.SlideCaption}>But don't worry</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.WiggleSlide}`}>\r\n              <p className={classes.ImageCaption}>It will be worth the wait</p>\r\n            </div>\r\n          </Fragment>\r\n        </Slider>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portal;","export const SET_CURRENT_QUIZ = \"SET_CURRENT_QUIZ\";\r\nexport const UPDATE_ANSWER_HISTORY = \"UPDATE_ANSWER_HISTORY\";\r\n\r\nexport function setCurrentQuiz(quizData) {\r\n  return { type: SET_CURRENT_QUIZ, quizData: quizData }\r\n\r\n}\r\nexport function updateAnswerHistory(questionData) {\r\n  return { type: UPDATE_ANSWER_HISTORY, questionData: questionData }\r\n}\r\n\r\n","import './styles.scss';\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nbutton.propTypes = {\r\n  rouned: PropTypes.bool,\r\n  selected: PropTypes.bool,\r\n  theme: PropTypes.oneOf(['dark', 'light']),\r\n  type: PropTypes.oneOf(['default', 'back']),\r\n}\r\n\r\nbutton.defaultProps = {\r\n  rouned: false,\r\n  theme: 'dark',\r\n  type: 'default'\r\n}\r\n\r\nfunction button({ className, children, onClick, rounded, selected, theme, type }) {\r\n  const defaultBtnClasses = classnames(\r\n    'button',\r\n    { 'button--active': selected },\r\n    { 'button--rounded': rounded },\r\n    { 'button--lightTheme': theme === 'light' },\r\n    { 'button--darkTheme': theme === 'dark' },\r\n    className\r\n  )\r\n\r\n  const backBtnClasses = classnames(\r\n    'fas fa-arrow-circle-left',\r\n    'button__close',\r\n    className\r\n  )\r\n\r\n  if (type === 'default') {\r\n    return <button className={defaultBtnClasses} onClick={onClick}>{children}</button>\r\n  } else if (type === 'back') {\r\n    return <i onClick={onClick} className={backBtnClasses}></i>\r\n  }\r\n}\r\n\r\nexport default button;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './Result.module.scss';\r\n\r\nconst result = (props) => {\r\n  window.scrollTo(0, 0)\r\n  const answerGiven = () => {\r\n    if (props.answerWasCorrect) {\r\n      return (\r\n        <span className={classes.CorrectAnswer}>\r\n          {props.usersAnswer}\r\n          <i className={`fas fa-check-circle ${classes.CorrectAnswer}`}></i>\r\n        </span>\r\n      );\r\n    }\r\n    return (\r\n      <span className={classes.WrongAnswer}>\r\n        {props.usersAnswer}\r\n        <i className={`fas fa-times-circle ${classes.WrongAnswer}`}></i>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const correctAnswer = () => {\r\n    if (!props.answerWasCorrect) {\r\n      return <p className={classes.CorrectAnswer}>The correct answer was {props.correctAnswer}</p>\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={props.className}>\r\n      <h4 className=\"questions__questionNumber\">Question {props.questionNumber}</h4>\r\n      <p className={classes.QuestionText}>{props.questionText}</p>\r\n      <p className={classes.Answers}>You wrote {answerGiven()}</p>\r\n      {correctAnswer()}\r\n    </section>\r\n  );\r\n}\r\n\r\nresult.propTypes = {\r\n  className: PropTypes.string,\r\n  answerWasCorrect: PropTypes.bool.isRequired,\r\n  usersAnswer: PropTypes.string.isRequired,\r\n  questionText: PropTypes.string.isRequired,\r\n  questionIndex: PropTypes.number.isRequired\r\n}\r\n\r\nexport default result;","import './styles.scss';\r\n\r\nimport React, { useState } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { toHiragana } from \"wanakana\";\r\n\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nimport Result from \"../Result/Result\";\r\n\r\nfunction Results({ answerHistory }) {\r\n  const [questionIndex, setQuestionIndex] = useState(null);\r\n  const [showQuestion, setQuestionVisibility] = useState(false);\r\n\r\n  const selectedQuestion = answerHistory[questionIndex];\r\n  const questionNumber = questionIndex + 1;\r\n\r\n  const resultClasses = answerWasCorrect =>\r\n    classnames(\r\n      \"results__result\",\r\n      { \"results__result--correct\": answerWasCorrect },\r\n      { \"results__result--wrong\": !answerWasCorrect }\r\n    );\r\n\r\n  const onQuestionClick = index => {\r\n    setQuestionIndex(index);\r\n    setQuestionVisibility(true);\r\n  };\r\n\r\n  const onQuestionClose = () => {\r\n    setQuestionIndex(null);\r\n    setQuestionVisibility(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"results\">\r\n      {showQuestion && (\r\n        <>\r\n          <Button\r\n            className=\"results__backBtn\"\r\n            onClick={() => onQuestionClose()}\r\n            type=\"back\"\r\n          />\r\n          <Result\r\n            className=\"results__answerHistory\"\r\n            answerWasCorrect={selectedQuestion.answerWasCorrect}\r\n            correctAnswer={toHiragana(selectedQuestion.correctAnswer)}\r\n            usersAnswer={selectedQuestion.usersAnswer}\r\n            questionNumber={questionNumber}\r\n            questionText={selectedQuestion.question_text}\r\n          />\r\n        </>\r\n        )\r\n      }\r\n      {!showQuestion &&\r\n        answerHistory.map((question, index) => (\r\n          <div\r\n            key={\"answer-\" + (index + 1)}\r\n            className={resultClasses(question.answerWasCorrect)}\r\n            onClick={() => onQuestionClick(index)}\r\n          >\r\n            {\"Question \" + (index + 1)}\r\n            {question.answerWasCorrect && <i className=\"fas fa-check\"></i>}\r\n            {!question.answerWasCorrect && <i className=\"fas fa-times\"></i>}\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import \"./styles.scss\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Results from  '../Results';\r\n\r\nimport WanakanaInput from \"react-wanakana\";\r\n\r\nJapaneseQuestion.propTypes = {\r\n  questions: PropTypes.array,\r\n  questionIndex: PropTypes.number,\r\n  isFieldEmpty: PropTypes.bool,\r\n  inputMode: PropTypes.string,\r\n  endOfQuiz: PropTypes.bool\r\n};\r\n\r\nJapaneseQuestion.defaultProps = {\r\n  inputMode: 'Default'\r\n}\r\n\r\nfunction JapaneseQuestion({\r\n  answerHistory,\r\n  isFieldEmpty,\r\n  inputMode,\r\n  endOfQuiz,\r\n  onSubmit,\r\n  question,\r\n  questionCount,\r\n  questionIndex,\r\n  usersAnswer\r\n}) {\r\n  const [inputValue, updateInputValue] = useState(\"\")\r\n  const questionNumber = questionIndex + 1;\r\n\r\n  const {\r\n    question_text: questionText\r\n  } = question;\r\n\r\n  const submitHandler = (event) => {\r\n    onSubmit(event);\r\n    updateInputValue(\"\")\r\n  }\r\n\r\n    return (\r\n      <>\r\n        {questionCount && !endOfQuiz &&\r\n          <form id=\"question_form\" className=\"japaneseQuestion\" onSubmit={submitHandler}>\r\n            <p className=\"japaneseQuestion__questionNumber\">Question {questionNumber} of {questionCount}</p>\r\n            <div className=\"japaneseQuestion__question\">\r\n              <p className=\"japaneseQuestion__questionText\">{questionText}</p>\r\n              <WanakanaInput\r\n                className={isFieldEmpty ? \"japaneseQuestion__emptyAnswer\" : \"japaneseQuestion__answerField\"}\r\n                type=\"text\"\r\n                name=\"answerField\"\r\n                autoFocus\r\n                autoComplete=\"off\"\r\n                placeholder=\"Type the Japanese word here\"\r\n                onChange={(event) => updateInputValue(event.target.value)}\r\n                value={inputValue}\r\n                to={inputMode}\r\n              />\r\n              <input className=\"japaneseQuestion__nextBtn\" type=\"submit\" value=\"Next\"/>\r\n            </div>\r\n          </form>\r\n      }\r\n      {endOfQuiz && <Results answerHistory={answerHistory} />}\r\n      </>\r\n    );\r\n};\r\n\r\nexport default JapaneseQuestion;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from \"./Section.module.scss\";\r\n\r\nconst section = props => (\r\n  <section className={`${classes.Section} ${props.className}`}>\r\n    <h2 className={classes.SectionHeader}>{props.name}</h2>\r\n    {props.children}\r\n  </section>\r\n);\r\n\r\nsection.propTypes = {\r\n  className: PropTypes.string,\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { CircleSpinner } from \"react-spinners-kit\";\r\n\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nSpinner.propTypes = {\r\n  hasData: PropTypes.bool\r\n}\r\n\r\nSpinner.defaultProps = {\r\n  hasData: false\r\n}\r\n\r\nfunction Spinner({ hasData }) {\r\n  return (\r\n    <Backdrop hide={hasData} color='white'>\r\n      <CircleSpinner\r\n        color={\"#78cdd7\"}\r\n        loading={true}\r\n        size={40}\r\n      />\r\n    </Backdrop>\r\n  )\r\n}\r\n\r\nexport default Spinner;","import \"../styles.scss\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport classnames from \"classnames\";\r\nimport axios from \"axios\";\r\n\r\nimport _shuffle from \"lodash/shuffle\";\r\n\r\nimport JapaneseQuestion from \"../../Questions/Japanese/JapaneseQuestion\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport Section from \"../../UI/Section/Section\";\r\nimport Spinner from \"../../UI/Spinner\";\r\n\r\nconst wanakana = require(\"wanakana\");\r\n\r\nfunction JapaneseQuiz({\r\n  score,\r\n  questionIndex,\r\n  hasData,\r\n  hideInputMode,\r\n  history,\r\n  inputMode,\r\n  languageStudied,\r\n  location,\r\n  questions,\r\n  answerHistory,\r\n  endOfQuiz,\r\n  onQuizDownload,\r\n  onUsersAnswer,\r\n  sectionName\r\n}) {\r\n  const [showCorrectPopup, setCorrectPopupVisibility] = useState(false);\r\n  const [showWrongPopup, setWrongPopupVisibility] = useState(false);\r\n  const [answerEmpty, setAnswerEmpty] = useState(false);\r\n  const [shuffledQuestions, setShuffledQuestions] = useState([])\r\n\r\n  const search = location.search;\r\n  const quizParams = queryString.parse(search);\r\n  const { topic, quiz } = quizParams;\r\n  const quizId = `${topic}__${quiz}`\r\n\r\n  useEffect(() => {\r\n    if (!topic) {\r\n      history.push(\"/\");\r\n      return;\r\n    }\r\n\r\n    axios.post(`https://kakarot.now.sh/${languageStudied}/load_quiz`, quizParams)\r\n      .then(response => {\r\n        const quizData =\r\n          {\r\n            data: {\r\n              ...response.data\r\n            },\r\n            id: quizId\r\n          }\r\n        onQuizDownload(quizData);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, [hasData]);\r\n\r\n  useEffect(() => {\r\n    setShuffledQuestions(_shuffle(questions))\r\n  }, [questions])\r\n\r\n  const resetUI = () => {\r\n    setCorrectPopupVisibility(false);\r\n    setWrongPopupVisibility(false);\r\n    setAnswerEmpty(false);\r\n  };\r\n\r\n  const handleNext = event => {\r\n    event.preventDefault();\r\n    const question = shuffledQuestions[questionIndex];\r\n\r\n    const usersAnswer = event.target.answerField.value.toLowerCase();\r\n    const answerWasCorrect =\r\n      wanakana.toRomaji(usersAnswer) === wanakana.toRomaji(question.answer);\r\n    const usersCurrentAnswers = [...answerHistory];\r\n\r\n    const waitingForNextQuestion = showCorrectPopup || showWrongPopup;\r\n\r\n    let animationDuration = 1100;\r\n\r\n    if (answerWasCorrect) {\r\n      score = score + 1;\r\n      setCorrectPopupVisibility(true);\r\n    } else if (!answerWasCorrect && usersAnswer) {\r\n      animationDuration = 1200;\r\n      setWrongPopupVisibility(true);\r\n    }\r\n\r\n    usersCurrentAnswers.push({\r\n      text: question.tquestion_textext,\r\n      usersAnswer,\r\n      correctAnswer: question.answer,\r\n      answerWasCorrect\r\n    });\r\n\r\n    if (questionIndex + 1 === questions.length) {\r\n      setTimeout(() => {\r\n        resetUI();\r\n        onUsersAnswer({\r\n          data: {\r\n            endOfQuiz: true,\r\n            answerHistory: usersCurrentAnswers,\r\n            sectionName: \"Results\"\r\n          },\r\n          id: quizId\r\n        });\r\n      }, animationDuration);\r\n    } else if (usersAnswer && !waitingForNextQuestion) {\r\n      setTimeout(() => {\r\n        resetUI();\r\n        onUsersAnswer({\r\n          data: {\r\n            questionIndex: questionIndex + 1,\r\n            score,\r\n            answerHistory: usersCurrentAnswers\r\n          },\r\n          id: quizId\r\n        });\r\n      }, animationDuration);\r\n    } else {\r\n      setAnswerEmpty(true);\r\n    }\r\n  };\r\n\r\n  const correctPopupClass = classnames(\"CorrectPopup\", {\r\n    \"--show\": showCorrectPopup\r\n  });\r\n\r\n  const wrongPopupClass = classnames(\"WrongPopup\", {\r\n    \"--show\": showWrongPopup\r\n  });\r\n\r\n  const questionCount = shuffledQuestions.length;\r\n  const question = questionCount ? shuffledQuestions[questionIndex] : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Spinner hasData={hasData} />\r\n      <Section name={sectionName} className={\"Quiz\"}>\r\n        {question && (\r\n          <JapaneseQuestion\r\n            question={question}\r\n            questionCount={questionCount}\r\n            questionIndex={questionIndex}\r\n            hideInputMode={hideInputMode}\r\n            inputMode={inputMode}\r\n            onSubmit={event => handleNext(event)}\r\n            answerHistory={answerHistory}\r\n            isFieldEmpty={answerEmpty}\r\n            endOfQuiz={endOfQuiz}\r\n          />\r\n        )}\r\n        <div className={correctPopupClass}>\r\n          <i className=\"far fa-smile-wink\" />\r\n          <p>正解</p>\r\n          <p>CORRECT</p>\r\n        </div>\r\n        <div className={wrongPopupClass}>\r\n          <i className=\"fas fa-times\"></i>\r\n        </div>\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JapaneseQuiz;\r\n","import \"./styles.scss\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Results from  '../Results';\r\n\r\nimport Button from \"../../UI/Button/Button\"\r\n\r\nSomaliQuestion.propTypes = {\r\n  questions: PropTypes.array,\r\n  questionNumber: PropTypes.number,\r\n  emptyAnswer: PropTypes.bool,\r\n  endOfQuiz: PropTypes.bool,\r\n  onChoiceClick: PropTypes.func\r\n};\r\n\r\nSomaliQuestion.defaultProps = {\r\n  questions: [],\r\n  questionNumber: 1,\r\n  isFieldEmpty: false\r\n}\r\n\r\nfunction SomaliQuestion({\r\n  answerHistory,\r\n  endOfQuiz,\r\n  onChoiceClick,\r\n  onSubmit,\r\n  selectedChoices,\r\n  question,\r\n  questionCount,\r\n  questionNumber\r\n}) {\r\n  const {\r\n    question_text: questionText,\r\n    subject_pronoun: subjectPronoun,\r\n    word,\r\n    inflections,\r\n    conjugation_key: conjugationKey\r\n  } = question;\r\n\r\n  const wordWithoutLastChar = word.slice(0, -1);\r\n  const baseWordChoices = [word, wordWithoutLastChar, \"sh\", \"d\"];\r\n  const wordInfections = [...inflections];\r\n\r\n  // Convert array of choices to a string, used to form users answer.\r\n  const usersAnswer = selectedChoices.join(\"\")\r\n\r\n  const handleSubmit = () => {\r\n    onSubmit(usersAnswer);\r\n  }\r\n\r\n  const handleChoiceClick = (selectedChoice) => {\r\n    if (selectedChoices.includes(selectedChoice)) {\r\n        const index = selectedChoices.indexOf(selectedChoice);\r\n        const usersChoices = [...selectedChoices]\r\n        usersChoices.splice(index, 1)\r\n        onChoiceClick(usersChoices)\r\n    } else {\r\n        onChoiceClick([...selectedChoices, selectedChoice])\r\n    }\r\n  }\r\n\r\n  const SUBJECT_PRONOUN = {\r\n    FIRST_PERSON: \"First person (I, me)\",\r\n    SECOND_PERSON: \"Second person (You)\",\r\n    THIRD_PERSON_MALE: \"Third person (Male)\",\r\n    THIRD_PERSON_FEMALE: \"Third person (Female)\",\r\n    FIRST_PERSON_PLURAL: \"First person plural (We)\",\r\n    SECOND_PERSON_PLURAL: \"Second person plural (You)\",\r\n    THIRD_PERSON_PLURAL: \"Third person plural (They)\",\r\n  }\r\n\r\n  const INFLECTIONS = {\r\n    PAST_TENSE: \"Past tense\",\r\n    PAST_PROGRESSIVE: \"Past progressive\",\r\n    PRESENT_TENSE: \"Present tense\",\r\n    PRESENT_PROGRESSIVE: \"Present progressive\"\r\n  }\r\n\r\n  const verbForm = `${INFLECTIONS[conjugationKey]} + ${SUBJECT_PRONOUN[subjectPronoun]}`;\r\n\r\n  const hasSelectedAnOption = selectedChoices.length !== 0;\r\n\r\n    return (\r\n      <>\r\n        {!endOfQuiz &&\r\n          <div className=\"somaliQuestion\">\r\n            <p className=\"somaliQuestion__questionLabel\">Question {questionNumber} of {questionCount}</p>\r\n            <div className=\"somaliQuestion__question\">\r\n              <p className=\"somaliQuestion__questionText\">{questionText}</p>\r\n              <div className=\"somaliQuestion__questionPronoun\">{verbForm}</div>\r\n              <div>\r\n                <p className=\"somaliQuestion__questionLabel\">Your answer:</p>\r\n                {hasSelectedAnOption && <span className=\"somaliQuestion__questionText\">{usersAnswer}</span>}\r\n                {!hasSelectedAnOption && <span className=\"somaliQuestion__choiceLabel\">Please select an option</span>}\r\n                <AnswerChoices\r\n                  choices={baseWordChoices}\r\n                  label=\"Word choices:\"\r\n                  selectedChoices={selectedChoices}\r\n                  onClick={handleChoiceClick}\r\n                />\r\n                <AnswerChoices\r\n                  choices={wordInfections}\r\n                  label=\"Conjugation choices:\"\r\n                  selectedChoices={selectedChoices}\r\n                  onClick={handleChoiceClick}\r\n                />\r\n              </div>\r\n              <Button className=\"somaliQuestion__nextBtn\" onClick={handleSubmit}>\r\n                Next\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        }\r\n        {endOfQuiz && <Results answerHistory={answerHistory} />}\r\n      </>\r\n    );\r\n};\r\n\r\nfunction AnswerChoices({\r\n  choices,\r\n  label,\r\n  selectedChoices,\r\n  onClick\r\n}) {\r\n  return (\r\n    <div>\r\n      <p className=\"somaliQuestion__choiceLabel\">{label}</p>\r\n      {choices.map(choice => (\r\n        <Button\r\n          className=\"buttonChoice\"\r\n          theme=\"light\"\r\n          selected={selectedChoices.includes(choice)}\r\n          onClick={() => onClick(choice)}\r\n        >\r\n          {choice}\r\n        </Button>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SomaliQuestion;\r\n","// Maybe use generic components for each Quiz?\r\nimport \"./styles.scss\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport classnames from \"classnames\";\r\nimport axios from \"axios\";\r\n\r\nimport _shuffle from \"lodash/shuffle\";\r\n\r\nimport Section from \"../../UI/Section/Section\";\r\nimport Spinner from \"../../UI/Spinner\";\r\nimport SomaliQuestion from \"../../Questions/Somali/SomaliQuestion\";\r\n\r\nfunction SomaliQuiz({\r\n  score,\r\n  questionIndex,\r\n  hasData,\r\n  hideInputMode,\r\n  history,\r\n  inputMode,\r\n  location,\r\n  questions,\r\n  answerHistory,\r\n  endOfQuiz,\r\n  onQuizDownload,\r\n  onUsersAnswer,\r\n  sectionName\r\n}) {\r\n  const [showCorrectPopup, setCorrectPopupVisibility] = useState(false);\r\n  const [showWrongPopup, setWrongPopupVisibility] = useState(false);\r\n  const [shuffledQuestions, setShuffledQuestions] = useState([])\r\n\r\n  const search = location.search;\r\n  const quizParams = queryString.parse(search);\r\n  const { topic, quiz } = quizParams;\r\n  const quizId = `${topic}__${quiz}`\r\n\r\n  useEffect(() => {\r\n    if (!topic) {\r\n      history.push(\"/\");\r\n      return;\r\n    }\r\n\r\n    axios.post(`https://kakarot.now.sh/somali/load_quiz`, quizParams)\r\n      .then(response => {\r\n        const quizData =\r\n          {\r\n            data: {\r\n              ...response.data\r\n            },\r\n            id: quizId\r\n          }\r\n        onQuizDownload(quizData);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, [hasData]);\r\n\r\n  useEffect(() => {\r\n    setShuffledQuestions(_shuffle(questions))\r\n  }, [questions])\r\n\r\n  const questionCount = shuffledQuestions.length;\r\n  const question = questionCount ? shuffledQuestions[questionIndex] : undefined;\r\n  const questionNumber = questionIndex + 1;\r\n\r\n  const [selectedChoices, updateSelectedChoices] = useState([])\r\n\r\n\r\n  const resetUI = () => {\r\n    setCorrectPopupVisibility(false);\r\n    setWrongPopupVisibility(false);\r\n    updateSelectedChoices([]);\r\n  };\r\n\r\n  const handleNext = (usersAnswer) => {\r\n    // event.preventDefault();\r\n    const question = shuffledQuestions[questionIndex];\r\n\r\n    const answerWasCorrect = question.answers.includes(usersAnswer);\r\n    const usersCurrentAnswers = [...answerHistory];\r\n\r\n    const waitingForNextQuestion = showCorrectPopup || showWrongPopup;\r\n\r\n    let animationDuration = 1100;\r\n\r\n    if (answerWasCorrect) {\r\n      score = score + 1;\r\n      setCorrectPopupVisibility(true);\r\n    } else if (!answerWasCorrect && usersAnswer) {\r\n      animationDuration = 1200;\r\n      setWrongPopupVisibility(true);\r\n    }\r\n\r\n    usersCurrentAnswers.push({\r\n      text: question.question_text,\r\n      usersAnswer,\r\n      correctAnswer: question.answers,\r\n      answerWasCorrect\r\n    });\r\n\r\n    if (questionNumber === questions.length) {\r\n      setTimeout(() => {\r\n        resetUI();\r\n        onUsersAnswer({\r\n          data: {\r\n            endOfQuiz: true,\r\n            answerHistory: usersCurrentAnswers,\r\n            sectionName: \"Results\"\r\n          },\r\n          id: quizId\r\n        });\r\n      }, animationDuration);\r\n    } else if (usersAnswer && !waitingForNextQuestion) {\r\n      setTimeout(() => {\r\n        resetUI();\r\n        onUsersAnswer({\r\n          data: {\r\n            questionIndex: questionIndex + 1,\r\n            score,\r\n            answerHistory: usersCurrentAnswers\r\n          },\r\n          id: quizId\r\n        });\r\n      }, animationDuration);\r\n    }\r\n  };\r\n\r\n  const correctPopupClass = classnames(\"CorrectPopup\", {\r\n    \"--show\": showCorrectPopup\r\n  });\r\n\r\n  const wrongPopupClass = classnames(\"WrongPopup\", {\r\n    \"--show\": showWrongPopup\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Spinner hasData={hasData} />\r\n      <Section name={sectionName} className={\"Quiz\"}>\r\n        {question && (\r\n          <SomaliQuestion\r\n            question={question}\r\n            questionCount={questionCount}\r\n            questionNumber={questionNumber}\r\n            hideInputMode={true}\r\n            onChoiceClick={updateSelectedChoices}\r\n            onSubmit={event => handleNext(event)}\r\n            answerHistory={answerHistory}\r\n            selectedChoices={selectedChoices}\r\n            endOfQuiz={endOfQuiz}\r\n          />\r\n        )}\r\n        <div className={correctPopupClass}>\r\n          <i className=\"far fa-smile-wink\" />\r\n          <p>Sax!</p>\r\n          <p>CORRECT</p>\r\n        </div>\r\n        <div className={wrongPopupClass}>\r\n          <i className=\"fas fa-times\"></i>\r\n        </div>\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SomaliQuiz;\r\n","import React from \"react\";\r\n\r\nimport JapaneseQuiz from \"./Japanese/japaneseQuiz\";\r\nimport SomaliQuiz from \"./Somali/somaliQuiz\";\r\n\r\nfunction Quiz(props) {\r\n  const { location } = props;\r\n\r\n  if (location.pathname.includes(\"japanese\")) {\r\n    return <JapaneseQuiz {...props} />\r\n  } else if (location.pathname.includes(\"somali\")) {\r\n    return <SomaliQuiz {...props} />\r\n  }\r\n}\r\n\r\nexport default Quiz;","import { connect } from \"react-redux\";\r\nimport queryString from \"query-string\";\r\n\r\nimport { setCurrentQuiz, updateAnswerHistory } from \"./actions\";\r\n\r\nimport Quiz from \"../../components/Quiz\";\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { quizReducer, languageSelectorReducer } = state;\r\n  const { location } = ownProps;\r\n\r\n  const quizParams = queryString.parse(location.search);\r\n  const { topic, quiz } = quizParams;\r\n\r\n  const quizId =  `${topic}__${quiz}`\r\n  const quizData = quizReducer[quizId]\r\n\r\n  return {\r\n    ...languageSelectorReducer,\r\n    // Used to store things like the users answer\r\n    ...quizReducer,\r\n    ...quizData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onQuizDownload: data => dispatch(setCurrentQuiz(data)),\r\n    onUsersAnswer: data => dispatch(updateAnswerHistory(data))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\r\n","export const UPDATE_TOPICS = \"UPDATE_TOPICS\";\r\n\r\nexport function updateTopics(topics) {\r\n  return { type: UPDATE_TOPICS, topics }\r\n}\r\n","import './styles.scss';\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nQuizOptions.propTypes = {\r\n  onChange: PropTypes.func,\r\n  showQuizLength: PropTypes.bool\r\n};\r\n\r\nQuizOptions.defaultProps = {\r\n  showQuizLength: false\r\n};\r\n\r\nfunction QuizOptions({ onChange, showQuizLength }) {\r\n  return (\r\n    <div className=\"quizOptions\">\r\n      {showQuizLength && (\r\n        <>\r\n          Number of Questions:\r\n          <select\r\n            className=\"quizOptions__quizLength\"\r\n            onChange={event => onChange(event)}\r\n          >\r\n            <option value=\"5\">5</option>\r\n            <option value=\"10\">10</option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"35\">35</option>\r\n            <option value=\"50\">50</option>\r\n          </select>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizOptions;\r\n","import './styles.scss';\r\n\r\nimport React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport AnimateHeight from 'react-animate-height';\r\n\r\nimport IconWithText from '../../UI/IconWithText';\r\nimport QuizOptions from '../../UI/QuizOptions';\r\n\r\ntopicSelect.propTypes = {\r\n  changeQuizLength: PropTypes.bool,\r\n  topic: PropTypes.shape({\r\n    icon: PropTypes.string,\r\n    key: PropTypes.string,\r\n    title: PropTypes.string,\r\n    quizzes: PropTypes.arrayOf(PropTypes.shape({\r\n      param: PropTypes.string,\r\n      title: PropTypes.string,\r\n    })),\r\n  })\r\n}\r\n\r\ntopicSelect.defaultProps = {\r\n  changeQuizLength: false\r\n}\r\n\r\nfunction topicSelect({ changeQuizLength, history, topic }) {\r\n  const { icon, key, title, quizzes } = topic;\r\n  const TopicIcon = ({ className }) => <i className={classnames(className, icon)} />\r\n\r\n  const [isTopicVisible, setTopicVisibility] = useState(false);\r\n  const [quizLength, setQuizLength] = useState(5);\r\n\r\n  const arrowIconClasses = classnames(\r\n    'fas fa-chevron-down',\r\n    'topic__chevron',\r\n    { 'topic__chevron--rotate': isTopicVisible }\r\n  )\r\n\r\n  const arrowIconRightClasses = classnames(\r\n    'fas fa-chevron-right',\r\n    'topic__chevron--right'\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <div className='topic' onClick={() => setTopicVisibility(!isTopicVisible)}>\r\n        <IconWithText icon={TopicIcon}>\r\n          {title}\r\n        </IconWithText>\r\n        <i className={arrowIconClasses}/>\r\n      </div>\r\n      <AnimateHeight\r\n        duration={300}\r\n        height={isTopicVisible ? 'auto' : 0}\r\n      >\r\n        <div className='topic__quizzes'>\r\n          {/* Dropdown only shows for quizzes in the Random topic. */}\r\n          { changeQuizLength &&\r\n              <QuizOptions\r\n                showQuizLength={true}\r\n                onChange={(event) => setQuizLength(event.target.value)}\r\n              />\r\n          }\r\n          {\r\n\r\n            quizzes.map(quiz => {\r\n              let quizLengthParam = '';\r\n              // Only type of quiz the length can be set for.\r\n              if (key === 'random') {\r\n                quizLengthParam = `&quiz_length=${quizLength}`;\r\n              }\r\n\r\n              const urlParam = { pathname: `quiz`, search: `?topic=${key}&quiz=${quiz.param}${quizLengthParam}` };\r\n\r\n              return (\r\n                <div\r\n                  key={quiz.param}\r\n                  className='topic__quiz'\r\n                  onClick={() => history.push(urlParam)}\r\n                >\r\n                  {quiz.title}\r\n                  <i className={arrowIconRightClasses}/>\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n      </AnimateHeight>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(topicSelect);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nPencil.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nfunction Pencil({ className }) {\r\n  const componentClasses = classnames(\"fas fa-pencil-alt\", className);\r\n\r\n  return <i className={componentClasses} />;\r\n}\r\n\r\nexport default Pencil;\r\n","import \"./styles.scss\";\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport TopicSelect from \"./TopicSelect/index\";\r\n\r\nimport Pencil from \"../UI/Icons/Pencil\";\r\n\r\nimport IconWithText from \"../UI/IconWithText\";\r\nimport Spinner from \"../UI/Spinner\";\r\n\r\nfunction Topics({ hasData, languageStudied, onUpdateTopics, topics = [] }) {\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://kakarot.now.sh/${languageStudied}/topics`).then(response => {\r\n      onUpdateTopics(response.data);\r\n    });\r\n  }, [hasData, languageStudied]);\r\n\r\n  return (\r\n    <div>\r\n      <Spinner hasData={hasData} />\r\n      <h2 className=\"topics__header\">\r\n        <IconWithText icon={Pencil}>Quizzes</IconWithText>\r\n        {/* <button className='topics__createBtn' onClick={() => history.push('/create-quiz')}>\r\n          CREATE\r\n        </button> */}\r\n      </h2>\r\n      {topics.map(topic => {\r\n        return (\r\n          <TopicSelect\r\n            key={topic.key}\r\n            changeQuizLength={topic.key === \"random\"}\r\n            topic={topic}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Topics;\r\n","import { connect } from \"react-redux\";\r\nimport { updateTopics } from \"./actions\";\r\nimport Topics from \"../../components/Topics\";\r\n\r\nconst mapStateToProps = state => {\r\n  const { topicsReducer, languageSelectorReducer } = state;\r\n  const { hasData, topics } = topicsReducer;\r\n\r\n  return {\r\n    hasData,\r\n    topics,\r\n    ...languageSelectorReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onUpdateTopics: data => {\r\n      dispatch(updateTopics(data));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Topics);\r\n","import React, { Component } from 'react';\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport Backdrop from './components/UI/Backdrop/Backdrop';\r\nimport Layout from './components/Layout/Layout';\r\nimport SideDrawer from './containers/SideDrawer';\r\n\r\n// import CreateQuiz from './containers/CreateQuiz/CreateQuiz';\r\nimport Portal from './containers/Portal/Portal';\r\nimport Quiz from './containers/Quiz';\r\nimport Topics from './containers/Topics';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isDrawerVisible: false\r\n  };\r\n\r\n  onDrawerToggle = () => {\r\n    const isDrawerVisible = !this.state.isDrawerVisible;\r\n    this.setState({ isDrawerVisible });\r\n  }\r\n\r\n  onBackdropClick = () => {\r\n    this.setState({ isDrawerVisible: false })\r\n  }\r\n\r\n  render() {\r\n    const { isDrawerVisible } = this.state;\r\n\r\n    return (\r\n      <Layout drawerClickHandler={this.onDrawerToggle}>\r\n        <SideDrawer show={isDrawerVisible} clicked={this.onDrawerToggle}/>\r\n        <Backdrop hide={!isDrawerVisible}  onClick={this.onBackdropClick} />\r\n        <Route path=\"/\" exact component={Portal} />\r\n        {/* <Route path=\"/create-quiz\" exact component={CreateQuiz} /> */}\r\n        <Route path=\"/:language/topics\" exact component={Topics} />\r\n        <Route path=\"/:language/quiz\" exact component={Quiz} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import * as actions from \"./actions\";\r\n\r\nconst initialState = {\r\n  hasData: false,\r\n  topics: []\r\n};\r\n\r\nexport default function topicsReducer(state = initialState, action) {\r\n  const { type, topics } = action;\r\n\r\n  switch (type) {\r\n    case actions.UPDATE_TOPICS:\r\n      return {\r\n        ...state,\r\n        topics,\r\n        hasData: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport topicsReducer from \"../containers/Topics/reducer\";\r\nimport quizReducer from \"../containers/Quiz/reducer\";\r\nimport languageSelectorReducer from \"../containers/SideDrawer/reducer\";\r\n\r\nconst reducers = combineReducers({\r\n  topicsReducer,\r\n  quizReducer,\r\n  languageSelectorReducer\r\n});\r\n\r\nexport default reducers;\r\n","import * as actions from \"./actions\";\r\n\r\nexport default function quizReducer(state = {}, action) {\r\n  const { type, questionData, quizData } = action;\r\n\r\n  switch (type) {\r\n    case actions.SET_CURRENT_QUIZ:\r\n      return {\r\n        // Other cached quiz objects.\r\n        ...state,\r\n        [quizData.id]: {\r\n          ...quizData.data,\r\n          questionIndex: 0,\r\n          hasData: true,\r\n          answerHistory: []\r\n        }\r\n      };\r\n    case actions.UPDATE_ANSWER_HISTORY:\r\n      return {\r\n        ...state,\r\n        [questionData.id]: {\r\n          // Current question data (e.g. questions in quiz)\r\n          ...state[questionData.id],\r\n          // Updated question data (e.g. answerHistory, score etc.)\r\n          ...questionData.data\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"./actions\";\r\n\r\nexport default function languageSelectorReducer(state = { languageStudied: \"japanese\" }, action) {\r\n  const { type, language } = action;\r\n\r\n  switch (type) {\r\n    case actions.CHANGED_LANGUAGE:\r\n      return {\r\n        ...state,\r\n        languageStudied: language\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { applyMiddleware, createStore } from 'redux'\r\nimport { save, load } from \"redux-localstorage-simple\"\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reducers from './reducers'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst createStoreWithMiddleware\r\n  = applyMiddleware(\r\n      save() // Saving done here\r\n  )(createStore)\r\n\r\nconst store = createStoreWithMiddleware(\r\n  reducers,\r\n  load(),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuestionText\":\"Result_QuestionText__2xrRe\",\"Answers\":\"Result_Answers__1I48m\",\"CorrectAnswer\":\"Result_CorrectAnswer__RoC7K\",\"WrongAnswer\":\"Result_WrongAnswer__2rlzT\",\"Answer\":\"Result_Answer__1_i-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Portal\":\"Portal_Portal__12e22\",\"Slider\":\"Portal_Slider__3c_hP\",\"Slide\":\"Portal_Slide__DDgBl\",\"SlideCaption\":\"Portal_SlideCaption__1niW-\",\"ImageCaption\":\"Portal_ImageCaption__QyJlB\",\"KirbySlide\":\"Portal_KirbySlide__1ZUNI\",\"WiggleSlide\":\"Portal_WiggleSlide__p42MY\",\"MiyamotoApproveSlide\":\"Portal_MiyamotoApproveSlide__24Lef\",\"MiyamotoRejectSlide\":\"Portal_MiyamotoRejectSlide__3utjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__31_nM\",\"DrawerOpen\":\"SideDrawer_DrawerOpen__2kFFb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__7AyTM\",\"SectionHeader\":\"Section_SectionHeader__spjuW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__7kSfi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Item_Item__1eUVq\"};"],"sourceRoot":""}