{"version":3,"sources":["containers/CreateQuiz/CreateQuiz.module.scss","components/Questions/Questions.module.scss","components/Questions/Result/Result.module.scss","containers/Portal/Portal.module.scss","components/UI/NavBar/NavBar.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/UI/SideDrawer/SideDrawer.module.scss","components/UI/Section/Section.module.scss","components/UI/Button/Button.module.scss","containers/Quiz/Quiz.module.scss","components/UI/SideDrawer/Item/Item.module.scss","components/Layout/Layout.module.scss","components/UI/NavLinks/NavLinks.module.scss","components/UI/NavLinks/NavLink/NavLink.module.scss","components/UI/Backdrop/Backdrop.js","components/UI/SideDrawer/Item/Item.js","components/UI/SideDrawer/SideDrawer.js","components/UI/NavLinks/NavLink/NavLink.js","components/UI/NavLinks/NavLinks.js","components/UI/NavBar/NavBar.js","components/Layout/Layout.js","containers/Portal/Portal.js","components/UI/Section/Section.js","components/UI/Button/Button.js","japanese/sentence_generator/adjectives/adjectives.js","japanese/sentence_generator/locations/locations.js","japanese/sentence_generator/verbs/verbs.js","japanese/sentence_generator/pronouns/personal_pronouns.js","japanese/sentence_generator/sentence_generator.js","containers/CreateQuiz/CreateQuiz.js","containers/Topics/Topics.js","components/Questions/Result/Result.js","components/Questions/Questions.js","japanese/dates/months.js","japanese/dates/days_of_the_month.js","japanese/dates/days_of_the_week.js","japanese/dates/dates_quiz.js","japanese/times/hours_of_the_day.js","japanese/times/minutes.js","japanese/times/times_quiz.js","japanese/quiz_setup.js","containers/Quiz/Quiz.js","App.js","serviceWorker.js","index.js","containers/Topics/Topics.module.scss"],"names":["module","exports","WordContainer","Word","Sentence","Questions","Question","QuestionNumber","AnswerField","EmptyAnswer","NextBtn","AnswerHistory","Answers","CorrectAnswer","WrongAnswer","Answer","Portal","Slider","Slide","SlideCaption","ImageCaption","KirbySlide","WiggleSlide","MiyamotoApproveSlide","MiyamotoRejectSlide","NavBar","Hiragana","Hamburger","Backdrop","Hidden","SideDrawer","DrawerOpen","Section","SectionHeader","Button","ActiveBtn","Quiz","Preferences","Item","Layout","NavLinks","NavLink","backdrop","props","backdropClass","show","classes","react_default","a","createElement","className","onClick","clicked","item","icon","label","react_router_dom","to","pathname","href","sideDrawer","drawerOpenClass","concat","navLink","navLinks","openDrawer","withRouter","document","location","react","UI_NavBar_NavBar","drawerClickHandler","children","lib_default","Object","assign","infinite","speed","autoplay","autoplaySpeed","Component","section","name","button","selected","adjectives","word","translations","locations","verbs","verb","conjugations","present","past","negative","past_negative","personalPronouns","wanakana","require","shuffle","array","i","length","j","Math","floor","random","_ref","getVerb","pronoun","verbConjugation","filter","verbObj","getVerbObject","CreateQuiz","state","topic","particles","otherInfo","sentenceEng","sentenceJp","sentenceWithTopicAndVerb","updateTopic","_this","setState","generateSentence","sentence","particle","subject","preposition","pronounEng","pronounJp","conjugation","japaneseVerb","linkingVerb","english","japanese","toHiragana","descriptionEng","descriptionJp","sentenceGenerator","getLinkingVerb","locationEng","locationJp","this","_this2","nameOption","includes","value","addVerb","onChange","evt","addParticle","target","sentenceWithTopic","Topics","topics","param","choices","openTopics","quizLength","topicClickeHandler","index","topicId","querySelector","classList","toggle","RotateChevron","toConsumableArray","indexOf","splice","push","destination","verbConjugations","map","topicObj","QuizLengthLabel","QuizLength","topicChoices","choice","quizLengthParam","key","TopicChoice","search","id","Topic","ChevronDown","AnimateHeight_default","duration","height","TopicChoices","Header","TopicList","result","answerWasCorrect","usersAnswer","correctAnswer","questions","inputEl","useRef","inputMode","setTimeout","current","bind","IMEMode","question","questionIndex","endOfQuiz","onSubmit","event","next","answer","text","emptyAnswer","ref","type","autoFocus","autoComplete","placeholder","answerHistory","Result","months","days_of_the_month","days_of_the_week","setUpDaysOfWeekQuiz","quizlength","getQuestions","jpDaysOfTheWeek","setUpDaysOfMonthQuiz","jpDaysOfTheMonth","setUpMonthsQuiz","jpMonths","setUpDatesQuiz","setQuizLength","days","dayEng","getEnglishWord","monthEng","dayJp","getJapaneseTranslations","monthJp","createQuestion","hoursOfTheDay","minutes","setUpHoursOfTheDayQuiz","minutesInJapanese","jpHoursOfTheDay","timesEng","timesJp","setUpMinutesQuiz","quiz","jpMinutes","times","wordsArr","shuffledWords","questionsNeeded","loopCount","ceil","questionsToRemove","shuffledExtraWords","words","wordsLength","eng","jp","score","sectionName","handleNext","answerField","toRomaji","console","log","prevState","preventDefault","setInputMode","queryParams","queryString","parse","quizzes","quiz_length","history","App","sideDrawerOpen","drawerToggleClickHandler","backdropClickHandler","react_router","path","exact","component","Boolean","window","hostname","match","app","basename","process","src_App","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2EACAA,EAAAC,QAAA,CAAkBC,cAAA,kCAAAC,KAAA,yBAAAC,SAAA,kDCAlBJ,EAAAC,QAAA,CAAkBI,UAAA,6BAAAC,SAAA,4BAAAC,eAAA,kCAAAC,YAAA,+BAAAC,YAAA,+BAAAC,QAAA,2BAAAC,cAAA,sDCAlBX,EAAAC,QAAA,CAAkBW,QAAA,wBAAAC,cAAA,8BAAAC,YAAA,4BAAAC,OAAA,2CCAlBf,EAAAC,QAAA,CAAkBe,OAAA,uBAAAC,OAAA,uBAAAC,MAAA,sBAAAC,aAAA,6BAAAC,aAAA,6BAAAC,WAAA,2BAAAC,YAAA,4BAAAC,qBAAA,qCAAAC,oBAAA,yDCAlBxB,EAAAC,QAAA,CAAkBwB,OAAA,uBAAAC,SAAA,yBAAAC,UAAA,+CCAlB3B,EAAAC,QAAA,CAAkB2B,SAAA,2BAAAC,OAAA,8CCAlB7B,EAAAC,QAAA,CAAkB6B,WAAA,+BAAAC,WAAA,oDCAlB/B,EAAAC,QAAA,CAAkB+B,QAAA,yBAAAC,cAAA,oDCAlBjC,EAAAC,QAAA,CAAkBiC,OAAA,uBAAAC,UAAA,+CCAlBnC,EAAAC,QAAA,CAAkBmC,KAAA,mBAAAC,YAAA,+CCAlBrC,EAAAC,QAAA,CAAkBqC,KAAA,wCCAlBtC,EAAAC,QAAA,CAAkBsC,OAAA,4CCAlBvC,EAAAC,QAAA,CAAkBuC,SAAA,gDCAlBxC,EAAAC,QAAA,CAAkBwC,QAAA,kjBCQHC,EALE,SAACC,GAChB,IAAMC,EAAgBD,EAAME,KAAOC,IAAQlB,SAAWkB,IAAQjB,OAC9D,OAAOkB,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAeO,QAASR,EAAMS,6CCyBxCC,EA1BF,SAACV,GACZ,IAAIW,EACJ,OAAQX,EAAMY,OACZ,IAAK,aACHD,EAAOP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBACpB,MACF,IAAK,QACHI,EAAOP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBACpB,MACF,IAAK,UACHI,EAAOP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBACpB,MACF,IAAK,UACHI,EAAOP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAKxB,OACEH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAI,CAACC,SAAUf,EAAMgB,MAAOT,UAAWJ,IAAQR,MACjDgB,EACFP,EAAAC,EAAAC,cAAA,SAAIN,EAAMY,SCCDK,EAtBI,SAACjB,GAClB,IAAIkB,EAAkBlB,EAAME,KAAOC,IAAQf,WAAa,KACxD,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAY,OAAKhB,IAAQhB,WAAb,KAAAgC,OAA2BD,IACvCd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIE,QAASR,EAAMS,SACjBL,EAAAC,EAAAC,cAACX,EAAD,CAAMiB,MAAM,gBAEdR,EAAAC,EAAAC,cAAA,MAAIE,QAASR,EAAMS,SACjBL,EAAAC,EAAAC,cAACX,EAAD,CAAMiB,MAAM,WAEdR,EAAAC,EAAAC,cAAA,MAAIE,QAASR,EAAMS,SACjBL,EAAAC,EAAAC,cAACX,EAAD,CAAMqB,KAAK,UAAUJ,MAAM,aAE7BR,EAAAC,EAAAC,cAAA,MAAIE,QAASR,EAAMS,SAClBL,EAAAC,EAAAC,cAACX,EAAD,CAAMiB,MAAM,2ECYNQ,EA1BC,SAAApB,GACd,IAAIW,EACJ,OAAQX,EAAMY,OACZ,IAAK,aACHD,EAAOP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBACpB,MACF,IAAK,QACHI,EAAOP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBACpB,MACF,IAAK,UACHI,EAAOP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBACpB,MACF,IAAK,UACHI,EAAOP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAKxB,OACEH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAI,CAACC,SAAUf,EAAMgB,MAAOT,UAAWJ,IAAQL,SACjDa,EACFP,EAAAC,EAAAC,cAAA,SAAIN,EAAMY,SCbDS,EATE,SAACrB,GAAD,OACfI,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,IAAQN,UACtBO,EAAAC,EAAAC,cAACR,EAAD,CAASc,MAAM,eACfR,EAAAC,EAAAC,cAACR,EAAD,CAASc,MAAM,UACfR,EAAAC,EAAAC,cAACR,EAAD,CAASkB,KAAK,UAAUJ,MAAM,YAC9BR,EAAAC,EAAAC,cAACR,EAAD,CAASc,MAAM,+BCSJ9B,EAdA,SAAAkB,GAAK,OAClBI,EAAAC,EAAAC,cAAA,UAAQC,UAAWJ,IAAQrB,QACzBsB,EAAAC,EAAAC,cAAA,UAAQC,UAAWJ,IAAQnB,UAAWwB,QAASR,EAAMsB,YACnDlB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAEfH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAI,CAACC,SAAU,MACnBX,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,IAAQpB,UAAtB,4BADF,gBCaSwC,cAjBA,SAAAvB,GACbwB,SAASlB,cAAc,QACvB,IAAIe,EAAW,KAIf,MAHgC,UAA5BrB,EAAMyB,SAASV,WACjBM,EAAWjB,EAAAC,EAAAC,cAACT,EAAD,OAGXO,EAAAC,EAAAC,cAACoB,EAAA,SAAD,KACEtB,EAAAC,EAAAC,cAACqB,EAAD,CAAQL,WAAYtB,EAAM4B,qBAC1BxB,EAAAC,EAAAC,cAAA,QAAMC,UAAWJ,IAAQP,QAASI,EAAM6B,UACxCzB,EAAAC,EAAAC,cAAA,cACIe,uCC4CKhD,mLA5CX,OACE+B,EAAAC,EAAAC,cAACoB,EAAA,SAAD,KACEtB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD0B,OAAAC,OAAA,GAZa,CAIfC,UAAU,EACVC,MAAO,IAEPC,UAAU,EACVC,cAAe,KAIb,CAAsB7B,UAAWJ,IAAQ7B,SACvC8B,EAAAC,EAAAC,cAACoB,EAAA,SAAD,KACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,IAAQ5B,OACtB6B,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,IAAQ3B,cAAtB,yCAGJ4B,EAAAC,EAAAC,cAACoB,EAAA,SAAD,KACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAY,OAAKhB,IAAQ5B,MAAb,KAAA4C,OAAsBhB,IAAQvB,uBAC1CwB,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,IAAQ1B,cAAtB,oGAGJ2B,EAAAC,EAAAC,cAACoB,EAAA,SAAD,KACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,IAAQ5B,OACtB6B,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,IAAQ3B,cAAtB,uDAGJ4B,EAAAC,EAAAC,cAACoB,EAAA,SAAD,KACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAY,OAAKhB,IAAQ5B,MAAb,KAAA4C,OAAsBhB,IAAQtB,sBAC1CuB,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,IAAQ1B,cAAtB,iDAGJ2B,EAAAC,EAAAC,cAACoB,EAAA,SAAD,KACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAY,OAAKhB,IAAQ5B,MAAb,KAAA4C,OAAsBhB,IAAQzB,aAC1C0B,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,IAAQ1B,cAAtB,2CAGJ2B,EAAAC,EAAAC,cAACoB,EAAA,SAAD,KACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,IAAQ5B,OACxB6B,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,IAAQ3B,cAAtB,qBAGF4B,EAAAC,EAAAC,cAACoB,EAAA,SAAD,KACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAY,OAAKhB,IAAQ5B,MAAb,KAAA4C,OAAsBhB,IAAQxB,cAC1CyB,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,IAAQ1B,cAAtB,wCA/CO4D,8CCWNC,EAZC,SAAAtC,GAAK,OACnBI,EAAAC,EAAAC,cAAA,WAASC,UAAS,GAAAY,OAAKhB,IAAQd,QAAb,KAAA8B,OAAwBnB,EAAMO,YAC9CH,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,IAAQb,eAAgBU,EAAMuC,MAC5CvC,EAAM6B,4BCKIW,EARA,SAAAxC,GAAK,OAClBI,EAAAC,EAAAC,cAAA,UAAQC,UAAWP,EAAMyC,SAAWtC,IAAQX,UAAYW,IAAQZ,OAASiB,QAASR,EAAMQ,SAAUR,EAAM6B,WCD3Fa,EALI,CACjB,CAAEC,KAAM,UAAWC,aAAc,CAAC,SAClC,CAAED,KAAM,QAASC,aAAc,CAAC,YCGnBC,EALG,CAChB,CAAEF,KAAM,QAASC,aAAc,CAAC,UAChC,CAAED,KAAM,UAAWC,aAAc,CAAC,UAAW,oBCWhCE,EAbD,CACZ,CACEC,KAAM,UACNC,aACA,CACEC,QAAS,CAAEF,KAAK,UAAWH,aAAc,CAAC,QAAS,OACnDM,KAAM,CAAEH,KAAK,aAAcH,aAAc,CAAC,OAAQ,SAClDO,SAAU,CAAEJ,KAAM,WAAYH,aAAc,CAAC,YAAa,eAC1DQ,cAAe,CAAEL,KAAM,kBAAmBH,aAAc,CAAC,gBAAiB,sBCGjES,EAXU,CAEvB,CAAEV,KAAM,UAAWC,aAAc,CAAC,MAClC,CAAED,KAAM,SAAUC,aAAc,CAAC,MACjC,CAAED,KAAM,OAAQC,aAAc,CAAC,MAC/B,CAAED,KAAM,QAASC,aAAc,CAAC,QAChC,CAAED,KAAM,OAAQC,aAAc,CAAC,QAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,OAC/B,CAAED,KAAM,SAAUC,aAAc,CAAC,SCF7BU,GAAWC,EAAQ,IAIzB,SAASC,GAAQC,GACf,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADCM,EAElB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkCM,EAAA,GAE9BP,EAAMG,GAFwBI,EAAA,GAI3C,OAAOP,EAWT,SAASQ,GAAQC,EAASC,EAAiBpB,GAEzC,GADAA,EATF,SAAuBA,GACrB,OAAOD,EAAMsB,OAAO,SAAAC,GAAO,OAAIA,EAAQtB,OAASA,IAAM,GAQ/CuB,CAAcvB,GAAMC,aAAamB,GACxB,MAAZD,EAAiB,CACnB,GAAwB,YAApBC,EACF,MAAO,MAAQpB,EAAKH,aAAa,GAC5B,GAAwB,SAApBuB,EACT,MAAO,GAAKpB,EAAKH,aAAa,GACzB,GAAwB,aAApBuB,EACT,MAAO,MAAQpB,EAAKH,aAAa,GAC5B,GAAwB,kBAApBuB,EACT,MAAO,GAAKpB,EAAKH,aAAa,QAE3B,GAAgB,QAAZsB,EAAmB,CAC5B,GAAwB,YAApBC,EACF,MAAO,OAASpB,EAAKH,aAAa,GAC7B,GAAwB,SAApBuB,EACT,MAAO,GAAKpB,EAAKH,aAAa,GACzB,GAAwB,aAApBuB,EACT,MAAO,GAAKpB,EAAKH,aAAa,GACzB,GAAwB,kBAApBuB,EACT,MAAO,GAAKpB,EAAKH,aAAa,OAE3B,CACL,GAAwB,YAApBuB,EACF,MAAO,MAAQpB,EAAKH,aAAa,GAC5B,GAAwB,SAApBuB,EACT,MAAO,GAAKpB,EAAKH,aAAa,GACzB,GAAwB,aAApBuB,EACT,MAAO,GAAKpB,EAAKH,aAAa,GACzB,GAAwB,kBAApBuB,EACT,MAAO,GAAKpB,EAAKH,aAAa,QCqGrB2B,8MAhJbC,MAAQ,CACNC,MAAO,UACPC,UAAW,CAAC,UACZC,UAAW,YACXC,YAAa,GACbC,WAAY,GACZC,0BAA0B,KAW5BC,YAAc,SAACN,GACC,YAAVA,EACFO,EAAKC,SAAS,CAACR,UAEfO,EAAKC,SAAS,CAACR,QAAOE,UAAW,iBAUrCO,iBAAmB,WACjB,GAAIF,EAAKR,MAAMM,yBAA0B,CACvC,IAAMK,ED4EZ,SAAkCC,EAAUC,EAASV,GACjC,aAAdA,IACFnB,GAAQX,GACR8B,EAAY9B,EAAU,IAExB,IAAIyC,EAAc,GAMlB,GALiB,WAAbF,EACFE,EAAc,KACQ,WAAbF,IACTE,EAAc,QAEA,YAAZD,EAAuB,CACzB7B,GAAQH,GACR,IAAMa,EAAUb,EAAiB,GAC3BkC,EAAarB,EAAQtB,aAAa,GAClC4C,EAAYtB,EAAQvB,KAEpB8C,EAAcjC,GADC,CAAC,UAAW,OAAQ,WAAY,kBACX,GACpCkC,EAAe5C,EAAM,GAAGE,aAAayC,GAAa1C,KAClD4C,EAAc1B,GAAQsB,EAAYE,EAAa,WACrD,GAAkB,SAAdd,EACF,MAAO,CAAEiB,QAAO,GAAAzE,OAAKoE,EAAL,KAAApE,OAAmBwE,EAAnB,KAAAxE,OAAkCmE,EAAlC,aAA0DO,SAAUvC,GAASwC,WAAT,GAAA3E,OAAuBqE,EAAvB,kBAAArE,OAA4CiE,GAA5CjE,OAAuDuE,KAE7I,IAAMK,EAAiBpB,EAAU/B,aAAa,GACxCoD,EAAgBrB,EAAUhC,KAChC,MAAO,CAAEiD,QAAO,GAAAzE,OAAKoE,EAAL,KAAApE,OAAmBwE,EAAnB,KAAAxE,OAAkCmE,EAAlC,KAAAnE,OAAiD4E,GAAkBF,SAAUvC,GAASwC,WAAT,GAAA3E,OAAuBqE,EAAvB,UAAArE,OAAoC6E,GAApC7E,OAAoDiE,GAApDjE,OAA+DuE,MCrGzIO,CAA2C,SAAKjB,EAAKR,MAAMC,MAAOO,EAAKR,MAAMG,WAC9FK,EAAKC,SAAS,CAACL,YAAaO,EAASS,QAASf,WAAYM,EAASU,eAC9D,CACL,IAAMV,ED8CZ,SAAmCE,EAASV,GAK1C,GAJkB,cAAdA,IACFnB,GAAQd,GACRiC,EAAYjC,EAAW,IAET,YAAZ2C,EAAuB,CACzB7B,GAAQH,GACR,IAAMa,EAAUb,EAAiB,GAC3BkC,EAAarB,EAAQtB,aAAa,GAClC4C,EAAYtB,EAAQvB,KACpBgD,EA5CV,SAAwBzB,EAASC,GAC/B,GAAgB,MAAZD,EAAiB,CACnB,GAAwB,YAApBC,EACF,MAAO,KACF,GAAwB,SAApBA,EACT,MAAO,GACF,GAAwB,aAApBA,EACT,MAAO,KACF,GAAwB,kBAApBA,EACT,MAAO,QAEJ,GAAgB,QAAZD,EAAmB,CAC5B,GAAwB,YAApBC,EACF,MAAO,MACF,GAAwB,SAApBA,EACT,MAAO,GACF,GAAwB,aAApBA,EACT,MAAO,MACF,GAAwB,kBAApBA,EACT,MAAO,OAEJ,CACL,GAAwB,YAApBA,EACF,MAAO,KACF,GAAwB,SAApBA,EACT,MAAO,GACF,GAAwB,aAApBA,EACT,MAAO,KACF,GAAwB,kBAApBA,EACT,MAAO,IAeW+B,CAAeX,EAAY,WAC/C,GAAkB,SAAdZ,EACF,MAAO,CAAEiB,QAAO,GAAAzE,OAAKoE,EAAL,KAAApE,OAAmBwE,EAAnB,aAA2CE,SAAUvC,GAASwC,WAAT,GAAA3E,OAAuBqE,EAAvB,gCAEvE,IAAMO,EAAiBpB,EAAU/B,aAAa,GACxCoD,EAAgBrB,EAAUhC,KAChC,MAAO,CAAEiD,QAAO,GAAAzE,OAAKoE,EAAL,KAAApE,OAAmBwE,EAAnB,KAAAxE,OAAkC4E,GAAkBF,SAAUvC,GAASwC,WAAT,GAAA3E,OAAuBqE,EAAvB,UAAArE,OAAoC6E,EAApC,kBACzE,GAAgB,aAAZX,EAAwB,CACjC,IAAMU,EAAiBpB,EAAU/B,aAAa,GACxCoD,EAAgBrB,EAAUhC,KAChCa,GAAQX,GACR,IAAMsD,EAActD,EAAU,GAAGD,aAAa,GACxCwD,EAAavD,EAAU,GAAGF,KAChC,MAAO,CAAEiD,QAAO,GAAAzE,OAAKgF,EAAL,QAAAhF,OAAuB4E,GAAkBF,SAAUvC,GAASwC,WAAT,GAAA3E,OAAuBiF,EAAvB,UAAAjF,OAAqC6E,EAArC,mBCrEhDC,CAA4CjB,EAAKR,MAAMC,MAAOO,EAAKR,MAAMG,WAC1FK,EAAKC,SAAS,CAACL,YAAaO,EAASS,QAASf,WAAYM,EAASU,wFAZ3DT,GACO,WAAbA,GACFiB,KAAKpB,SAAS,CAACH,0BAA0B,EAAML,MAAO,UAAWE,UAAW,8CAavE,IAAA2B,EAAAD,KACHE,EAAa,KACQ,YAArBF,KAAK7B,MAAMC,OAAuB4B,KAAK7B,MAAME,UAAU8B,SAAS,YACnED,EAAanG,EAAAC,EAAAC,cAAA,UAAQmG,MAAM,QAAd,WAEd,IAAIC,EACFtG,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,IAAQ5C,eACtB6C,EAAAC,EAAAC,cAAA,UACEC,UAAWJ,IAAQ3C,KACnBmJ,SAAU,SAAAC,GAAG,OAAIN,EAAKO,YAAYD,EAAIE,OAAOL,SAC7CrG,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,0BAIFyG,EACF3G,EAAAC,EAAAC,cAACoB,EAAA,SAAD,KACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,IAAQ5C,eACtB6C,EAAAC,EAAAC,cAAA,UACEC,UAAWJ,IAAQ3C,KACnBmJ,SAAU,SAAAC,GAAG,OAAIN,EAAKvB,YAAY6B,EAAIE,OAAOL,SAE7CrG,EAAAC,EAAAC,cAAA,UAAQmG,MAAM,WAAd,aACArG,EAAAC,EAAAC,cAAA,UAAQmG,MAAM,YAAd,gBAGJrG,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,IAAQ5C,eACtB6C,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,IAAQ3C,MAAtB,WAEF4C,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,IAAQ5C,eACtB6C,EAAAC,EAAAC,cAAA,UACEC,UAAWJ,IAAQ3C,KACnBmJ,SAAU,SAAAC,GAAG,OAAIN,EAAKrB,SAAS,CAAEN,UAAWiC,EAAIE,OAAOL,UAEvDrG,EAAAC,EAAAC,cAAA,UAAQmG,MAAO,aAAf,eAECF,IAILnG,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,IAAQ5C,eAEtB6C,EAAAC,EAAAC,cAAA,UAAQC,UAAWJ,IAAQ3C,MAEzB4C,EAAAC,EAAAC,cAAA,UAAQmG,MAAO,QAAf,mBAMJ3B,EAA2B,KAwC/B,OAvCIuB,KAAK7B,MAAMM,2BACbiC,EAAoB,KACpBL,EAAU,KACV5B,EACE1E,EAAAC,EAAAC,cAACoB,EAAA,SAAD,KACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,IAAQ5C,eACtB6C,EAAAC,EAAAC,cAAA,UACEC,UAAWJ,IAAQ3C,KACnBmJ,SAAU,SAAAC,GAAG,OAAIN,EAAKvB,YAAY6B,EAAIE,OAAOL,SAC7CrG,EAAAC,EAAAC,cAAA,UAAQmG,MAAM,WAAd,eAGJrG,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,IAAQ5C,eACtB6C,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,IAAQ3C,MAAtB,WAEF4C,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,IAAQ5C,eACtB6C,EAAAC,EAAAC,cAAA,UACEC,UAAWJ,IAAQ3C,KACnBmJ,SAAU,SAAAC,GAAG,OAAIN,EAAKrB,SAAS,CAAEN,UAAWiC,EAAIE,OAAOL,UACvDrG,EAAAC,EAAAC,cAAA,UAAQmG,MAAO,YAAf,cAECF,IAGLnG,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,IAAQ5C,eAEtB6C,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,IAAQ3C,MAAtB,WAGF4C,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,IAAQ5C,eACtB6C,EAAAC,EAAAC,cAAA,UACEC,UAAWJ,IAAQ3C,KACnBmJ,SAAU,SAAAC,GAAG,OAAIN,EAAKrB,SAAS,CAAEN,UAAWiC,EAAIE,OAAOL,UACvDrG,EAAAC,EAAAC,cAAA,UAAQmG,MAAO,QAAf,cAORrG,EAAAC,EAAAC,cAACjB,EAAD,CAASkD,KAAK,eACVwE,EACAL,EACA5B,EACF1E,EAAAC,EAAAC,cAACf,EAAD,CAAQiB,QAAS,kBAAM8F,EAAKpB,qBAA5B,qBACA9E,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,IAAQ1C,UAAtB,YACA2C,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,IAAQ1C,UAAW4I,KAAK7B,MAAMK,YAC5CzE,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,IAAQ1C,UAAW4I,KAAK7B,MAAMI,qBA3I3BvC,4DC4GV2E,8MA/GbxC,MAAQ,CACNyC,OAAQ,CACN,CACExC,MAAO,2BACP9D,KAAM,sBACNuG,MAAO,QACPC,QAAS,CACP,CAAE5E,KAAM,SAAU2E,MAAO,UACzB,CAAE3E,KAAM,oBAAqB2E,MAAO,qBACpC,CAAE3E,KAAM,mBAAoB2E,MAAO,sBAGvC,CACEzC,MAAO,qBACP9D,KAAM,eACNuG,MAAO,QACPC,QAAS,CACP,CAAE5E,KAAM,mBAAoB2E,MAAO,oBACnC,CAAE3E,KAAM,iBAAkB2E,MAAO,mBACjC,CAAE3E,KAAM,kBAAmB2E,MAAO,mBAClC,CAAE3E,KAAM,kBAAmB2E,MAAO,qBAGtC,CAAEzC,MAAO,uBAAc9D,KAAM,oBAAqBuG,MAAO,UAAWC,QAAS,IAC7E,CACE1C,MAAO,8BACP9D,KAAM,oBACNuG,MAAO,SACPC,QAAS,CAAC,CAAE5E,KAAM,QAAS2E,MAAO,YAGtCE,WAAY,GACZC,WAAY,KAGdC,mBAAqB,SAACC,EAAOC,GACFhG,SAASiG,cAAT,YAAAtG,OAAmCoG,IAASG,UACpDC,OAAOxH,KAAQyH,eAChC,IAAMR,EAAUrF,OAAA8F,GAAA,EAAA9F,CAAOiD,EAAKR,MAAM4C,YAC9BA,EAAWU,QAAQN,IAAY,EACjCJ,EAAWW,OAAOX,EAAWU,QAAQN,GAAU,GAE/CJ,EAAWY,KAAKR,GAElBxC,EAAKC,SAAS,CAAEmC,oGFkGpB,SAA8B1C,EAAWuD,EAAa/D,EAASgE,EAAkB/D,GAC7E,IACIpB,EADA4C,EAAc,MAEdL,EAAc,GACd2C,GAAevD,EAAU8B,SAAS,YACpClB,EAAc,MAGA,MAAZpB,EACsB,YAApBC,GACFwB,EAAc,MACd5C,EAAOmF,EAAiBjF,QAAQL,aAAa,IAChB,SAApBuB,GACTwB,EAAc,GACd5C,EAAOmF,EAAiBhF,KAAKN,aAAa,IACb,aAApBuB,GACTwB,EAAc,MACd5C,EAAOmF,EAAiB/E,SAASP,aAAa,IACjB,kBAApBuB,IACTwB,EAAc,GACd5C,EAAOmF,EAAiB9E,cAAcR,aAAa,IAEhC,QAAZsB,EACe,YAApBC,GACFwB,EAAc,OACd5C,EAAOmF,EAAiBjF,QAAQL,aAAa,IAChB,SAApBuB,GACTwB,EAAc,GACd5C,EAAOmF,EAAiBhF,KAAKN,aAAa,IACb,aAApBuB,GACTwB,EAAc,OACd5C,EAAOmF,EAAiB/E,SAASP,aAAa,IACjB,kBAApBuB,IACTwB,EAAc,GACd5C,EAAOmF,EAAiB9E,cAAcR,aAAa,IAG7B,YAApBuB,GACFwB,EAAc,MACd5C,EAAOmF,EAAiBjF,QAAQL,aAAa,IAChB,SAApBuB,GACTwB,EAAc,GACd5C,EAAOmF,EAAiBhF,KAAKN,aAAa,IACb,aAApBuB,GACTwB,EAAc,MACd5C,EAAOmF,EAAiB/E,SAASP,aAAa,IACjB,kBAApBuB,IACTwB,EAAc,GACd5C,EAAOmF,EAAiB9E,cAAcR,aAAa,IAOrD,GAAAzB,OAAU+C,GAAV/C,OAAoBwE,EAApB,KAAAxE,OAAmC4B,EAAnC,KAAA5B,OAA2CmE,EAA3C,KAAAnE,OAA0D8G,GErJ5DhC,oCAGO,IAAAK,EAAAD,KACDY,EAASZ,KAAK7B,MAAMyC,OAAOkB,IAAI,SAACC,EAAUb,GAC9C,IAAMC,EAAO,SAAArG,OAAYoG,GACrBF,EAAa,KACbE,IAAUjB,EAAK9B,MAAMyC,OAAOtD,OAAS,IACvC0D,EACEjH,EAAAC,EAAAC,cAAA,SAAOC,UAAWJ,KAAQkI,iBAA1B,uBAEEjI,EAAAC,EAAAC,cAAA,UAAQC,UAAWJ,KAAQmI,WAAY3B,SAAU,SAAAC,GAAG,OAAIN,EAAKrB,SAAS,CAAEoC,WAAYT,EAAIE,OAAOL,UAC7FrG,EAAAC,EAAAC,cAAA,UAAQmG,MAAM,KAAd,KACArG,EAAAC,EAAAC,cAAA,UAAQmG,MAAM,MAAd,MACArG,EAAAC,EAAAC,cAAA,UAAQmG,MAAM,MAAd,MACArG,EAAAC,EAAAC,cAAA,UAAQmG,MAAM,MAAd,MACArG,EAAAC,EAAAC,cAAA,UAAQmG,MAAM,MAAd,SAKR,IAAM8B,EAAeH,EAASjB,QAAQgB,IAAI,SAAAK,GACxC,IAAIC,EAAkB,GAKtB,MAHuB,WAAnBL,EAASlB,QACXuB,EAAe,gBAAAtH,OAAmBmF,EAAK9B,MAAM6C,aAG7CjH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE6H,IAAKF,EAAOtB,MACZ3G,UAAS,GAAAY,OAAKhB,KAAQwI,YAAb,mBACT7H,GAAI,CAAEC,SAAQ,OAAU6H,OAAM,UAAAzH,OAAYqH,EAAOtB,OAAnB/F,OAA2BsH,KAAsBD,EAAOjG,QAG5F,OACEnC,EAAAC,EAAAC,cAACoB,EAAA,SAAD,CAAUgH,IAAKlB,GACbpH,EAAAC,EAAAC,cAAA,MAAIuI,GAAIrB,EAASjH,UAAWJ,KAAQ2I,MAAOtI,QAAS,kBAAM8F,EAAKgB,mBAAmBC,EAAOC,KACvFpH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAW6H,EAASzH,OAASyH,EAAS3D,OAE3CrE,EAAAC,EAAAC,cAAA,KAAGuI,GAAE,WAAA1H,OAAaoG,GAAShH,UAAS,GAAAY,OAAKhB,KAAQ4I,YAAb,2BAEtC3I,EAAAC,EAAAC,cAAC0I,GAAA3I,EAAD,CACE4I,SAAW,IACXC,OAAQ5C,EAAK9B,MAAM4C,WAAWU,QAAQN,IAAY,EAAI,OAAS,GAE/DpH,EAAAC,EAAAC,cAAA,OAAKuI,GAAE,iBAAA1H,OAAmBoG,GAAShH,UAAS,GAAAY,OAAKhB,KAAQgJ,eACrD9B,EACDkB,OAMX,OACEnI,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,KAAQ6G,QACtB5G,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,KAAQiJ,QAAQhJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAA5C,WACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,KAAQkJ,WAAYpC,WA1GtB5E,yECqCNiH,GAxCA,SAACtJ,GA0Bd,OACEI,EAAAC,EAAAC,cAAA,WAASC,UAAWP,EAAMO,WACxBH,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,KAAQlC,SAAtB,aA1BE+B,EAAMuJ,iBAENnJ,EAAAC,EAAAC,cAAA,QAAMC,UAAWJ,KAAQjC,eACtB8B,EAAMwJ,YACPpJ,EAAAC,EAAAC,cAAA,KAAGC,UAAS,uBAAAY,OAAyBhB,KAAQjC,kBAKjDkC,EAAAC,EAAAC,cAAA,QAAMC,UAAWJ,KAAQhC,aACtB6B,EAAMwJ,YACPpJ,EAAAC,EAAAC,cAAA,KAAGC,UAAS,uBAAAY,OAAyBhB,KAAQhC,iBAM5C6B,EAAMuJ,iBAGF,KAFAnJ,EAAAC,EAAAC,cAAA,KAAGC,UAAWJ,KAAQjC,eAAtB,0BAA6D8B,EAAMyJ,iBCnB1EnG,GAAWC,EAAQ,IAkEVmG,GAhEG,SAAA1J,GAChB,IAAI2J,EAAUC,iBAAO,MACG,YAApB5J,EAAM6J,WAERC,WAAW,WACLH,EAAQI,SACVzG,GAAS0G,KAAKL,EAAQI,QAAS,CAAEE,QAASjK,EAAM6J,aAEjD,KAGL,IAAMK,EAAWlK,EAAM0J,UAAU1J,EAAMmK,eAIvC,OAAInK,EAAM0J,UAAU/F,SAAW3D,EAAMoK,UAEjChK,EAAAC,EAAAC,cAAA,QAAMC,UAAWJ,KAAQzC,UAAW2M,SAJlB,SAACC,GAAD,OAAWtK,EAAMuK,KAAKD,EAAOJ,EAASrB,GAAIqB,EAASM,UAKnEpK,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,KAAQvC,gBAAvB,YAAiDoC,EAAMmK,cAAgB,EAAvE,OAA8EnK,EAAM0J,UAAU/F,QAC9FvD,EAAAC,EAAAC,cAAA,WAASoI,IAAKwB,EAASrB,GAAItI,UAAWJ,KAAQxC,UAC5CyC,EAAAC,EAAAC,cAAA,SAAI4J,EAASO,MACbrK,EAAAC,EAAAC,cAAA,SACEoI,IAAK1I,EAAM6J,UACXtJ,UAAWP,EAAM0K,YAAcvK,KAAQrC,YAAcqC,KAAQtC,YAC7D8M,IAAKhB,EACLiB,KAAK,OACLrI,KAAK,cACLsI,WAAS,EACTC,aAAa,MACbC,YAAY,8BACZtE,MAAOzG,EAAMwJ,cAEfpJ,EAAAC,EAAAC,cAAA,SAAOC,UAAWJ,KAAQpC,QAAS6M,KAAK,SAASnE,MAAM,WAIpDzG,EAAMoK,UAEbhK,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,KAAQzC,WACtBsC,EAAMgL,cAAc7C,IAAI,SAAC+B,EAAU3C,GAAX,OACxBnH,EAAAC,EAAAC,cAACoB,EAAA,SAAD,CAAUgH,IAAK,WAAanB,EAAQ,IAClCnH,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,KAAQvC,gBAAvB,YAAiD2J,EAAQ,EAAzD,MAA+D2C,EAASO,MACxErK,EAAAC,EAAAC,cAAC2K,GAAD,CAAQ1K,UAAWJ,KAAQnC,cACzBuL,iBAAkBW,EAASX,iBAC3BE,cAAenG,GAASwC,WAAWoE,EAAST,eAC5CD,YAAaU,EAASV,kBAOvB,0BC7CI0B,GAfA,CACb,CAAEvI,KAAM,UAAWC,aAAc,CAAE,cACnC,CAAED,KAAM,WAAYC,aAAc,CAAE,YACpC,CAAED,KAAM,QAASC,aAAc,CAAE,aACjC,CAAED,KAAM,QAASC,aAAc,CAAE,aACjC,CAAED,KAAM,MAAOC,aAAc,CAAE,YAC/B,CAAED,KAAM,OAAQC,aAAc,CAAE,cAChC,CAAED,KAAM,OAAQC,aAAc,CAAE,gBAChC,CAAED,KAAM,SAAUC,aAAc,CAAE,eAClC,CAAED,KAAM,YAAaC,aAAc,CAAE,YACrC,CAAED,KAAM,UAAWC,aAAc,CAAE,aACnC,CAAED,KAAM,WAAYC,aAAc,CAAE,iBACpC,CAAED,KAAM,WAAYC,aAAc,CAAE,gBCsBvBuI,GAlCW,CACxB,CAAExI,KAAM,MAAOC,aAAc,CAAC,cAC9B,CAAED,KAAM,MAAOC,aAAc,CAAC,YAC9B,CAAED,KAAM,MAAOC,aAAc,CAAC,UAC9B,CAAED,KAAM,MAAOC,aAAc,CAAC,UAC9B,CAAED,KAAM,MAAOC,aAAc,CAAC,WAC9B,CAAED,KAAM,MAAOC,aAAc,CAAC,UAC9B,CAAED,KAAM,MAAOC,aAAc,CAAC,WAC9B,CAAED,KAAM,MAAOC,aAAc,CAAC,UAC9B,CAAED,KAAM,MAAOC,aAAc,CAAC,aAC9B,CAAED,KAAM,OAAQC,aAAc,CAAC,UAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,iBAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,eAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,gBAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,aAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,eAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,iBAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,mBAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,kBAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,eAAgB,eAC/C,CAAED,KAAM,OAAQC,aAAc,CAAC,YAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,mBAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,iBAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,kBAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,eAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,iBAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,mBAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,qBAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,oBAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,iBAAkB,iBACjD,CAAED,KAAM,OAAQC,aAAc,CAAC,gBAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,qBCrBlBwI,GAVU,CACvB,CAAEzI,KAAM,SAAUC,aAAc,CAAE,eAClC,CAAED,KAAM,UAAWC,aAAc,CAAE,YACnC,CAAED,KAAM,YAAaC,aAAc,CAAE,aACrC,CAAED,KAAM,WAAYC,aAAc,CAAE,cACpC,CAAED,KAAM,SAAUC,aAAc,CAAE,aAClC,CAAED,KAAM,WAAYC,aAAc,CAAE,aACpC,CAAED,KAAM,SAAUC,aAAc,CAAE,gBCCpC,SAASyI,GAAoBC,GAG3B,OAAOC,GADM/H,GAAQzB,OAAA8F,GAAA,EAAA9F,CAAIyJ,MAI3B,SAASC,GAAqBH,GAG5B,OAAOC,GADM/H,GAAQzB,OAAA8F,GAAA,EAAA9F,CAAI2J,MAI3B,SAASC,GAAgBL,GAGvB,OAAOC,GADQ/H,GAAQzB,OAAA8F,GAAA,EAAA9F,CAAI6J,MAI7B,SAASC,GAAeP,GAKtB,IAHA,IAAMJ,EAASY,GAAc/J,OAAA8F,GAAA,EAAA9F,CAAI6J,IAAWN,GACtCS,EAAOD,GAAc/J,OAAA8F,GAAA,EAAA9F,CAAI2J,IAAmBJ,GAC9C5B,EAAY,GACPhG,EAAI,EAAGA,EAAIwH,EAAOvH,OAAQD,IAAK,CACtC,IAAMsI,EAASC,GAAeF,EAAKrI,IAC7BwI,EAAWD,GAAef,EAAOxH,IACjCyI,EAAQC,GAAwBL,EAAKrI,IACrC2I,EAAUD,GAAwBlB,EAAOxH,IAC/CgG,EAAUhG,GAAK4I,GAAe5I,EAAI,EAAL,GAAAvC,OAAW6K,EAAX,KAAA7K,OAAqB+K,GAArB,GAAA/K,OAAoCkL,GAApClL,OAA8CgL,IAE7E,OAAOzC,ECtCT,IAee6C,GAfO,CACpB,CAAE5J,KAAM,OAAQC,aAAc,CAAC,WAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,SAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,UAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,SAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,SAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,WAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,aAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,YAC/B,CAAED,KAAM,OAAQC,aAAc,CAAC,SAC/B,CAAED,KAAM,QAASC,aAAc,CAAC,UAChC,CAAED,KAAM,QAASC,aAAc,CAAC,cAChC,CAAED,KAAM,QAASC,aAAc,CAAC,cCmDnB4J,GA/DC,CACd,CAAE7J,KAAM,IAAKC,aAAc,CAAC,UAC5B,CAAED,KAAM,IAAKC,aAAc,CAAC,UAC5B,CAAED,KAAM,IAAKC,aAAc,CAAC,WAC5B,CAAED,KAAM,IAAKC,aAAc,CAAC,WAC5B,CAAED,KAAM,IAAKC,aAAc,CAAC,UAC5B,CAAED,KAAM,IAAKC,aAAc,CAAC,WAC5B,CAAED,KAAM,IAAKC,aAAc,CAAC,YAC5B,CAAED,KAAM,IAAKC,aAAc,CAAC,WAC5B,CAAED,KAAM,IAAKC,aAAc,CAAC,WAC5B,CAAED,KAAM,KAAMC,aAAc,CAAC,YAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,aAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,aAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,cAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,cAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,aAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,cAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,eAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,cAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,cAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,cAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,eAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,eAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,eAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,iBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,eAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,iBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,iBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,iBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,kBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,iBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,iBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,eAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,iBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,iBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,iBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,kBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,iBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,iBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,cAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,eAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,eAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,eAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,iBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,gBAC7B,CAAED,KAAM,KAAMC,aAAc,CAAC,iBCvD/B,SAAS6J,KAGP,IAFA,IAAMC,EAAoBlJ,GAAQzB,OAAA8F,GAAA,EAAA9F,CAAI4K,KAClCjD,EAAY,GACPhG,EAAI,EAAGA,EAAIgJ,EAAkB/I,OAAQD,IAAK,CACjD,IAAMkJ,EAAWX,GAAeS,EAAkBhJ,IAC5CmJ,EAAUT,GAAwBM,EAAkBhJ,IAC1DgG,EAAUhG,GAAK4I,GAAe5I,EAAI,EAAL,GAAAvC,OAAWyL,GAAX,GAAAzL,OAA0B0L,IAEzD,OAAOnD,EAGT,SAASoD,GAAiBC,GACxB,IAAML,EAAiB3K,OAAA8F,GAAA,EAAA9F,CAAOiL,IACjB,UAATD,EACFL,EAAkB3E,OAAO,EAAG,IACV,UAATgF,GACTL,EAAkB3E,OAAO,EAAG2E,EAAkB/I,OAAS,IAEzD+I,EAAkB/I,OAAS,GAG3B,IAFA,IAAMsJ,EAAQzJ,GAAQzB,OAAA8F,GAAA,EAAA9F,CAAI2K,IACtBhD,EAAY,GACPhG,EAAI,EAAGA,EAAIuJ,EAAMtJ,OAAQD,IAAK,CACrC,IAAMkJ,EAA6B,MAAlBK,EAAMvJ,GAAGf,KAAT,GAAAxB,OAA2B8K,GAAegB,EAAMvJ,IAAhD,cAAAvC,OAAkE8K,GAAegB,EAAMvJ,IAAvF,YACXmJ,EAAUT,GAAwBa,EAAMvJ,IAC9CgG,EAAUhG,GAAK4I,GAAe5I,EAAI,EAAL,GAAAvC,OAAWyL,GAAX,GAAAzL,OAA0B0L,IAEzD,OAAOnD,EC5BT,SAASoC,GAAcoB,EAAU5B,GAC/B,IAAI6B,EAAgB3J,GAAQzB,OAAA8F,GAAA,EAAA9F,CAAImL,IAChC,GAAI5B,EAAa4B,EAASvJ,OAAQ,CAUhC,IATA,IAAMyJ,EAAkB9B,EAAa4B,EAASvJ,OAExC0J,EAAYxJ,KAAKyJ,KAAKhC,EAAa4B,EAASvJ,QAI5C4J,EAFyBF,EAAYH,EAASvJ,OAEDyJ,EAE/CI,EAAqB,GAChB9J,EAAI,EAAGA,EAAI2J,EAAW3J,IAC7B8J,EAAqBhK,GAAQzB,OAAA8F,GAAA,EAAA9F,CAAImL,IACjCC,EAAa,GAAAhM,OAAAY,OAAA8F,GAAA,EAAA9F,CAAOoL,GAAPpL,OAAA8F,GAAA,EAAA9F,CAAyByL,IAExCL,EAAcxJ,OAAUwJ,EAAcxJ,OAAS4J,OAE/CJ,EAAcxJ,OAAS2H,EAEzB,OAAO6B,EAGT,SAAS3J,GAAQC,GACf,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADCM,EAElB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkCM,EAAA,GAE9BP,EAAMG,GAFwBI,EAAA,GAI3C,OAAOP,EAGT,SAASwI,GAAetJ,GACtB,OAAOA,EAAKA,KAGd,SAASyJ,GAAwBzJ,GAE/B,OAAOA,EAAKC,aAAa,GAG3B,SAAS0J,GAAezD,EAAIqB,EAAUM,GACpC,MAAO,CAAE3B,KAAK4B,KAAI,GAAAtJ,OAAK+I,GAAYM,UAGrC,SAASe,GAAakC,EAAOnC,GAI3B,IAHA,IAAI5B,EAAY,GACZgE,EAAcD,EAAM9J,OACpBD,EAAI,EACAA,EAAIgK,EAAahK,IAAK,CAC5B,IAAMiK,EAAM1B,GAAewB,EAAM/J,IAC3BkK,EAAKxB,GAAwBqB,EAAM/J,IACzCgG,EAAUhG,GAAK4I,GAAe5I,EAAI,EAAGiK,EAAKC,GAE5C,OAAOlE,EC7CT,IAAMpG,GAAWC,EAAQ,IA4HV9D,8MAxHb+E,MAAQ,CACNqJ,MAAO,EACP1D,cAAe,EACfO,aAAa,EACbb,UAAW,aACXH,UAAW,GACXsB,cAAe,GACfZ,WAAW,EACX0D,YAAa,MAGftK,QAAU,SAACC,EAAO4D,GAChB,IAAK,IAAI3D,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADCM,EAElB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkCM,EAAA,GAE9BP,EAAMG,GAFwBI,EAAA,GAK3C,OADAP,EAAME,OAAS0D,EACR5D,KAGTsK,WAAa,SAACzD,GACZ,IAAMJ,EAAWlF,EAAKR,MAAMkF,UAAU1E,EAAKR,MAAM2F,eAE3CX,EAAcc,EAAMxD,OAAOkH,YAAYvH,MACvC8C,EAAmBjG,GAAS2K,SAASzE,KAAiBlG,GAAS2K,SAAS/D,EAASM,QACjFQ,EAAajJ,OAAA8F,GAAA,EAAA9F,CAAOiD,EAAKR,MAAMwG,eAErCkD,QAAQC,IAAI3E,EAAalG,GAASwC,WAAWoE,EAASM,SACtD,IAAIqD,EAAQ7I,EAAKR,MAAMqJ,MACnBtE,IACFsE,GAAgB,GAElB7C,EAAchD,KAAK,CAAEyC,KAAMP,EAASO,KAAMjB,cAAaC,cAAeS,EAASM,OAAQjB,qBACnFvE,EAAKR,MAAM2F,cAAgB,IAAMnF,EAAKR,MAAMkF,UAAU/F,OACxDqB,EAAKC,SAAS,CAACmF,WAAW,EAAMY,gBAAe8C,YAAa,YACnDtE,EACTxE,EAAKC,SAAS,SAAAmJ,GACZ,MAAO,CACLjE,cAAeiE,EAAUjE,cAAgB,EACzC0D,QACA7C,gBACAN,aAAa,KAIjB1F,EAAKC,SAAS,CAACyF,aAAa,IAE9BJ,EAAM+D,oBAGRC,aAAe,SAACzE,GACd7E,EAAKC,SAAS,CAAC4E,kGAIf,IAAMjB,EAASvC,KAAKrG,MAAMyB,SAASmH,OAC7B2F,EAAcC,KAAYC,MAAM7F,GACtC,GAAK2F,EAAY9J,MAIjB,OAAQ8J,EAAY9J,OAClB,IAAK,QACH4B,KAAKpB,SAAS,CAAEyE,UAAWgF,EAAc7C,eAAe0C,EAAYI,aAAcb,YAAa,6BAC/F,MACF,IAAK,SACHzH,KAAKpB,SAAS,CAAEyE,UAAWgF,EAAc/C,gBAAgB4C,EAAYI,aAAcb,YAAa,6BAChG,MACF,IAAK,oBACHzH,KAAKpB,SAAS,CAAEyE,UAAWgF,EAAcjD,qBAAqB8C,EAAYI,aAAcb,YAAa,6BACrG,MACF,IAAK,mBACHzH,KAAKpB,SAAS,CAAEyE,UAAWgF,EAAcrD,oBAAoBkD,EAAYI,aAAcb,YAAa,6BACpG,MACF,IAAK,mBACHzH,KAAKpB,SAAS,CAAEyE,UAAWgF,EAAcjC,yBAA0BqB,YAAa,uBAChF,MACF,IAAK,kBACHzH,KAAKpB,SAAS,CAAEyE,UAAWgF,EAAc5B,iBAAiB,QAASgB,YAAa,uBAChF,MACF,IAAK,kBACHzH,KAAKpB,SAAS,CAAEyE,UAAWgF,EAAc5B,iBAAiB,SAAUgB,YAAa,uBACjF,MACF,IAAK,kBACHzH,KAAKpB,SAAS,CAAEyE,UAAWgF,EAAc5B,iBAAiB,SAAUgB,YAAa,4BA1BnFzH,KAAKrG,MAAM4O,QAAQ5G,KAAK,sCAiCnB,IAAA1B,EAAAD,KACHwD,EAAY,KAYhB,OAXKxD,KAAK7B,MAAM4F,YACdP,EACEzJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,KAAQT,aACtBU,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACf,EAAD,CAAQkD,SAAmC,eAAzB4D,KAAK7B,MAAMqF,UAA4BrJ,QAAS,kBAAM8F,EAAKgI,aAAa,gBAA1F,YACAlO,EAAAC,EAAAC,cAACf,EAAD,CAAQkD,SAAmC,eAAzB4D,KAAK7B,MAAMqF,UAA4BrJ,QAAS,kBAAM8F,EAAKgI,aAAa,gBAA1F,YACAlO,EAAAC,EAAAC,cAACf,EAAD,CAAQkD,SAAmC,YAAzB4D,KAAK7B,MAAMqF,UAAyBrJ,QAAS,kBAAM8F,EAAKgI,aAAa,aAAvF,YAMJlO,EAAAC,EAAAC,cAACjB,EAAD,CAASkD,KAAM8D,KAAK7B,MAAMsJ,YAAavN,UAAWJ,KAAQV,MACxDW,EAAAC,EAAAC,cAAC5C,GAAD,CACEgM,UAAWrD,KAAK7B,MAAMkF,UACtBS,cAAe9D,KAAK7B,MAAM2F,cAC1BN,UAAWxD,KAAK7B,MAAMqF,UACtBU,KAAM,SAACD,GAAD,OAAWhE,EAAKyH,WAAWzD,IACjCU,cAAe3E,KAAK7B,MAAMwG,cAC1BN,YAAarE,KAAK7B,MAAMkG,YACxBN,UAAW/D,KAAK7B,MAAM4F,YACpBP,UAnHOxH,aCyBJwM,8MA3BbrK,MAAQ,CACNsK,gBAAgB,KAGlBC,yBAA2B,WACzB,IAAMD,GAAkB9J,EAAKR,MAAMsK,eACnC9J,EAAKC,SAAS,CAAC6J,sBAGjBE,qBAAuB,WACrBhK,EAAKC,SAAS,CAAE6J,gBAAgB,6EAIhC,OACE1O,EAAAC,EAAAC,cAACV,EAAD,CAAQgC,mBAAoByE,KAAK0I,0BAC/B3O,EAAAC,EAAAC,cAACnB,EAAD,CAAYe,KAAMmG,KAAK7B,MAAMsK,eAAgBrO,QAAS4F,KAAK0I,2BAC3D3O,EAAAC,EAAAC,cAACrB,EAAD,CAAUiB,KAAMmG,KAAK7B,MAAMsK,eAAiBrO,QAAS4F,KAAK2I,uBAC1D5O,EAAAC,EAAAC,cAAC2O,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW/Q,IACjC+B,EAAAC,EAAAC,cAAC2O,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAK,EAACC,UAAW7K,KAC5CnE,EAAAC,EAAAC,cAAC2O,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAK,EAACC,UAAWpI,KACvC5G,EAAAC,EAAAC,cAAC2O,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,UAAW3P,aAtB3B4C,aCCEgN,QACW,cAA7BC,OAAO7N,SAAS8N,UAEe,UAA7BD,OAAO7N,SAAS8N,UAEhBD,OAAO7N,SAAS8N,SAASC,MACvB,2DCVN,IAAMC,GACJrP,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAe6O,SAAUC,kBACvBvP,EAAAC,EAAAC,cAACsP,GAAD,OAIJC,IAASC,OAAOL,GAAKjO,SAASuO,eAAe,SDmHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCElInBhT,EAAAC,QAAA,CAAkB8L,OAAA,uBAAApC,OAAA,uBAAAqC,UAAA,0BAAAP,MAAA,sBAAAK,aAAA,6BAAAR,YAAA,4BAAAN,gBAAA,gCAAAC,WAAA,2BAAAS,YAAA,4BAAAnB,cAAA","file":"static/js/main.8973f650.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"WordContainer\":\"CreateQuiz_WordContainer__2mC1b\",\"Word\":\"CreateQuiz_Word__3-xMw\",\"Sentence\":\"CreateQuiz_Sentence__PXoT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Questions\":\"Questions_Questions__2eqNU\",\"Question\":\"Questions_Question__3KKfj\",\"QuestionNumber\":\"Questions_QuestionNumber__36Tho\",\"AnswerField\":\"Questions_AnswerField__3TrNV\",\"EmptyAnswer\":\"Questions_EmptyAnswer__3AvGR\",\"NextBtn\":\"Questions_NextBtn__34mrB\",\"AnswerHistory\":\"Questions_AnswerHistory__NT6V4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Answers\":\"Result_Answers__1I48m\",\"CorrectAnswer\":\"Result_CorrectAnswer__RoC7K\",\"WrongAnswer\":\"Result_WrongAnswer__2rlzT\",\"Answer\":\"Result_Answer__1_i-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Portal\":\"Portal_Portal__12e22\",\"Slider\":\"Portal_Slider__3c_hP\",\"Slide\":\"Portal_Slide__DDgBl\",\"SlideCaption\":\"Portal_SlideCaption__1niW-\",\"ImageCaption\":\"Portal_ImageCaption__QyJlB\",\"KirbySlide\":\"Portal_KirbySlide__1ZUNI\",\"WiggleSlide\":\"Portal_WiggleSlide__p42MY\",\"MiyamotoApproveSlide\":\"Portal_MiyamotoApproveSlide__24Lef\",\"MiyamotoRejectSlide\":\"Portal_MiyamotoRejectSlide__3utjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__1nlbe\",\"Hiragana\":\"NavBar_Hiragana__BN2nx\",\"Hamburger\":\"NavBar_Hamburger__1qvqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1p2af\",\"Hidden\":\"Backdrop_Hidden__375I_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__31_nM\",\"DrawerOpen\":\"SideDrawer_DrawerOpen__2kFFb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__7AyTM\",\"SectionHeader\":\"Section_SectionHeader__spjuW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1q8mH\",\"ActiveBtn\":\"Button_ActiveBtn__OB75O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__1ECBO\",\"Preferences\":\"Quiz_Preferences__3YPid\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Item_Item__1eUVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__7kSfi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinks\":\"NavLinks_NavLinks__1ZV24\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLink\":\"NavLink_NavLink__13kiY\"};","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.scss';\r\n\r\nconst backdrop = (props) => {\r\n  const backdropClass = props.show ? classes.Backdrop : classes.Hidden;\r\n  return <div className={backdropClass} onClick={props.clicked}/>\r\n}\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport classes from './Item.module.scss';\r\n\r\nconst item = (props) => {\r\n  let icon;\r\n  switch (props.label) {\r\n    case \"Partner Up\":\r\n      icon = <i className=\"fas fa-user-friends\"></i>;\r\n      break;\r\n    case \"Games\":\r\n      icon = <i className=\"fas fa-gamepad\"></i>;\r\n      break;\r\n    case \"Quizzes\":\r\n      icon = <i className=\"fas fa-pencil-alt\" />;\r\n      break;\r\n    case \"Profile\":\r\n      icon = <i className=\"fas fa-user-circle\"></i>\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <Link to={{pathname: props.href}} className={classes.Item}>\r\n      { icon }\r\n      <p>{props.label}</p>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default item;","import React from 'react';\r\n\r\nimport classes from './SideDrawer.module.scss';\r\nimport Item from './Item/Item';\r\n\r\nconst sideDrawer = (props) => {\r\n  let drawerOpenClass = props.show ? classes.DrawerOpen : null;\r\n  return (\r\n    <nav className={`${classes.SideDrawer} ${drawerOpenClass}`}>\r\n      <ul>\r\n        <li onClick={props.clicked}>\r\n          <Item label='Partner Up' />\r\n        </li>\r\n        <li onClick={props.clicked}>\r\n          <Item label=\"Games\" />\r\n        </li>\r\n        <li onClick={props.clicked}>\r\n          <Item href='/topics' label=\"Quizzes\" />\r\n        </li>\r\n        <li onClick={props.clicked}>\r\n         <Item label='Profile' />\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default sideDrawer;","import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nimport classes from \"./NavLink.module.scss\";\r\n\r\nconst navLink = props => {\r\n  let icon;\r\n  switch (props.label) {\r\n    case \"Partner Up\":\r\n      icon = <i className=\"fas fa-user-friends\"></i>;\r\n      break;\r\n    case \"Games\":\r\n      icon = <i className=\"fas fa-gamepad\"></i>;\r\n      break;\r\n    case \"Quizzes\":\r\n      icon = <i className=\"fas fa-pencil-alt\" />;\r\n      break;\r\n    case \"Profile\":\r\n      icon = <i className=\"fas fa-user-circle\"></i>\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <Link to={{pathname: props.href}} className={classes.NavLink}>\r\n      { icon }\r\n      <p>{props.label}</p>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default navLink;\r\n","import React from 'react';\r\n\r\nimport classes from './NavLinks.module.scss';\r\nimport NavLink from './NavLink/NavLink';\r\n\r\nconst navLinks = (props) => (\r\n  <div className={classes.NavLinks}>\r\n    <NavLink label='Partner Up' />\r\n    <NavLink label='Games' />\r\n    <NavLink href='/topics' label='Quizzes' />\r\n    <NavLink label='Profile' />\r\n  </div>\r\n);\r\n\r\nexport default navLinks;","import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport classes from \"./NavBar.module.scss\";\r\n\r\nconst NavBar = props => (\r\n  <header className={classes.NavBar}>\r\n    <button className={classes.Hamburger} onClick={props.openDrawer}>\r\n      <i className=\"fas fa-bars\"></i>\r\n    </button>\r\n    <Link to={{pathname: '/'}} >\r\n      <h1>\r\n        <p className={classes.Hiragana}>しつもん</p>\r\n        shitsumon\r\n      </h1>\r\n    </Link>\r\n  </header>\r\n);\r\n\r\nexport default NavBar;\r\n","import React, { Fragment } from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport classes from \"./Layout.module.scss\";\r\nimport NavLinks from \"../UI/NavLinks/NavLinks\";\r\nimport NavBar from \"../UI/NavBar/NavBar\";\r\n\r\nconst layout = props => {\r\n  document.createElement('main');\r\n  let navLinks = null;\r\n  if (props.location.pathname !== '/quiz') {\r\n    navLinks = <NavLinks />;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <NavBar openDrawer={props.drawerClickHandler} />\r\n      <main className={classes.Layout}>{props.children}</main>\r\n      <footer>\r\n        { navLinks }\r\n      </footer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(layout);\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport classes from './Portal.module.scss';\r\nimport Slider from \"react-slick\";\r\n\r\n\r\nclass Portal extends Component {\r\n  render() {\r\n    const settings = {\r\n      // arrows: false,\r\n      // lazyLoad: true,\r\n      // fade: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      // swipe: false,\r\n      autoplay: true,\r\n      autoplaySpeed: 4000,\r\n    };\r\n    return (\r\n      <Fragment>\r\n        <Slider {...settings} className={classes.Slider}>\r\n          <Fragment>\r\n            <div className={classes.Slide}>\r\n              <p className={classes.SlideCaption}>So this is currently a placeholder.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.MiyamotoApproveSlide}`}>\r\n              <p className={classes.ImageCaption}>The idea of this site is to auto-generate Japanese questions with the words you currently know</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={classes.Slide}>\r\n              <p className={classes.SlideCaption}>or based on general things like dates, times etc.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.MiyamotoRejectSlide}`}>\r\n              <p className={classes.ImageCaption}>...but we're still faaaaaar away from that.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.KirbySlide}`} >\r\n              <p className={classes.ImageCaption}>I know, we've betrayed you and Kirby.</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={classes.Slide}>\r\n            <p className={classes.SlideCaption}>But don't worry</p>\r\n            </div>\r\n          </Fragment>\r\n          <Fragment>\r\n            <div className={`${classes.Slide} ${classes.WiggleSlide}`}>\r\n              <p className={classes.ImageCaption}>It will be worth the wait</p>\r\n            </div>\r\n          </Fragment>\r\n        </Slider>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portal;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from \"./Section.module.scss\";\r\n\r\nconst section = props => (\r\n  <section className={`${classes.Section} ${props.className}`}>\r\n    <h2 className={classes.SectionHeader}>{props.name}</h2>\r\n    {props.children}\r\n  </section>\r\n);\r\n\r\nsection.propTypes = {\r\n  className: PropTypes.string,\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './Button.module.scss';\r\n\r\nconst button = props => (\r\n  <button className={props.selected ? classes.ActiveBtn : classes.Button } onClick={props.onClick}>{props.children}</button>\r\n)\r\n\r\nbutton.propTypes = {\r\n  selected: PropTypes.bool\r\n}\r\n\r\nexport default button;","const adjectives = [\r\n  { word: 'kakkoii', translations: ['cool']},\r\n  { word: 'kirei', translations: ['pretty']},\r\n];\r\n\r\nexport default adjectives;","const locations = [\r\n  { word: 'nihon', translations: ['Japan']},\r\n  { word: 'igirisu', translations: ['England', 'United Kingdom']},\r\n];\r\n\r\nexport default locations;","const verbs = [\r\n  {\r\n    verb: 'ikimasu',\r\n    conjugations:\r\n    {\r\n      present: { verb:'ikimasu', translations: ['going', 'go']},\r\n      past: { verb:'ikimashita', translations: ['went', 'gone']},\r\n      negative: { verb: 'ikimasen', translations: ['not going', 'did not go']},\r\n      past_negative: { verb: 'ikimasendeshita', translations: ['was not going', 'were not going']}\r\n    },\r\n  }\r\n];\r\n\r\nexport default verbs;","const personalPronouns = [\r\n  // I, you, he, she, it, we, they, me, him, her, us, and them\r\n  { word: \"watashi\", translations: [\"I\"] },\r\n  { word: \"atashi\", translations: [\"I\"] },\r\n  { word: \"boku\", translations: [\"I\"] },\r\n  { word: \"anata\", translations: [\"you\"] },\r\n  { word: \"kimi\", translations: [\"you\"] },\r\n  { word: \"kare\", translations: [\"he\"] },\r\n  { word: \"kanojo\", translations: [\"she\"] },\r\n];\r\n\r\nexport default personalPronouns;","import adjectives from './adjectives/adjectives';\r\nimport locations from './locations/locations';\r\nimport particles from './particles/particles';\r\nimport verbs from './verbs/verbs';\r\nimport personalPronouns from './pronouns/personal_pronouns';\r\n\r\nconst wanakana = require('wanakana');\r\n\r\n\r\n\r\nfunction shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\nfunction getVerbObject(verb) {\r\n  return verbs.filter(verbObj => verbObj.verb === verb)[0];\r\n}\r\n\r\nfunction getParticleObject(particle) {\r\n  return particles.filter(particleObj => particleObj.particle === particle)[0];\r\n}\r\n\r\nfunction getVerb(pronoun, verbConjugation, verb) {\r\n  verb = getVerbObject(verb).conjugations[verbConjugation];\r\n  if (pronoun === 'I') {\r\n    if (verbConjugation === 'present') {\r\n      return 'am ' + verb.translations[0];\r\n    } else if (verbConjugation === 'past') {\r\n      return '' + verb.translations[0];\r\n    } else if (verbConjugation === 'negative') {\r\n      return 'am ' + verb.translations[0];\r\n    } else if (verbConjugation === 'past_negative') {\r\n      return '' + verb.translations[0];\r\n    }\r\n  } else if (pronoun === 'you') {\r\n    if (verbConjugation === 'present') {\r\n      return 'are ' + verb.translations[0];\r\n    } else if (verbConjugation === 'past') {\r\n      return '' + verb.translations[0];\r\n    } else if (verbConjugation === 'negative') {\r\n      return '' + verb.translations[1];\r\n    } else if (verbConjugation === 'past_negative') {\r\n      return '' + verb.translations[1];\r\n    }\r\n  } else {\r\n    if (verbConjugation === 'present') {\r\n      return 'is ' + verb.translations[0];\r\n    } else if (verbConjugation === 'past') {\r\n      return '' + verb.translations[0];\r\n    } else if (verbConjugation === 'negative') {\r\n      return '' + verb.translations[1];\r\n    } else if (verbConjugation === 'past_negative') {\r\n      return '' + verb.translations[0];\r\n    }\r\n  }\r\n}\r\n\r\nfunction getLinkingVerb(pronoun, verbConjugation) {\r\n  if (pronoun === 'I') {\r\n    if (verbConjugation === 'present') {\r\n      return 'am';\r\n    } else if (verbConjugation === 'past') {\r\n      return '';\r\n    } else if (verbConjugation === 'negative') {\r\n      return 'am';\r\n    } else if (verbConjugation === 'past_negative') {\r\n      return '';\r\n    }\r\n  } else if (pronoun === 'you') {\r\n    if (verbConjugation === 'present') {\r\n      return 'are';\r\n    } else if (verbConjugation === 'past') {\r\n      return '';\r\n    } else if (verbConjugation === 'negative') {\r\n      return 'are';\r\n    } else if (verbConjugation === 'past_negative') {\r\n      return '';\r\n    }\r\n  } else {\r\n    if (verbConjugation === 'present') {\r\n      return 'is';\r\n    } else if (verbConjugation === 'past') {\r\n      return '';\r\n    } else if (verbConjugation === 'negative') {\r\n      return 'is';\r\n    } else if (verbConjugation === 'past_negative') {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n\r\nfunction generateSentenceWithTopic(subject, otherInfo) {\r\n  if (otherInfo === 'adjective') {\r\n    shuffle(adjectives);\r\n    otherInfo = adjectives[0];\r\n  }\r\n  if (subject === 'pronoun') {\r\n    shuffle(personalPronouns);\r\n    const pronoun = personalPronouns[0];\r\n    const pronounEng = pronoun.translations[0];\r\n    const pronounJp = pronoun.word;\r\n    const linkingVerb = getLinkingVerb(pronounEng, 'present');\r\n    if (otherInfo === 'name') {\r\n      return { english: `${pronounEng} ${linkingVerb} Mohammed`, japanese: wanakana.toHiragana(`${pronounJp}はMohammedです`) };\r\n    }\r\n    const descriptionEng = otherInfo.translations[0];\r\n    const descriptionJp = otherInfo.word;\r\n    return { english: `${pronounEng} ${linkingVerb} ${descriptionEng}`, japanese: wanakana.toHiragana(`${pronounJp}は${descriptionJp}です`) };\r\n  } else if (subject === 'location') {\r\n    const descriptionEng = otherInfo.translations[0];\r\n    const descriptionJp = otherInfo.word;\r\n    shuffle(locations);\r\n    const locationEng = locations[0].translations[0];\r\n    const locationJp = locations[0].word;\r\n    return { english: `${locationEng} is ${descriptionEng}`, japanese: wanakana.toHiragana(`${locationJp}は${descriptionJp}です`)};\r\n  }\r\n}\r\n\r\nfunction generateSentenceWithVerb(particle, subject, otherInfo) {\r\n  if (otherInfo === 'location') {\r\n    shuffle(locations);\r\n    otherInfo = locations[0];\r\n  }\r\n  let preposition = '';\r\n  if (particle === 'に') {\r\n    preposition = 'to';\r\n  } else if (particle === 'と') {\r\n    preposition = 'with';\r\n  }\r\n  if (subject === 'pronoun') {\r\n    shuffle(personalPronouns);\r\n    const pronoun = personalPronouns[0];\r\n    const pronounEng = pronoun.translations[0];\r\n    const pronounJp = pronoun.word;\r\n    const conjugations = ['present', 'past', 'negative', 'past_negative'];\r\n    const conjugation = shuffle(conjugations)[0];\r\n    const japaneseVerb = verbs[0].conjugations[conjugation].verb;\r\n    const linkingVerb = getVerb(pronounEng, conjugation, 'ikimasu');\r\n    if (otherInfo === 'name') {\r\n      return { english: `${pronounEng} ${linkingVerb} ${preposition} Mohammed`, japanese: wanakana.toHiragana(`${pronounJp}はMohammed${particle}${japaneseVerb}`) };\r\n    }\r\n    const descriptionEng = otherInfo.translations[0];\r\n    const descriptionJp = otherInfo.word;\r\n    return { english: `${pronounEng} ${linkingVerb} ${preposition} ${descriptionEng}`, japanese: wanakana.toHiragana(`${pronounJp}は${descriptionJp}${particle}${japaneseVerb}`) };\r\n  }\r\n}\r\n\r\nfunction generateVerbSentence(particles, destination, pronoun, verbConjugations, verbConjugation) {\r\n    let linkingVerb = 'are';\r\n    let verb;\r\n    let preposition = '';\r\n    if (destination && particles.includes('に')) {\r\n      preposition = 'to';\r\n    }\r\n    // console.log(pronoun, verbConjugation);\r\n    if (pronoun === 'I') {\r\n      if (verbConjugation === 'present') {\r\n        linkingVerb = ' am';\r\n        verb = verbConjugations.present.translations[0];\r\n      } else if (verbConjugation === 'past') {\r\n        linkingVerb = '';\r\n        verb = verbConjugations.past.translations[0];\r\n      } else if (verbConjugation === 'negative') {\r\n        linkingVerb = ' am'\r\n        verb = verbConjugations.negative.translations[0];\r\n      } else if (verbConjugation === 'past_negative') {\r\n        linkingVerb = '';\r\n        verb = verbConjugations.past_negative.translations[0];\r\n      }\r\n    } else if (pronoun === 'you') {\r\n      if (verbConjugation === 'present') {\r\n        linkingVerb = ' are';\r\n        verb = verbConjugations.present.translations[0];\r\n      } else if (verbConjugation === 'past') {\r\n        linkingVerb = '';\r\n        verb = verbConjugations.past.translations[0];\r\n      } else if (verbConjugation === 'negative') {\r\n        linkingVerb = ' are'\r\n        verb = verbConjugations.negative.translations[0];\r\n      } else if (verbConjugation === 'past_negative') {\r\n        linkingVerb = '';\r\n        verb = verbConjugations.past_negative.translations[1];\r\n      }\r\n    } else {\r\n      if (verbConjugation === 'present') {\r\n        linkingVerb = ' is';\r\n        verb = verbConjugations.present.translations[0];\r\n      } else if (verbConjugation === 'past') {\r\n        linkingVerb = '';\r\n        verb = verbConjugations.past.translations[0];\r\n      } else if (verbConjugation === 'negative') {\r\n        linkingVerb = ' is'\r\n        verb = verbConjugations.negative.translations[0];\r\n      } else if (verbConjugation === 'past_negative') {\r\n        linkingVerb = '';\r\n        verb = verbConjugations.past_negative.translations[0];\r\n      }\r\n    }\r\n    // Cheeky workaround for wanakana so it always works.\r\n    // setTimeout(() => {\r\n      // console.log(`${wanakana.toHiragana(personalPronouns[0].word)}${wanakana.toHiragana(particles[0].particle)}${wanakana.toHiragana(verbs[0].verb)}`)\r\n      // console.log(`${pronoun}${linkingVerb} ${verb} ${particle} Japan`)\r\n      return `${pronoun}${linkingVerb} ${verb} ${preposition} ${destination}`;\r\n    // }, 200);\r\n};\r\n\r\nexport { generateVerbSentence, getVerbObject, generateSentenceWithTopic, generateSentenceWithVerb };","import React, { Component, Fragment } from 'react';\r\n\r\nimport classes from  './CreateQuiz.module.scss';\r\nimport Section from '../../components/UI/Section/Section';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\n\r\nimport Button from '../../components/UI/Button/Button';\r\n\r\n\r\nimport * as sentenceGenerator from '../../japanese/sentence_generator/sentence_generator';\r\n\r\nclass CreateQuiz extends Component {\r\n  state = {\r\n    topic: 'pronoun',\r\n    particles: ['は'],\r\n    otherInfo: 'adjective',\r\n    sentenceEng: '',\r\n    sentenceJp: '',\r\n    sentenceWithTopicAndVerb: false,\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   const verbs = sentenceGenerator.verbs;\r\n  //   this.setState({\r\n  //     verbConjugation: Object.keys(verbObj.conjugations)[0],\r\n  //     verbConjugations: verbObj.conjugations\r\n  //   })\r\n  // }\r\n\r\n  updateTopic = (topic) => {\r\n    if (topic === 'pronoun') {\r\n      this.setState({topic});\r\n    } else {\r\n      this.setState({topic, otherInfo: 'adjective'});\r\n    }\r\n  }\r\n\r\n  addParticle(particle) {\r\n    if (particle === 'に')　{\r\n      this.setState({sentenceWithTopicAndVerb: true, topic: 'pronoun', otherInfo: 'location'});\r\n    }\r\n  }\r\n\r\n  generateSentence = () => {\r\n    if (this.state.sentenceWithTopicAndVerb) {\r\n      const sentence = sentenceGenerator.generateSentenceWithVerb('に', this.state.topic, this.state.otherInfo);\r\n      this.setState({sentenceEng: sentence.english, sentenceJp: sentence.japanese})\r\n    } else {\r\n      const sentence = sentenceGenerator.generateSentenceWithTopic(this.state.topic, this.state.otherInfo);\r\n      this.setState({sentenceEng: sentence.english, sentenceJp: sentence.japanese})\r\n    }\r\n  }\r\n  render() {\r\n    let nameOption = null;\r\n    if (this.state.topic === 'pronoun' && this.state.particles.includes('は')) {\r\n     nameOption = <option value='name'>[Name]</option>;\r\n    }\r\n    let addVerb = (\r\n      <div className={classes.WordContainer}>\r\n        <select\r\n          className={classes.Word}\r\n          onChange={evt => this.addParticle(evt.target.value)}>\r\n          <option>Add particle</option>\r\n          <option>に</option>\r\n        </select>\r\n      </div>\r\n    );\r\n    let sentenceWithTopic = (\r\n      <Fragment>\r\n        <div className={classes.WordContainer}>\r\n          <select\r\n            className={classes.Word}\r\n            onChange={evt => this.updateTopic(evt.target.value)}\r\n          >\r\n            <option value=\"pronoun\">[Pronoun]</option>\r\n            <option value=\"location\">[Location]</option>\r\n          </select>\r\n        </div>\r\n        <div className={classes.WordContainer}>\r\n          <p className={classes.Word}>は</p>\r\n        </div>\r\n        <div className={classes.WordContainer}>\r\n          <select\r\n            className={classes.Word}\r\n            onChange={evt => this.setState({ otherInfo: evt.target.value })}\r\n          >\r\n            <option value={\"adjective\"}>[Adjective]</option>\r\n            {/* If pronoun and ha particle, display option */}\r\n            {nameOption}\r\n          </select>\r\n        </div>\r\n        {/* If there is no verb */}\r\n        <div className={classes.WordContainer}>\r\n          {/* <button className={classes.AddBtn}>Add Adjective or relative time</button> */}\r\n          <select className={classes.Word}>\r\n            {/* If pronoun and ha particle, display option */}\r\n            <option value={'desu'}>です</option>\r\n          </select>\r\n          {/* <button className={classes.AddBtn}>Add Particle</button> */}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n    let sentenceWithTopicAndVerb = null;\r\n    if (this.state.sentenceWithTopicAndVerb) {\r\n      sentenceWithTopic = null;\r\n      addVerb = null;\r\n      sentenceWithTopicAndVerb = (\r\n        <Fragment>\r\n          <div className={classes.WordContainer}>\r\n            <select\r\n              className={classes.Word}\r\n              onChange={evt => this.updateTopic(evt.target.value)}>\r\n              <option value=\"pronoun\">[Pronoun]</option>\r\n            </select>\r\n          </div>\r\n          <div className={classes.WordContainer}>\r\n            <p className={classes.Word}>は</p>\r\n          </div>\r\n          <div className={classes.WordContainer}>\r\n            <select\r\n              className={classes.Word}\r\n              onChange={evt => this.setState({ otherInfo: evt.target.value })}>\r\n              <option value={\"location\"}>[Location]</option>\r\n              {/* If pronoun and ha particle, display option */}\r\n              {nameOption}\r\n            </select>\r\n          </div>\r\n          <div className={classes.WordContainer}>\r\n            {/* <button className={classes.AddBtn}>Add Adjective or relative time</button> */}\r\n            <p className={classes.Word}>に</p>\r\n            {/* <button className={classes.AddBtn}>Add Particle</button> */}\r\n          </div>\r\n          <div className={classes.WordContainer}>\r\n            <select\r\n              className={classes.Word}\r\n              onChange={evt => this.setState({ otherInfo: evt.target.value })}>\r\n              <option value={\"verb\"}>[Verb]</option>\r\n            </select>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return (\r\n      <Section name='Create Quiz'>\r\n        { sentenceWithTopic }\r\n        { addVerb }\r\n        { sentenceWithTopicAndVerb }\r\n        <Button onClick={() => this.generateSentence()}>Generate sentence</Button>\r\n        <p className={classes.Sentence}>Example:</p>\r\n        <p className={classes.Sentence}>{this.state.sentenceJp}</p>\r\n        <p className={classes.Sentence}>{this.state.sentenceEng}</p>\r\n      </Section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreateQuiz;","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AnimateHeight from 'react-animate-height';\r\n\r\nimport classes from \"./Topics.module.scss\";\r\n\r\nimport * as sentenceGenerator from '../../japanese/sentence_generator/sentence_generator';\r\n\r\nclass Topics extends Component {\r\n  state = {\r\n    topics: [\r\n      {\r\n        topic: \"Dates 年月日\",\r\n        icon: \"fas fa-calendar-alt\",\r\n        param: \"dates\",\r\n        choices: [\r\n          { name: \"Months\", param: \"months\" },\r\n          { name: \"Days of the month\", param: \"days_of_the_month\" },\r\n          { name: \"Days of the week\", param: \"days_of_the_week\" }\r\n        ]\r\n      },\r\n      {\r\n        topic: \"Times 時間\",\r\n        icon: \"fas fa-clock\",\r\n        param: 'times',\r\n        choices: [\r\n          { name: \"Hours of the day\", param: \"hours_of_the_day\" },\r\n          { name: \"Minutes (1-20)\", param: \"minutes_upto_20\" },\r\n          { name: \"Minutes (21-40)\", param: \"minutes_upto_40\" },\r\n          { name: \"Minutes (41-60)\", param: \"minutes_upto_60\" },\r\n        ]\r\n      },\r\n      { topic: \"Numbers 番号\", icon: \"fas fa-calculator\", param: 'numbers', choices: [] },\r\n      {\r\n        topic: \"Randomly generated by topic\",\r\n        icon: \"far fa-smile-wink\",\r\n        param: \"random\",\r\n        choices: [{ name: \"Dates\", param: \"dates\" }]\r\n      }\r\n    ],\r\n    openTopics: [],\r\n    quizLength: 5,\r\n  };\r\n\r\n  topicClickeHandler = (index, topicId) => {\r\n    const chevronClassList = document.querySelector(`#chevron-${index}`).classList;\r\n    chevronClassList.toggle(classes.RotateChevron);\r\n    const openTopics = [...this.state.openTopics];\r\n    if (openTopics.indexOf(topicId) > -1) {\r\n      openTopics.splice(openTopics.indexOf(topicId), 1);\r\n    } else {\r\n      openTopics.push(topicId)\r\n    }\r\n    this.setState({ openTopics });\r\n  };\r\n\r\n  componentDidMount() {\r\n    sentenceGenerator.generateVerbSentence()\r\n  }\r\n\r\n  render() {\r\n    const topics = this.state.topics.map((topicObj, index) => {\r\n      const topicId = `topic-${index}`;\r\n      let quizLength = null;\r\n      if (index === this.state.topics.length - 1) {\r\n        quizLength = (\r\n          <label className={classes.QuizLengthLabel}>\r\n            Number of Questions:\r\n            <select className={classes.QuizLength} onChange={evt => this.setState({ quizLength: evt.target.value })}>\r\n              <option value=\"5\">5</option>\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"35\">35</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          </label>\r\n        );\r\n      }\r\n      const topicChoices = topicObj.choices.map(choice => {\r\n        let quizLengthParam = '';\r\n        // Only type of quiz the length can be set\r\n        if (topicObj.param === 'random') {\r\n          quizLengthParam = `&quiz_length=${this.state.quizLength}`;\r\n        }\r\n        return (\r\n          <Link\r\n            key={choice.param}\r\n            className={`${classes.TopicChoice} disable-select`}\r\n            to={{ pathname: `quiz`, search: `?topic=${choice.param}${quizLengthParam}` }}>{choice.name}</Link>\r\n        );\r\n      });\r\n      return (\r\n        <Fragment key={topicId}>\r\n          <li id={topicId} className={classes.Topic} onClick={() => this.topicClickeHandler(index, topicId)}>\r\n            <p>\r\n              <i className={topicObj.icon} />{topicObj.topic}\r\n            </p>\r\n            <i id={`chevron-${index}`} className={`${classes.ChevronDown} fas fa-chevron-down`}/>\r\n          </li>\r\n          <AnimateHeight\r\n            duration={ 300 }\r\n            height={this.state.openTopics.indexOf(topicId) > -1 ? 'auto' : 0}// see props documentation bellow\r\n          >\r\n            <div id={`topic-choices-${index}`} className={`${classes.TopicChoices}`}>\r\n              { quizLength }\r\n              {topicChoices}\r\n            </div>\r\n        </AnimateHeight>\r\n        </Fragment>\r\n      );\r\n    });\r\n    return (\r\n      <div className={classes.Topics}>\r\n        <h2 className={classes.Header}><i className=\"fas fa-pencil-alt\" />Quizzes</h2>\r\n        <ul className={classes.TopicList}>{topics}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Topics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './Result.module.scss';\r\n\r\nconst result = (props) => {\r\n  const answerGiven = () => {\r\n    if (props.answerWasCorrect) {\r\n      return (\r\n        <span className={classes.CorrectAnswer}>\r\n          {props.usersAnswer}\r\n          <i className={`fas fa-check-circle ${classes.CorrectAnswer}`}></i>\r\n        </span>\r\n      );\r\n    }\r\n    return (\r\n      <span className={classes.WrongAnswer}>\r\n        {props.usersAnswer}\r\n        <i className={`fas fa-times-circle ${classes.WrongAnswer}`}></i>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const correctAnswer = () => {\r\n    if (!props.answerWasCorrect) {\r\n      return <p className={classes.CorrectAnswer}>The correct answer was {props.correctAnswer}</p>\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={props.className}>\r\n      <p className={classes.Answers}>You wrote {answerGiven()}</p>\r\n      {correctAnswer()}\r\n    </section>\r\n  );\r\n}\r\n\r\nresult.propTypes = {\r\n  className: PropTypes.string,\r\n  answerWasCorrect: PropTypes.bool.isRequired,\r\n  usersAnswer: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default result;","import React, { Fragment, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Questions.module.scss\";\r\nimport Result from  './Result/Result';\r\n\r\nconst wanakana = require('wanakana');\r\n\r\nconst questions = props => {\r\n  let inputEl = useRef(null);\r\n  if (props.inputMode !== 'Default') {\r\n    // Cheeky workaround for wanakana so the binding always works.\r\n    setTimeout(() => {\r\n      if (inputEl.current) {\r\n        wanakana.bind(inputEl.current, { IMEMode: props.inputMode });\r\n      }\r\n    }, 200);\r\n    }\r\n\r\n  const question = props.questions[props.questionIndex];\r\n\r\n  const submitHandler = (event) => props.next(event, question.id, question.answer);\r\n\r\n  if (props.questions.length && !props.endOfQuiz) {\r\n    return (\r\n      <form className={classes.Questions} onSubmit={submitHandler}>\r\n        <h4 className={classes.QuestionNumber}>Question {props.questionIndex + 1} of {props.questions.length}</h4>\r\n        <section key={question.id} className={classes.Question}>\r\n          <p>{question.text}</p>\r\n          <input\r\n            key={props.inputMode}\r\n            className={props.emptyAnswer ? classes.EmptyAnswer : classes.AnswerField}\r\n            ref={inputEl}\r\n            type=\"text\"\r\n            name=\"answerField\"\r\n            autoFocus\r\n            autoComplete=\"off\"\r\n            placeholder=\"Type the Japanese word here\"\r\n            value={props.usersAnswer}\r\n          />\r\n          <input className={classes.NextBtn} type=\"submit\" value=\"Next\"/>\r\n        </section>\r\n      </form>\r\n    );\r\n  } else if (props.endOfQuiz){\r\n    return (\r\n      <div className={classes.Questions}>\r\n      { props.answerHistory.map((question, index) => (\r\n        <Fragment key={'answer-' + (index + 1)} >\r\n          <h4 className={classes.QuestionNumber}>Question {index + 1} - {question.text}</h4>\r\n          <Result className={classes.AnswerHistory}\r\n            answerWasCorrect={question.answerWasCorrect}\r\n            correctAnswer={wanakana.toHiragana(question.correctAnswer)}\r\n            usersAnswer={question.usersAnswer}\r\n          />\r\n        </Fragment>\r\n      ))}\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nquestions.propTypes = {\r\n  questions: PropTypes.array.isRequired,\r\n  questionIndex: PropTypes.number.isRequired,\r\n  emptyAnswer: PropTypes.bool.isRequired,\r\n  inputMode: PropTypes.string.isRequired,\r\n  endOfQuiz: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default questions;\r\n","const months = [\r\n  { word: \"January\", translations: [ \"ichigatsu\" ]},\r\n  { word: \"Feburary\", translations: [ \"nigatsu\" ]},\r\n  { word: \"March\", translations: [ \"sangatsu\" ]},\r\n  { word: \"April\", translations: [ \"shigatsu\" ]},\r\n  { word: \"May\", translations: [ \"gogatsu\" ]},\r\n  { word: \"June\", translations: [ \"rokugatsu\" ]},\r\n  { word: \"July\", translations: [ \"shichigatsu\"  ]},\r\n  { word: \"August\", translations: [ \"hachigatsu\" ]},\r\n  { word: \"September\", translations: [ \"kugatsu\" ]},\r\n  { word: \"October\", translations: [ \"juugatsu\" ]},\r\n  { word: \"November\", translations: [ \"juuichigatsu\" ]},\r\n  { word: \"December\", translations: [ \"juunigatsu\" ]}\r\n];\r\n\r\nexport default months;","const days_of_the_month = [\r\n  { word: \"1st\", translations: [\"tsuitachi\"] },\r\n  { word: \"2nd\", translations: [\"futsuka\"] },\r\n  { word: \"3rd\", translations: [\"mikka\"] },\r\n  { word: \"4th\", translations: [\"yokka\"] },\r\n  { word: \"5th\", translations: [\"itsuka\"] },\r\n  { word: \"6th\", translations: [\"muika\"] },\r\n  { word: \"7th\", translations: [\"nanoka\"] },\r\n  { word: \"8th\", translations: [\"youka\"] },\r\n  { word: \"9th\", translations: [\"kokonoka\"] },\r\n  { word: \"10th\", translations: [\"touka\"] },\r\n  { word: \"11th\", translations: [\"juuichinichi\"] },\r\n  { word: \"12th\", translations: [\"juuninichi\"] },\r\n  { word: \"13th\", translations: [\"juusannichi\"] },\r\n  { word: \"14th\", translations: [\"juuyokka\"] },\r\n  { word: \"15th\", translations: [\"juugonichi\"] },\r\n  { word: \"16th\", translations: [\"juurokunichi\"] },\r\n  { word: \"17th\", translations: [\"juushichinichi\"] },\r\n  { word: \"18th\", translations: [\"juuhachinichi\"] },\r\n  { word: \"19th\", translations: [\"juukyuunichi\", \"juukunichi\"] },\r\n  { word: \"20th\", translations: [\"hatsuka\"] },\r\n  { word: \"21st\", translations: [\"nijuuichinichi\"] },\r\n  { word: \"22nd\", translations: [\"nijuuninichi\"] },\r\n  { word: \"23rd\", translations: [\"nijuusannichi\"] },\r\n  { word: \"24th\", translations: [\"nijuuyokka\"] },\r\n  { word: \"25th\", translations: [\"nijuugonichi\"] },\r\n  { word: \"26th\", translations: [\"nijuurokunichi\"] },\r\n  { word: \"27th\", translations: [\"nijuushichinichi\"] },\r\n  { word: \"28th\", translations: [\"nijuuhachinichi\"] },\r\n  { word: \"29th\", translations: [\"nijuukyuunichi\", \"nijuukunichi\"] },\r\n  { word: \"30th\", translations: [\"sanjuunichi\"] },\r\n  { word: \"31st\", translations: [\"sanjuuichinichi\"] }\r\n];\r\n\r\nexport default days_of_the_month;\r\n","const days_of_the_week = [\r\n  { word: 'Monday', translations: [ 'getsuyoubi']},\r\n  { word: 'Tuesday', translations: [ 'kayoubi']},\r\n  { word: 'Wednesday', translations: [ 'suiyoubi']},\r\n  { word: 'Thursday', translations: [ 'mokuyoubi']},\r\n  { word: 'Friday', translations: [ 'kinyoubi']},\r\n  { word: 'Saturday', translations: [ 'douyoubi']},\r\n  { word: 'Sunday', translations: [ 'nichiyoubi']},\r\n]\r\n\r\nexport default days_of_the_week;","import jpMonths from  './months';\r\nimport jpDaysOfTheMonth from  './days_of_the_month';\r\nimport jpDaysOfTheWeek from  './days_of_the_week';\r\n\r\nimport { setQuizLength, shuffle, createQuestion, getQuestions, getEnglishWord, getJapaneseTranslations } from '../quiz_setup';\r\n\r\n\r\n\r\nfunction setUpDaysOfWeekQuiz(quizlength) {\r\n  // Randomise days of the week\r\n  const days = shuffle([...jpDaysOfTheWeek], quizlength);\r\n  return getQuestions(days);\r\n}\r\n\r\nfunction setUpDaysOfMonthQuiz(quizlength) {\r\n  // Randomise days of the month\r\n  const days = shuffle([...jpDaysOfTheMonth], quizlength);\r\n  return getQuestions(days);\r\n}\r\n\r\nfunction setUpMonthsQuiz(quizlength) {\r\n  // Randomise months\r\n  const months = shuffle([...jpMonths], quizlength);\r\n  return getQuestions(months);\r\n}\r\n\r\nfunction setUpDatesQuiz(quizlength) {\r\n  // Randomise days and months\r\n  const months = setQuizLength([...jpMonths], quizlength);\r\n  const days = setQuizLength([...jpDaysOfTheMonth], quizlength);\r\n  let questions = [];\r\n  for (let i = 0; i < months.length; i++) {\r\n    const dayEng = getEnglishWord(days[i]);\r\n    const monthEng = getEnglishWord(months[i]);\r\n    const dayJp = getJapaneseTranslations(days[i]);\r\n    const monthJp = getJapaneseTranslations(months[i]);\r\n    questions[i] = createQuestion(i + 1, `${dayEng} ${monthEng}`, `${monthJp}${dayJp}`);\r\n  }\r\n  return questions;\r\n}\r\n\r\nexport { setUpDaysOfWeekQuiz, setUpDaysOfMonthQuiz, setUpMonthsQuiz, setUpDatesQuiz };","const hoursOfTheDay = [\r\n  { word: \"1:00\", translations: [\"ichiji\"] },\r\n  { word: \"2:00\", translations: [\"niji\"] },\r\n  { word: \"3:00\", translations: [\"sanji\"] },\r\n  { word: \"4:00\", translations: [\"yoji\"] },\r\n  { word: \"5:00\", translations: [\"goji\"] },\r\n  { word: \"6:00\", translations: [\"rokuji\"] },\r\n  { word: \"7:00\", translations: [\"shichiji\"] },\r\n  { word: \"8:00\", translations: [\"hachiji\"] },\r\n  { word: \"9:00\", translations: [\"kuji\"] },\r\n  { word: \"10:00\", translations: [\"juuji\"] },\r\n  { word: \"11:00\", translations: [\"juuichiji\"] },\r\n  { word: \"12:00\", translations: [\"juunijni\"] },\r\n]\r\n\r\nexport default hoursOfTheDay;","const minutes = [\r\n  { word: \"1\", translations: [\"ippun\"] },\r\n  { word: \"2\", translations: [\"nihun\"] },\r\n  { word: \"3\", translations: [\"sanpun\"] },\r\n  { word: \"4\", translations: [\"yonpun\"] },\r\n  { word: \"5\", translations: [\"gohun\"] },\r\n  { word: \"6\", translations: [\"roppun\"] },\r\n  { word: \"7\", translations: [\"nanahun\"] },\r\n  { word: \"8\", translations: [\"happun\"] },\r\n  { word: \"9\", translations: [\"kyuhun\"] },\r\n  { word: \"10\", translations: [\"juuppun\"] },\r\n  { word: \"11\", translations: [\"juuippun\"] },\r\n  { word: \"12\", translations: [\"juunihun\"] },\r\n  { word: \"13\", translations: [\"juusanpun\"] },\r\n  { word: \"14\", translations: [\"juuyonpun\"] },\r\n  { word: \"15\", translations: [\"juugohun\"] },\r\n  { word: \"16\", translations: [\"juuroppun\"] },\r\n  { word: \"17\", translations: [\"juunanahun\"] },\r\n  { word: \"18\", translations: [\"juuhappun\"] },\r\n  { word: \"19\", translations: [\"juukyuhun\"] },\r\n  { word: \"20\", translations: [\"nijuuppun\"] },\r\n  { word: \"21\", translations: [\"nijuuippun\"] },\r\n  { word: \"22\", translations: [\"nijuunihun\"] },\r\n  { word: \"23\", translations: [\"nijuusanpun\"] },\r\n  { word: \"24\", translations: [\"nijuuyonpun\"] },\r\n  { word: \"25\", translations: [\"nijuugohun\"] },\r\n  { word: \"26\", translations: [\"nijuuroppun\"] },\r\n  { word: \"27\", translations: [\"nijuunanahun\"] },\r\n  { word: \"28\", translations: [\"nijuuhappun\"] },\r\n  { word: \"29\", translations: [\"nijuukyuhun\"] },\r\n  { word: \"30\", translations: [\"sanjuuppun\"] },\r\n  { word: \"31\", translations: [\"sanjuuippun\"] },\r\n  { word: \"32\", translations: [\"sanjuunihun\"] },\r\n  { word: \"33\", translations: [\"sanjuusanpun\"] },\r\n  { word: \"34\", translations: [\"sanjuuyonpun\"] },\r\n  { word: \"35\", translations: [\"sanjuugohun\"] },\r\n  { word: \"36\", translations: [\"sanjuuroppun\"] },\r\n  { word: \"37\", translations: [\"sanjuunanahun\"] },\r\n  { word: \"38\", translations: [\"sanjuuhappun\"] },\r\n  { word: \"39\", translations: [\"sanjuukyuhun\"] },\r\n  { word: \"40\", translations: [\"yonjuuppun\"] },\r\n  { word: \"41\", translations: [\"yonjuuippun\"] },\r\n  { word: \"42\", translations: [\"yonjuunihun\"] },\r\n  { word: \"43\", translations: [\"yonjuusanpun\"] },\r\n  { word: \"44\", translations: [\"yonjuuyonpun\"] },\r\n  { word: \"45\", translations: [\"yonjuugohun\"] },\r\n  { word: \"46\", translations: [\"yonjuuroppun\"] },\r\n  { word: \"47\", translations: [\"yonjuunanahun\"] },\r\n  { word: \"48\", translations: [\"yonjuuhappun\"] },\r\n  { word: \"49\", translations: [\"yonjuukyuhun\"] },\r\n  { word: \"50\", translations: [\"gojuuppun\"] },\r\n  { word: \"51\", translations: [\"gojuuippun\"] },\r\n  { word: \"52\", translations: [\"gojuunihun\"] },\r\n  { word: \"53\", translations: [\"gojuusanpun\"] },\r\n  { word: \"54\", translations: [\"gojuuyonpun\"] },\r\n  { word: \"55\", translations: [\"gojuugohun\"] },\r\n  { word: \"56\", translations: [\"gojuuroppun\"] },\r\n  { word: \"57\", translations: [\"gojuunanahun\"] },\r\n  { word: \"58\", translations: [\"gojuuhappun\"] },\r\n  { word: \"59\", translations: [\"gojuukyuhun\"] },\r\n  { word: \"60\", translations: [\"rokujuuppun\"] },\r\n];\r\n\r\nexport default minutes;\r\n","import jpHoursOfTheDay from  './hours_of_the_day';\r\nimport jpMinutes from  './minutes';\r\n\r\nimport { setQuizLength, shuffle, createQuestion, getEnglishWord, getJapaneseTranslations } from '../quiz_setup';\r\n\r\nfunction setUpHoursOfTheDayQuiz() {\r\n  const minutesInJapanese = shuffle([...jpHoursOfTheDay])\r\n  let questions = [];\r\n  for (let i = 0; i < minutesInJapanese.length; i++) {\r\n    const timesEng = getEnglishWord(minutesInJapanese[i]);\r\n    const timesJp = getJapaneseTranslations(minutesInJapanese[i]);\r\n    questions[i] = createQuestion(i + 1, `${timesEng}`, `${timesJp}`);\r\n  }\r\n  return questions;\r\n}\r\n\r\nfunction setUpMinutesQuiz(quiz) {\r\n  const minutesInJapanese = [...jpMinutes];\r\n  if (quiz === '21-40') {\r\n    minutesInJapanese.splice(0, 20);\r\n  } else if (quiz === '41-60') {\r\n    minutesInJapanese.splice(0, minutesInJapanese.length - 20);\r\n  }\r\n  minutesInJapanese.length = 20;\r\n  const times = shuffle([...minutesInJapanese]);\r\n  let questions = [];\r\n  for (let i = 0; i < times.length; i++) {\r\n    const timesEng = times[i].word === '1' ? `${getEnglishWord(times[i])} minute` : `${getEnglishWord(times[i])} minutes`\r\n    const timesJp = getJapaneseTranslations(times[i]);\r\n    questions[i] = createQuestion(i + 1, `${timesEng}`, `${timesJp}`);\r\n  }\r\n  return questions;\r\n}\r\n\r\nexport { setUpMinutesQuiz, setUpHoursOfTheDayQuiz };","import * as dates from './dates/dates_quiz';\r\nimport * as times from './times/times_quiz';\r\n\r\nfunction setQuizLength(wordsArr, quizlength) {\r\n  let shuffledWords = shuffle([...wordsArr]);\r\n  if (quizlength > wordsArr.length) {\r\n    const questionsNeeded = quizlength - wordsArr.length;\r\n    // Loop condition to determine how many shuffles we need to do.\r\n    const loopCount = Math.ceil(quizlength / wordsArr.length);\r\n    // Questions expected to have after the loop.\r\n    const questionCountAfterLoop = loopCount * wordsArr.length;\r\n    // Questions that need to be removed to match the quiz length.\r\n    const questionsToRemove = questionCountAfterLoop - questionsNeeded;\r\n\r\n    let shuffledExtraWords = [];\r\n    for (let i = 0; i < loopCount; i++) {\r\n      shuffledExtraWords = shuffle([...wordsArr]);\r\n      shuffledWords = [...shuffledWords, ...shuffledExtraWords];\r\n    }\r\n    shuffledWords.length =  shuffledWords.length - questionsToRemove;\r\n  } else {\r\n    shuffledWords.length = quizlength;\r\n  }\r\n  return shuffledWords;\r\n};\r\n\r\nfunction shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\nfunction getEnglishWord(word) {\r\n  return word.word;\r\n}\r\n\r\nfunction getJapaneseTranslations(word) {\r\n  // Some words can have more than one translation, for now will only include the first translation.\r\n  return word.translations[0];\r\n}\r\n\r\nfunction createQuestion(id, question, answer) {\r\n  return { id,  text: `${question}`, answer }\r\n}\r\n\r\nfunction getQuestions(words, quizlength) {\r\n  let questions = [];\r\n  let wordsLength = words.length;\r\n  let i = 0;\r\n  for (i; i < wordsLength; i++) {\r\n    const eng = getEnglishWord(words[i]);\r\n    const jp = getJapaneseTranslations(words[i]);\r\n    questions[i] = createQuestion(i + 1, eng, jp);\r\n  }\r\n  return questions;\r\n}\r\n\r\nexport { dates, times, shuffle, setQuizLength, createQuestion, getQuestions, getEnglishWord, getJapaneseTranslations };","import React, { Component } from \"react\";\r\nimport queryString from 'query-string';\r\n\r\nimport Questions from \"../../components/Questions/Questions\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Section from \"../../components/UI/Section/Section\";\r\nimport classes from \"./Quiz.module.scss\";\r\n\r\nimport * as quizzes from '../../japanese/quiz_setup';\r\n\r\n\r\nconst wanakana = require('wanakana');\r\n\r\n\r\nclass Quiz extends Component {\r\n  state = {\r\n    score: 0,\r\n    questionIndex: 0,\r\n    emptyAnswer: false,\r\n    inputMode: 'toHiragana',\r\n    questions: [],\r\n    answerHistory: [],\r\n    endOfQuiz: false,\r\n    sectionName: '',\r\n  };\r\n\r\n  shuffle = (array, quizLength) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    array.length = quizLength;\r\n    return array;\r\n  };\r\n\r\n  handleNext = (event) => {\r\n    const question = this.state.questions[this.state.questionIndex];\r\n\r\n    const usersAnswer = event.target.answerField.value;\r\n    const answerWasCorrect = wanakana.toRomaji(usersAnswer) === wanakana.toRomaji(question.answer);\r\n    const answerHistory = [...this.state.answerHistory];\r\n\r\n    console.log(usersAnswer, wanakana.toHiragana(question.answer));\r\n    let score = this.state.score;\r\n    if (answerWasCorrect) {\r\n      score = score + 1;\r\n    }\r\n    answerHistory.push({ text: question.text, usersAnswer, correctAnswer: question.answer, answerWasCorrect })\r\n    if (this.state.questionIndex + 1 === this.state.questions.length) {\r\n      this.setState({endOfQuiz: true, answerHistory, sectionName: 'Results'});\r\n    } else if (usersAnswer) {\r\n      this.setState(prevState => {\r\n        return {\r\n          questionIndex: prevState.questionIndex + 1,\r\n          score,\r\n          answerHistory,\r\n          emptyAnswer: false\r\n         }\r\n      });\r\n    } else {\r\n      this.setState({emptyAnswer: true});\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  setInputMode = (inputMode) => {\r\n    this.setState({inputMode});\r\n  }\r\n\r\n  componentDidMount() {\r\n    const search = this.props.location.search;\r\n    const queryParams = queryString.parse(search);\r\n    if (!queryParams.topic) {\r\n      this.props.history.push('/');\r\n      return;\r\n    }\r\n    switch (queryParams.topic) {\r\n      case 'dates':\r\n        this.setState({ questions: quizzes.dates.setUpDatesQuiz(queryParams.quiz_length), sectionName: 'Dates 年月日' });\r\n        break;\r\n      case 'months':\r\n        this.setState({ questions: quizzes.dates.setUpMonthsQuiz(queryParams.quiz_length), sectionName: 'Dates 年月日' });\r\n        break;\r\n      case 'days_of_the_month':\r\n        this.setState({ questions: quizzes.dates.setUpDaysOfMonthQuiz(queryParams.quiz_length), sectionName: 'Dates 年月日' });\r\n        break;\r\n      case 'days_of_the_week':\r\n        this.setState({ questions: quizzes.dates.setUpDaysOfWeekQuiz(queryParams.quiz_length), sectionName: 'Dates 年月日' });\r\n        break;\r\n      case 'hours_of_the_day':\r\n        this.setState({ questions: quizzes.times.setUpHoursOfTheDayQuiz(), sectionName: 'Times 時間' });\r\n        break;\r\n      case 'minutes_upto_20':\r\n        this.setState({ questions: quizzes.times.setUpMinutesQuiz('1-20'), sectionName: 'Times 時間' });\r\n        break;\r\n      case 'minutes_upto_40':\r\n        this.setState({ questions: quizzes.times.setUpMinutesQuiz('21-40'), sectionName: 'Times 時間' });\r\n        break;\r\n      case 'minutes_upto_60':\r\n        this.setState({ questions: quizzes.times.setUpMinutesQuiz('41-60'), sectionName: 'Times 時間' });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let inputMode = null;\r\n    if (!this.state.endOfQuiz) {\r\n      inputMode = (\r\n        <div className={classes.Preferences}>\r\n          <p>Input mode</p>\r\n          <Button selected={this.state.inputMode === 'toHiragana'} onClick={() => this.setInputMode('toHiragana')}>Hiragana</Button>\r\n          <Button selected={this.state.inputMode === 'toKatakana'} onClick={() => this.setInputMode('toKatakana')}>Katakana</Button>\r\n          <Button selected={this.state.inputMode === 'Default'} onClick={() => this.setInputMode('Default')}>Romaji</Button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Section name={this.state.sectionName} className={classes.Quiz}>\r\n        <Questions\r\n          questions={this.state.questions}\r\n          questionIndex={this.state.questionIndex}\r\n          inputMode={this.state.inputMode}\r\n          next={(event) => this.handleNext(event) }\r\n          answerHistory={this.state.answerHistory}\r\n          emptyAnswer={this.state.emptyAnswer}\r\n          endOfQuiz={this.state.endOfQuiz} />\r\n          { inputMode }\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import React, { Component } from 'react';\n\nimport Backdrop from './components/UI/Backdrop/Backdrop';\nimport SideDrawer from './components/UI/SideDrawer/SideDrawer';\nimport Layout from './components/Layout/Layout';\nimport Portal from './containers/Portal/Portal';\nimport CreateQuiz from './containers/CreateQuiz/CreateQuiz';\nimport Topics from './containers/Topics/Topics';\nimport Quiz from './containers/Quiz/Quiz';\nimport { Route } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    sideDrawerOpen: false\n  };\n\n  drawerToggleClickHandler = () => {\n    const sideDrawerOpen = !this.state.sideDrawerOpen;\n    this.setState({sideDrawerOpen});\n  }\n\n  backdropClickHandler = () => {\n    this.setState({ sideDrawerOpen: false })\n  }\n\n  render() {\n    return (\n      <Layout drawerClickHandler={this.drawerToggleClickHandler}>\n        <SideDrawer show={this.state.sideDrawerOpen} clicked={this.drawerToggleClickHandler}/>\n        <Backdrop show={this.state.sideDrawerOpen}  clicked={this.backdropClickHandler} />\n        <Route path=\"/\" exact component={Portal} />\n        <Route path=\"/create-quiz\" exact component={CreateQuiz} />\n        <Route path=\"/topics\" exact component={Topics} />\n        <Route path=\"/quiz\" exact component={Quiz} />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst app = (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Topics_Header__2GtJw\",\"Topics\":\"Topics_Topics__tS7mK\",\"TopicList\":\"Topics_TopicList__1bNEk\",\"Topic\":\"Topics_Topic__3F-f8\",\"TopicChoices\":\"Topics_TopicChoices__4DH4a\",\"TopicChoice\":\"Topics_TopicChoice__2IevC\",\"QuizLengthLabel\":\"Topics_QuizLengthLabel__37E94\",\"QuizLength\":\"Topics_QuizLength__GMXgb\",\"ChevronDown\":\"Topics_ChevronDown__tJ5zp\",\"RotateChevron\":\"Topics_RotateChevron__2Y4ZI\"};"],"sourceRoot":""}